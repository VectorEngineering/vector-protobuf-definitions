syntax = "proto3";

package lead_scraper_service.v1;

import "lead_scraper_service/v1/schema.proto";

import "validate/validate.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/Vector/vector-lead-management/protobuf/api-definitions/pkg/generated/lead_scraper_service/v1";


// CreateScrapingJobRequest represents a request to create a new Google Maps scraping job
message CreateScrapingJobRequest {
    // User and context identification
    string user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string org_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string tenant_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];

    // Job configuration
    string name = 4 [(validate.rules).string.min_len = 1];
    repeated string keywords = 5 [(validate.rules).repeated.min_items = 1];
    string lang = 6 [(validate.rules).string.len = 2];  // ISO 639-1 language code
    int32 zoom = 7 [(validate.rules).int32 = {gte: 1, lte: 20}];
    string lat = 8;
    string lon = 9;
    bool fast_mode = 10;
    int32 radius = 11;
    int32 depth = 12 [(validate.rules).int32 = {gte: 1, lte: 10}];
    bool email = 13;
    int32 max_time = 14 [(validate.rules).int32.gt = 0];
    repeated string proxies = 15;
}

// CreateScrapingJobResponse represents the response after creating a scraping job
message CreateScrapingJobResponse {
    string job_id = 1;
    BackgroundJobStatus status = 2;
}

// GetScrapingJobRequest represents a request to get details of a specific scraping job
message GetScrapingJobRequest {
    string user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string job_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string org_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string tenant_id = 4 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// GetScrapingJobResponse represents the response containing scraping job details
message GetScrapingJobResponse {
    ScrapingJob job = 1;
}

// ListScrapingJobsRequest represents a request to list all scraping jobs
message ListScrapingJobsRequest {
    string user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string org_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string tenant_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// ListScrapingJobsResponse represents the response containing a list of scraping jobs
message ListScrapingJobsResponse {
    repeated ScrapingJob jobs = 1;
}

// DeleteScrapingJobRequest represents a request to delete a specific scraping job
message DeleteScrapingJobRequest {
    string user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string job_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string org_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string tenant_id = 4 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// DeleteScrapingJobResponse represents the response after deleting a scraping job
message DeleteScrapingJobResponse {
    bool success = 1;
}

// DownloadScrapingResultsRequest represents a request to download job results
message DownloadScrapingResultsRequest {
    string user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string job_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string org_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    string tenant_id = 4 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// DownloadScrapingResultsResponse represents the response containing job results
message DownloadScrapingResultsResponse {
    bytes content = 1;
    string filename = 2;
    string content_type = 3;
}

// CreateAccountRequest represents a request to create a new account
message CreateAccountRequest {
    // Auth0 user identifier
    string auth_platform_user_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Organization identifier
    string org_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Tenant identifier
    string tenant_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // User's email address
    string email = 4 [
        (validate.rules).string.email = true,
        (google.api.field_behavior) = REQUIRED
    ];
}

// CreateAccountResponse represents the response after creating an account
message CreateAccountResponse {
    // The created account
    Account account = 1;
}

// GetAccountRequest represents a request to get account details
message GetAccountRequest {
    // Account identifier
    uint64 account_id = 1 [
        (validate.rules).uint64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Organization context
    string org_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Tenant context
    string tenant_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// GetAccountResponse represents the response containing account details
message GetAccountResponse {
    // The requested account
    Account account = 1;
}

// UpdateAccountRequest represents a request to update account details
message UpdateAccountRequest {
    Account account = 1 [(validate.rules).message.required = true];
}

// UpdateAccountResponse represents the response after updating an account
message UpdateAccountResponse {
    // The updated account
    Account account = 1;
}

// DeleteAccountRequest represents a request to delete an account
message DeleteAccountRequest {
    // Account identifier
    uint64 account_id = 1 [
        (validate.rules).uint64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Organization context
    string org_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Tenant context
    string tenant_id = 3 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
}

// DeleteAccountResponse represents the response after deleting an account
message DeleteAccountResponse {
    bool success = 1;
}

// ListAccountsRequest represents a request to list accounts
message ListAccountsRequest {
    // Organization context
    string org_id = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Tenant context
    string tenant_id = 2 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];
    
    // Pagination offset
    int32 offset = 3;
    
    // Maximum number of results
    int32 limit = 4 [(validate.rules).int32 = {gt: 0, lte: 100}];
}

// ListAccountsResponse represents the response containing a list of accounts
message ListAccountsResponse {
    // List of accounts
    repeated Account accounts = 1;
    
    // Total number of accounts matching the request
    int32 total = 2;
} 