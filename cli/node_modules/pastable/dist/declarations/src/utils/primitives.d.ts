/** Parse 'true' and 1 as true, 'false' and 0 as false */
export declare function parseStringAsBoolean(str: string): boolean;
export declare const snakeToCamel: (str: string) => string;
export declare const kebabToCamel: (str: string) => string;
export declare const camelToSnake: (str: string) => string;
export declare const camelToKebab: (str: string) => string;
export declare const uncapitalize: (str: string) => string;
export declare const capitalize: (str: string) => string;
/** Limit a number between a [min,max] */
export declare const limit: (nb: number, [min, max]: [number, number]) => number;
export declare const limitStr: (str: string, limit: number, fallback?: string) => string;
export declare const areRectsIntersecting: (a: DOMRect, b: DOMRect) => boolean;
export declare const getSum: (arr: number[]) => number;
export declare const getClosestNbIn: (arr: number[], to: number) => number;
export declare const forceInt: (value: string | number, defaultValue?: number) => number;
export declare const getPageCount: (itemsCount: number, pageSize: number) => number;
export declare const roundTo: (nb: number, pow?: number) => number;
export declare const stringify: <Data = any>(data: Data, spacing?: number, returnError?: boolean) => any;
export declare const safeJSONParse: <Data = any>(data: string, returnError?: boolean) => Data;
export declare const getTotalPages: (totalElements: number, pageSize: number) => number;
export declare function slugify(text: string): string;
//# sourceMappingURL=primitives.d.ts.map