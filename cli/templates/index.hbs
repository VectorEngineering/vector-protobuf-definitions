import { OpenAPIHono } from "@hono/zod-openapi";
import { cors } from "hono/cors";
import { swaggerUI } from "@hono/swagger-ui";
import { requestId } from "hono/request-id";
import { {{basename openApiSpec.info.title}}Router } from "./routes";
import type { Env } from "./types";
import type { MiddlewareHandler } from "hono";
import { trimTrailingSlash } from 'hono/trailing-slash'
import { timing, setMetric, startTime, endTime } from 'hono/timing'
import type { TimingVariables } from 'hono/timing'
// Import user-defined middleware
import * as middleware from "./middleware";
import { timeout } from 'hono/timeout'
import { secureHeaders } from 'hono/secure-headers'
import { prettyJSON } from 'hono/pretty-json'
import { csrf } from 'hono/csrf'
import { compress } from 'hono/compress'

type Variables = TimingVariables

const app = new OpenAPIHono<{
  Bindings: Env;
  Variables: Variables;
}>(
  {
    defaultHook: (result, c) => {
      if (!result.success) {
        return c.json({ success: false, errors: result.error.errors }, 422);
      }
    },
  }
);

// CORS middleware
app.use("*", cors({
  origin: "*",
  allowMethods: [{{#each openApiSpec.paths}}{{#with this}}{{#if get}}"GET",{{/if}}{{#if post}}"POST",{{/if}}{{#if put}}"PUT",{{/if}}{{#if delete}}"DELETE",{{/if}}{{/with}}{{/each}}"OPTIONS"],
  allowHeaders: ["Content-Type", "Authorization"],
  exposeHeaders: ["Content-Length", "X-Request-Id"],
  maxAge: 86400,
}));

// Request ID middleware
app.use("*", requestId());

// Append trailing slash middleware
app.use("*", trimTrailingSlash())

// Timing middleware
app.use("*", timing());

// Timeout middleware
app.use('*', timeout(5000))

// Secure headers middleware
app.use("*", secureHeaders())

// Pretty JSON middleware
app.use("*", prettyJSON())

// CSRF middleware
app.use("*", csrf())

// Compress middleware
app.use("*", compress())

// Apply user-defined middleware
Object.values(middleware).forEach(mw => {
  if (typeof mw === 'function') {
    app.use("*", mw as MiddlewareHandler<{ Bindings: Env }>);
  }
});

// Swagger UI
app.get("/", swaggerUI({
  url: "/openapi",
}));

// OpenAPI documentation
app.doc("/openapi", {
  openapi: "3.1.0",
  info: {
    version: "{{openApiSpec.info.version}}",
    title: "{{openApiSpec.info.title}}",
  },
});

// Register security scheme
app.openAPIRegistry.registerComponent("securitySchemes", "Bearer", {
  type: "http",
  scheme: "bearer",
});

// API routes
app.route("/api", {{basename openApiSpec.info.title}}Router);

export type AppType = typeof app;
export default app; 