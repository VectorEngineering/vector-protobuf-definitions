/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LinkedAccountingAccount } from './linkedAccountingAccount';
import { MergeLinkedAccountToken } from './mergeLinkedAccountToken';

export class AccountingIntegrationMergeLink {
  /**
   * Unique identifier for the merge link.
   */
  'id'?: string;
  /**
   * The integration name.
   */
  'integration'?: string;
  /**
   * The slug for the integration.
   */
  'integrationSlug'?: string;
  /**
   * The category of the integration.
   */
  'category'?: string;
  /**
   * Identifier of the end user\'s origin.
   */
  'endUserOriginId'?: string;
  /**
   * Name of the end user\'s organization.
   */
  'endUserOrganizationName'?: string;
  /**
   * Email address of the end user.
   */
  'endUserEmailAddress'?: string;
  /**
   * Status of the merge link.
   */
  'status'?: string;
  /**
   * URL for the webhook listener associated with the merge link.
   */
  'webhookListenerUrl'?: string;
  /**
   * Indicates whether the merge link is a duplicate.
   */
  'isDuplicate'?: boolean;
  'token'?: MergeLinkedAccountToken;
  /**
   * Name of the integration.
   */
  'integrationName'?: string;
  /**
   * URL of the integration\'s image.
   */
  'integrationImage'?: string;
  /**
   * URL of the integration\'s square image.
   */
  'integrationSquareImage'?: string;
  'account'?: LinkedAccountingAccount;
  /**
   * Identifier of the merged linked account.
   */
  'mergeLinkedAccountId'?: string;
  /**
   * Timestamp indicating when the merge link was last modified.
   */
  'lastModifiedAt'?: Date;
  'deletedAt'?: Date;
  'createdAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'integration',
      baseName: 'integration',
      type: 'string',
    },
    {
      name: 'integrationSlug',
      baseName: 'integrationSlug',
      type: 'string',
    },
    {
      name: 'category',
      baseName: 'category',
      type: 'string',
    },
    {
      name: 'endUserOriginId',
      baseName: 'endUserOriginId',
      type: 'string',
    },
    {
      name: 'endUserOrganizationName',
      baseName: 'endUserOrganizationName',
      type: 'string',
    },
    {
      name: 'endUserEmailAddress',
      baseName: 'endUserEmailAddress',
      type: 'string',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'string',
    },
    {
      name: 'webhookListenerUrl',
      baseName: 'webhookListenerUrl',
      type: 'string',
    },
    {
      name: 'isDuplicate',
      baseName: 'isDuplicate',
      type: 'boolean',
    },
    {
      name: 'token',
      baseName: 'token',
      type: 'MergeLinkedAccountToken',
    },
    {
      name: 'integrationName',
      baseName: 'integrationName',
      type: 'string',
    },
    {
      name: 'integrationImage',
      baseName: 'integrationImage',
      type: 'string',
    },
    {
      name: 'integrationSquareImage',
      baseName: 'integrationSquareImage',
      type: 'string',
    },
    {
      name: 'account',
      baseName: 'account',
      type: 'LinkedAccountingAccount',
    },
    {
      name: 'mergeLinkedAccountId',
      baseName: 'mergeLinkedAccountId',
      type: 'string',
    },
    {
      name: 'lastModifiedAt',
      baseName: 'lastModifiedAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return AccountingIntegrationMergeLink.attributeTypeMap;
  }
}
