/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ActorType } from './actorType';
import { AuditEventType } from './auditEventType';
import { BusinessAccount } from './businessAccount';
import { EntityType } from './entityType';
import { SeverityLevel } from './severityLevel';
import { Team } from './team';
import { UserAccount } from './userAccount';

export class AuditLog {
  /**
   * Unique identifier for the audit log event.
   */
  'id'?: string;
  'actorType'?: ActorType;
  'eventType'?: AuditEventType;
  'entityType'?: EntityType;
  /**
   * ID of the entity affected.
   */
  'entityId'?: string;
  /**
   * Summary of the changes in structured format.
   */
  'changeSummary'?: object;
  /**
   * Additional metadata in structured format.
   */
  'metadata'?: object;
  /**
   * IP address from where the action was performed.
   */
  'ipAddress'?: string;
  /**
   * User agent string.
   */
  'userAgent'?: string;
  /**
   * Geolocation information.
   */
  'geoLocation'?: string;
  /**
   * Session ID associated with the action.
   */
  'sessionId'?: string;
  /**
   * Timestamp when the log was created.
   */
  'createdAt'?: Date;
  'severity'?: SeverityLevel;
  /**
   * Unique request ID for correlating logs.
   */
  'requestId'?: string;
  /**
   * Device information from where the action was performed.
   */
  'deviceInfo'?: string;
  /**
   * Platform or OS of the device.
   */
  'platform'?: string;
  'userAccountActor'?: UserAccount;
  'businessAccountActor'?: BusinessAccount;
  'teamActor'?: Team;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'actorType',
      baseName: 'actorType',
      type: 'ActorType',
    },
    {
      name: 'eventType',
      baseName: 'eventType',
      type: 'AuditEventType',
    },
    {
      name: 'entityType',
      baseName: 'entityType',
      type: 'EntityType',
    },
    {
      name: 'entityId',
      baseName: 'entityId',
      type: 'string',
    },
    {
      name: 'changeSummary',
      baseName: 'changeSummary',
      type: 'object',
    },
    {
      name: 'metadata',
      baseName: 'metadata',
      type: 'object',
    },
    {
      name: 'ipAddress',
      baseName: 'ipAddress',
      type: 'string',
    },
    {
      name: 'userAgent',
      baseName: 'userAgent',
      type: 'string',
    },
    {
      name: 'geoLocation',
      baseName: 'geoLocation',
      type: 'string',
    },
    {
      name: 'sessionId',
      baseName: 'sessionId',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'severity',
      baseName: 'severity',
      type: 'SeverityLevel',
    },
    {
      name: 'requestId',
      baseName: 'requestId',
      type: 'string',
    },
    {
      name: 'deviceInfo',
      baseName: 'deviceInfo',
      type: 'string',
    },
    {
      name: 'platform',
      baseName: 'platform',
      type: 'string',
    },
    {
      name: 'userAccountActor',
      baseName: 'userAccountActor',
      type: 'UserAccount',
    },
    {
      name: 'businessAccountActor',
      baseName: 'businessAccountActor',
      type: 'BusinessAccount',
    },
    {
      name: 'teamActor',
      baseName: 'teamActor',
      type: 'Team',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return AuditLog.attributeTypeMap;
  }
}

export namespace AuditLog {}
