/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountStatus } from './accountStatus';
import { Address } from './address';
import { AuditLog } from './auditLog';
import { OrgAPIKey } from './orgAPIKey';
import { Organization } from './organization';
import { ProfileType } from './profileType';
import { Settings } from './settings';
import { Tags } from './tags';
import { Tenant } from './tenant';

/**
 * BusinessAccount represents a business account within the context of Solomon AI.
 */
export class BusinessAccount {
  /**
   * Unique identifier for the business account.
   */
  'id'?: string;
  /**
   * Email associated with the business account.
   */
  'email'?: string;
  /**
   * Username for the business account. Must be at least 10 characters long.
   */
  'username'?: string;
  /**
   * Phone number associated with the business account.
   */
  'phoneNumber'?: string;
  /**
   * Short description of the business account. Maximum of 200 characters.
   */
  'bio'?: string;
  /**
   * Headline for the profile of the business account.
   */
  'headline'?: string;
  /**
   * Profile image associated with the business account.
   */
  'profileImageUrl'?: string;
  /**
   * Name of the company associated with the business account.
   */
  'companyName'?: string;
  /**
   * Date when the company associated with the business account was established.
   */
  'companyEstablishedDate'?: string;
  /**
   * Industry type of the company associated with the business account.
   */
  'companyIndustryType'?: string;
  /**
   * Website URL of the company associated with the business account.
   */
  'companyWebsiteUrl'?: string;
  /**
   * Description of the company associated with the business account.
   */
  'companyDescription'?: string;
  /**
   * Indicates whether the business account is active.
   */
  'isActive'?: boolean;
  /**
   * Indicates whether the business account is private.
   */
  'isPrivate'?: boolean;
  /**
   * Indicates whether the email associated with the business account has been verified.
   */
  'isEmailVerified'?: boolean;
  'status'?: AccountStatus;
  /**
   * Metadata in JSON format.
   */
  'metadata'?: object;
  /**
   * Timestamp indicating when the business account was created.
   */
  'createdAt'?: Date;
  /**
   * Timestamp indicating when the email for the business account was verified.
   */
  'verifiedAt'?: Date;
  /**
   * Timestamp of the last access.
   */
  'lastAccess'?: Date;
  /**
   * Identifier for the associated authentication service account.
   */
  'authnAccountId'?: string;
  /**
   * auth0 user ID associated with the business account.
   */
  'supabaseAuth0UserId'?: string;
  /**
   * Algolia user ID.
   */
  'algoliaUserId'?: string;
  /**
   * Base directory for user files.
   */
  'baseDirectory'?: string;
  /**
   * S3 bucket location.
   */
  'bucketLocation'?: string;
  /**
   * S3 bucket name.
   */
  'bucketName'?: string;
  /**
   * AWS region.
   */
  'region'?: string;
  /**
   * Storage quota for the account.
   */
  'storageQuota'?: string;
  /**
   * Used storage by the account.
   */
  'usedStorage'?: string;
  'address'?: Address;
  /**
   * Tags associated with the business account. Between 1 and 10 tags are allowed.
   */
  'tags'?: Array<Tags>;
  'settings'?: Settings;
  'accountType'?: ProfileType;
  'organization'?: Organization;
  'tenant'?: Tenant;
  /**
   * Addresses associated with the business account.
   */
  'addresses'?: Array<Address>;
  /**
   * Audit logs for the account.
   */
  'auditLogs'?: Array<AuditLog>;
  /**
   * Org API keys associated with the business account.
   */
  'orgApiKeys'?: Array<OrgAPIKey>;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'email',
      baseName: 'email',
      type: 'string',
    },
    {
      name: 'username',
      baseName: 'username',
      type: 'string',
    },
    {
      name: 'phoneNumber',
      baseName: 'phoneNumber',
      type: 'string',
    },
    {
      name: 'bio',
      baseName: 'bio',
      type: 'string',
    },
    {
      name: 'headline',
      baseName: 'headline',
      type: 'string',
    },
    {
      name: 'profileImageUrl',
      baseName: 'profileImageUrl',
      type: 'string',
    },
    {
      name: 'companyName',
      baseName: 'companyName',
      type: 'string',
    },
    {
      name: 'companyEstablishedDate',
      baseName: 'companyEstablishedDate',
      type: 'string',
    },
    {
      name: 'companyIndustryType',
      baseName: 'companyIndustryType',
      type: 'string',
    },
    {
      name: 'companyWebsiteUrl',
      baseName: 'companyWebsiteUrl',
      type: 'string',
    },
    {
      name: 'companyDescription',
      baseName: 'companyDescription',
      type: 'string',
    },
    {
      name: 'isActive',
      baseName: 'isActive',
      type: 'boolean',
    },
    {
      name: 'isPrivate',
      baseName: 'isPrivate',
      type: 'boolean',
    },
    {
      name: 'isEmailVerified',
      baseName: 'isEmailVerified',
      type: 'boolean',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'AccountStatus',
    },
    {
      name: 'metadata',
      baseName: 'metadata',
      type: 'object',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'verifiedAt',
      baseName: 'verifiedAt',
      type: 'Date',
    },
    {
      name: 'lastAccess',
      baseName: 'lastAccess',
      type: 'Date',
    },
    {
      name: 'authnAccountId',
      baseName: 'authnAccountId',
      type: 'string',
    },
    {
      name: 'supabaseAuth0UserId',
      baseName: 'supabaseAuth0UserId',
      type: 'string',
    },
    {
      name: 'algoliaUserId',
      baseName: 'algoliaUserId',
      type: 'string',
    },
    {
      name: 'baseDirectory',
      baseName: 'baseDirectory',
      type: 'string',
    },
    {
      name: 'bucketLocation',
      baseName: 'bucketLocation',
      type: 'string',
    },
    {
      name: 'bucketName',
      baseName: 'bucketName',
      type: 'string',
    },
    {
      name: 'region',
      baseName: 'region',
      type: 'string',
    },
    {
      name: 'storageQuota',
      baseName: 'storageQuota',
      type: 'string',
    },
    {
      name: 'usedStorage',
      baseName: 'usedStorage',
      type: 'string',
    },
    {
      name: 'address',
      baseName: 'address',
      type: 'Address',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<Tags>',
    },
    {
      name: 'settings',
      baseName: 'settings',
      type: 'Settings',
    },
    {
      name: 'accountType',
      baseName: 'accountType',
      type: 'ProfileType',
    },
    {
      name: 'organization',
      baseName: 'organization',
      type: 'Organization',
    },
    {
      name: 'tenant',
      baseName: 'tenant',
      type: 'Tenant',
    },
    {
      name: 'addresses',
      baseName: 'addresses',
      type: 'Array<Address>',
    },
    {
      name: 'auditLogs',
      baseName: 'auditLogs',
      type: 'Array<AuditLog>',
    },
    {
      name: 'orgApiKeys',
      baseName: 'orgApiKeys',
      type: 'Array<OrgAPIKey>',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return BusinessAccount.attributeTypeMap;
  }
}

export namespace BusinessAccount {}
