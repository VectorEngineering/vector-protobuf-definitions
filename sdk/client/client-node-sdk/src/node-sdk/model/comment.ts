/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountType } from './accountType';
import { CommentReply } from './commentReply';
import { Media } from './media';
import { Note } from './note';
import { Reaction } from './reaction';

export class Comment {
  'id'?: string;
  'backendPlatformUserId'?: string;
  'profileId'?: string;
  'media'?: Media;
  'mentions'?: Array<string>;
  'hashtags'?: Array<string>;
  'createdAt'?: string;
  'content'?: string;
  'replies'?: Array<CommentReply>;
  'extra'?: { [key: string]: string | undefined };
  'authorUsername': string;
  'authorProfileImage': string;
  'affinityScore'?: string;
  'qualityScore'?: string;
  'userIdToAffinityScoreMap'?: { [key: string]: string | undefined };
  'userIdToReportsMap'?: { [key: string]: string | undefined };
  'authorAccountType'?: AccountType;
  'userIdToReactionMap'?: { [key: string]: Reaction | undefined };
  'notes'?: Array<Note>;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'backendPlatformUserId',
      baseName: 'backendPlatformUserId',
      type: 'string',
    },
    {
      name: 'profileId',
      baseName: 'profileId',
      type: 'string',
    },
    {
      name: 'media',
      baseName: 'media',
      type: 'Media',
    },
    {
      name: 'mentions',
      baseName: 'mentions',
      type: 'Array<string>',
    },
    {
      name: 'hashtags',
      baseName: 'hashtags',
      type: 'Array<string>',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'string',
    },
    {
      name: 'content',
      baseName: 'content',
      type: 'string',
    },
    {
      name: 'replies',
      baseName: 'replies',
      type: 'Array<CommentReply>',
    },
    {
      name: 'extra',
      baseName: 'extra',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'authorUsername',
      baseName: 'authorUsername',
      type: 'string',
    },
    {
      name: 'authorProfileImage',
      baseName: 'authorProfileImage',
      type: 'string',
    },
    {
      name: 'affinityScore',
      baseName: 'affinityScore',
      type: 'string',
    },
    {
      name: 'qualityScore',
      baseName: 'qualityScore',
      type: 'string',
    },
    {
      name: 'userIdToAffinityScoreMap',
      baseName: 'userIdToAffinityScoreMap',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'userIdToReportsMap',
      baseName: 'userIdToReportsMap',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'authorAccountType',
      baseName: 'authorAccountType',
      type: 'AccountType',
    },
    {
      name: 'userIdToReactionMap',
      baseName: 'userIdToReactionMap',
      type: '{ [key: string]: Reaction | undefined; }',
    },
    {
      name: 'notes',
      baseName: 'notes',
      type: 'Array<Note>',
    },
  ];

  static getAttributeTypeMap() {
    return Comment.attributeTypeMap;
  }
}

export namespace Comment {}
