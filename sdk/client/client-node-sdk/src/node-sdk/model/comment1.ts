/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CommentEdit } from './commentEdit';

/**
 * Comment represents a single comment in a thread.  Features: - User attribution - Content handling - Timestamps - Comment status
 */
export class Comment1 {
  'id'?: string;
  'threadId'?: string;
  'tenantId'?: string;
  'authorName'?: string;
  'content'?: string;
  'createdAt'?: Date;
  'updatedAt'?: Date;
  'parentCommentId'?: string;
  'status'?: string;
  'reactions'?: { [key: string]: number | undefined };
  'edits'?: Array<CommentEdit>;
  'deletedAt'?: Date;
  'tags'?: Array<string>;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'threadId',
      baseName: 'threadId',
      type: 'string',
    },
    {
      name: 'tenantId',
      baseName: 'tenantId',
      type: 'string',
    },
    {
      name: 'authorName',
      baseName: 'authorName',
      type: 'string',
    },
    {
      name: 'content',
      baseName: 'content',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'updatedAt',
      baseName: 'updatedAt',
      type: 'Date',
    },
    {
      name: 'parentCommentId',
      baseName: 'parentCommentId',
      type: 'string',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'string',
    },
    {
      name: 'reactions',
      baseName: 'reactions',
      type: '{ [key: string]: number | undefined; }',
    },
    {
      name: 'edits',
      baseName: 'edits',
      type: 'Array<CommentEdit>',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<string>',
    },
  ];

  static getAttributeTypeMap() {
    return Comment1.attributeTypeMap;
  }
}
