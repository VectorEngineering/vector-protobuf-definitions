/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ProfileType } from './profileType';

/**
 * CreateUserV2Request represents the request object for creating a user account in the user service (version 2). This message encapsulates all necessary information to create a user account, including authentication details, contact information, and profile preferences.
 */
export class CreateUserV2Request {
  /**
   * The Supabase authentication user ID associated with this account. This field is required and must not be empty.  @required This field must be provided when creating a user account. @validate Ensures that the Supabase auth user ID is not empty. @example \"auth0|5f7d8ff9d8f1f0006f3e9f1e\"
   */
  'supabaseAuthUserId': string;
  /**
   * Email address associated with the user account. This field must contain a valid email address.  @validate Ensures that the provided string is a valid email address. @example \"john.doe@example.com\"
   */
  'email'?: string;
  /**
   * Username associated with the account. This field is required and must not be empty.  @required This field must be provided when creating a user account. @validate Ensures that the username is not empty. @example \"johndoe2023\"
   */
  'username': string;
  'profileType': ProfileType;
  /**
   * URL of the user\'s profile image. This field is required and must be a valid URI.  @required This field must be provided when creating a user account. @validate Ensures that the provided URL is a valid URI. @example \"https://example.com/profile_images/johndoe.jpg\"
   */
  'profileImageUrl': string;
  'organizationId': string;
  'tenantId': string;
  'companyName': string;
  'isPrivate': boolean;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'supabaseAuthUserId',
      baseName: 'supabaseAuthUserId',
      type: 'string',
    },
    {
      name: 'email',
      baseName: 'email',
      type: 'string',
    },
    {
      name: 'username',
      baseName: 'username',
      type: 'string',
    },
    {
      name: 'profileType',
      baseName: 'profileType',
      type: 'ProfileType',
    },
    {
      name: 'profileImageUrl',
      baseName: 'profileImageUrl',
      type: 'string',
    },
    {
      name: 'organizationId',
      baseName: 'organizationId',
      type: 'string',
    },
    {
      name: 'tenantId',
      baseName: 'tenantId',
      type: 'string',
    },
    {
      name: 'companyName',
      baseName: 'companyName',
      type: 'string',
    },
    {
      name: 'isPrivate',
      baseName: 'isPrivate',
      type: 'boolean',
    },
  ];

  static getAttributeTypeMap() {
    return CreateUserV2Request.attributeTypeMap;
  }
}

export namespace CreateUserV2Request {}
