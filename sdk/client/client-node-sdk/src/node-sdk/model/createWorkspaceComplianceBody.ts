/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { WorkspaceCompliance } from './workspaceCompliance';

/**
 * CreateWorkspaceComplianceRequest represents a request to set up or update compliance settings for a workspace.  Required Fields: - user_id: The ID of the user creating/updating the settings - workspace_id: The workspace to configure compliance for - compliance: The compliance configuration to apply - org_id: The organization context ID - tenant_id: The tenant context ID  The compliance settings can include: - Data retention policies - Access control requirements - Audit logging configuration - Security controls - Regulatory compliance flags  Example: ```protobuf message request {   user_id: \"user123\"   workspace_id: 456   compliance: {     retention_period_days: 90,     require_2fa: true,     audit_logging_enabled: true   }   org_id: 789   tenant_id: 101112 } ```
 */
export class CreateWorkspaceComplianceBody {
  'userId': string;
  'compliance': WorkspaceCompliance;
  'orgId': string;
  'tenantId': string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'userId',
      baseName: 'userId',
      type: 'string',
    },
    {
      name: 'compliance',
      baseName: 'compliance',
      type: 'WorkspaceCompliance',
    },
    {
      name: 'orgId',
      baseName: 'orgId',
      type: 'string',
    },
    {
      name: 'tenantId',
      baseName: 'tenantId',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return CreateWorkspaceComplianceBody.attributeTypeMap;
  }
}
