/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountStatements } from './accountStatements';
import { Apr } from './apr';
import { BankAccountStatus } from './bankAccountStatus';
import { BankAccountType } from './bankAccountType';
import { PlaidAccountRecurringTransaction } from './plaidAccountRecurringTransaction';
import { PlaidAccountTransaction } from './plaidAccountTransaction';
import { Pocket } from './pocket';

export class CreditAccount {
  'id'?: string;
  'userId'?: string;
  'name'?: string;
  'number'?: string;
  'type'?: BankAccountType;
  'balance'?: number;
  'currentFunds'?: number;
  'balanceLimit'?: string;
  'plaidAccountId'?: string;
  'subtype'?: string;
  'isOverdue'?: boolean;
  'lastPaymentAmount'?: number;
  'lastPaymentDate'?: string;
  'lastStatementIssueDate'?: string;
  'minimumAmountDueDate'?: number;
  'nextPaymentDate'?: string;
  'aprs'?: Array<Apr>;
  'lastStatementBalance'?: number;
  'minimumPaymentAmount'?: number;
  'nextPaymentDueDate'?: string;
  'status'?: BankAccountStatus;
  'transactions'?: Array<PlaidAccountTransaction>;
  'recurringTransactions'?: Array<PlaidAccountRecurringTransaction>;
  'pockets'?: Array<Pocket>;
  'statements'?: Array<AccountStatements>;
  'plaidAccountType'?: string;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'userId',
      baseName: 'userId',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'number',
      baseName: 'number',
      type: 'string',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'BankAccountType',
    },
    {
      name: 'balance',
      baseName: 'balance',
      type: 'number',
    },
    {
      name: 'currentFunds',
      baseName: 'currentFunds',
      type: 'number',
    },
    {
      name: 'balanceLimit',
      baseName: 'balanceLimit',
      type: 'string',
    },
    {
      name: 'plaidAccountId',
      baseName: 'plaidAccountId',
      type: 'string',
    },
    {
      name: 'subtype',
      baseName: 'subtype',
      type: 'string',
    },
    {
      name: 'isOverdue',
      baseName: 'isOverdue',
      type: 'boolean',
    },
    {
      name: 'lastPaymentAmount',
      baseName: 'lastPaymentAmount',
      type: 'number',
    },
    {
      name: 'lastPaymentDate',
      baseName: 'lastPaymentDate',
      type: 'string',
    },
    {
      name: 'lastStatementIssueDate',
      baseName: 'lastStatementIssueDate',
      type: 'string',
    },
    {
      name: 'minimumAmountDueDate',
      baseName: 'minimumAmountDueDate',
      type: 'number',
    },
    {
      name: 'nextPaymentDate',
      baseName: 'nextPaymentDate',
      type: 'string',
    },
    {
      name: 'aprs',
      baseName: 'aprs',
      type: 'Array<Apr>',
    },
    {
      name: 'lastStatementBalance',
      baseName: 'lastStatementBalance',
      type: 'number',
    },
    {
      name: 'minimumPaymentAmount',
      baseName: 'minimumPaymentAmount',
      type: 'number',
    },
    {
      name: 'nextPaymentDueDate',
      baseName: 'nextPaymentDueDate',
      type: 'string',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'BankAccountStatus',
    },
    {
      name: 'transactions',
      baseName: 'transactions',
      type: 'Array<PlaidAccountTransaction>',
    },
    {
      name: 'recurringTransactions',
      baseName: 'recurringTransactions',
      type: 'Array<PlaidAccountRecurringTransaction>',
    },
    {
      name: 'pockets',
      baseName: 'pockets',
      type: 'Array<Pocket>',
    },
    {
      name: 'statements',
      baseName: 'statements',
      type: 'Array<AccountStatements>',
    },
    {
      name: 'plaidAccountType',
      baseName: 'plaidAccountType',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return CreditAccount.attributeTypeMap;
  }
}

export namespace CreditAccount {}
