/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CreditNoteLineItem } from './creditNoteLineItem';

/**
 * A CreditNote is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A CreditNote can be applied to Accounts Receivable Invoices to decrease the overall amount of the Invoice.
 */
export class CreditNote {
  'id'?: string;
  /**
   * The third-party API ID of the matching object.
   */
  'remoteId'?: string;
  /**
   * The credit note\'s transaction date.  Consider using google.protobuf.Timestamp
   */
  'transactionDate'?: Date;
  /**
   * The credit note\'s status.
   */
  'status'?: string;
  /**
   * The credit note\'s number.
   */
  'number'?: string;
  /**
   * The credit note\'s contact.
   */
  'contact'?: string;
  /**
   * The company the credit note belongs to.
   */
  'company'?: string;
  /**
   * The credit note\'s exchange rate.  Consider using double or float if this represents a number
   */
  'exchangeRate'?: string;
  /**
   * The credit note\'s total amount.
   */
  'totalAmount'?: number;
  /**
   * The amount of value remaining in the credit note that the customer can use.
   */
  'remainingCredit'?: number;
  'lineItems'?: Array<CreditNoteLineItem>;
  'trackingCategories'?: Array<string>;
  'currency'?: string;
  'remoteCreatedAt'?: Date;
  'remoteUpdatedAt'?: Date;
  /**
   * These are IDs
   */
  'paymentIds'?: Array<string>;
  'remoteWasDeleted'?: boolean;
  /**
   * The accounting period that the CreditNote was generated in.
   */
  'accountingPeriod'?: string;
  'modifiedAt'?: Date;
  'mergeRecordId'?: string;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'remoteId',
      baseName: 'remoteId',
      type: 'string',
    },
    {
      name: 'transactionDate',
      baseName: 'transactionDate',
      type: 'Date',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'string',
    },
    {
      name: 'number',
      baseName: 'number',
      type: 'string',
    },
    {
      name: 'contact',
      baseName: 'contact',
      type: 'string',
    },
    {
      name: 'company',
      baseName: 'company',
      type: 'string',
    },
    {
      name: 'exchangeRate',
      baseName: 'exchangeRate',
      type: 'string',
    },
    {
      name: 'totalAmount',
      baseName: 'totalAmount',
      type: 'number',
    },
    {
      name: 'remainingCredit',
      baseName: 'remainingCredit',
      type: 'number',
    },
    {
      name: 'lineItems',
      baseName: 'lineItems',
      type: 'Array<CreditNoteLineItem>',
    },
    {
      name: 'trackingCategories',
      baseName: 'trackingCategories',
      type: 'Array<string>',
    },
    {
      name: 'currency',
      baseName: 'currency',
      type: 'string',
    },
    {
      name: 'remoteCreatedAt',
      baseName: 'remoteCreatedAt',
      type: 'Date',
    },
    {
      name: 'remoteUpdatedAt',
      baseName: 'remoteUpdatedAt',
      type: 'Date',
    },
    {
      name: 'paymentIds',
      baseName: 'paymentIds',
      type: 'Array<string>',
    },
    {
      name: 'remoteWasDeleted',
      baseName: 'remoteWasDeleted',
      type: 'boolean',
    },
    {
      name: 'accountingPeriod',
      baseName: 'accountingPeriod',
      type: 'string',
    },
    {
      name: 'modifiedAt',
      baseName: 'modifiedAt',
      type: 'Date',
    },
    {
      name: 'mergeRecordId',
      baseName: 'mergeRecordId',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return CreditNote.attributeTypeMap;
  }
}
