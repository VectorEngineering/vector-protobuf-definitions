/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ExpenseLine } from './expenseLine';

/**
 * The Expense object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each Expense object is dedicated to a grouping of expenses, with each expense recorded in the lines object.  The Expense object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and Expense objects with a positive amount are refunds to those purchases.
 */
export class Expense {
  'id'?: string;
  /**
   * The third-party API ID of the matching object.
   */
  'remoteId'?: string;
  /**
   * When the transaction occurred.  Consider using google.protobuf.Timestamp
   */
  'transactionDate'?: Date;
  /**
   * When the expense was created.  Consider using google.protobuf.Timestamp
   */
  'remoteCreatedAt'?: Date;
  /**
   * The expense\'s payment account.
   */
  'account'?: string;
  /**
   * The expense\'s contact.
   */
  'contact'?: string;
  /**
   * The expense\'s total amount.
   */
  'totalAmount'?: number;
  /**
   * The expense\'s total amount before tax.
   */
  'subTotal'?: number;
  /**
   * The expense\'s total tax amount.
   */
  'totalTaxAmount'?: number;
  'currency'?: string;
  /**
   * The expense\'s exchange rate.  Consider using double or float if this represents a number
   */
  'exchangeRate'?: string;
  /**
   * The company the expense belongs to.
   */
  'company'?: string;
  /**
   * The expense\'s private note.
   */
  'memo'?: string;
  /**
   * The ExpenseLine object is used to represent an expense\'s line items.
   */
  'lines'?: Array<ExpenseLine>;
  'trackingCategories'?: Array<string>;
  /**
   * Indicates whether or not this object has been deleted by third party webhooks.
   */
  'remoteWasDeleted'?: boolean;
  /**
   * The accounting period that the Expense was generated in.
   */
  'accountingPeriod'?: string;
  /**
   * Consider using google.protobuf.Timestamp
   */
  'modifiedAt'?: Date;
  'mergeRecordId'?: string;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'remoteId',
      baseName: 'remoteId',
      type: 'string',
    },
    {
      name: 'transactionDate',
      baseName: 'transactionDate',
      type: 'Date',
    },
    {
      name: 'remoteCreatedAt',
      baseName: 'remoteCreatedAt',
      type: 'Date',
    },
    {
      name: 'account',
      baseName: 'account',
      type: 'string',
    },
    {
      name: 'contact',
      baseName: 'contact',
      type: 'string',
    },
    {
      name: 'totalAmount',
      baseName: 'totalAmount',
      type: 'number',
    },
    {
      name: 'subTotal',
      baseName: 'subTotal',
      type: 'number',
    },
    {
      name: 'totalTaxAmount',
      baseName: 'totalTaxAmount',
      type: 'number',
    },
    {
      name: 'currency',
      baseName: 'currency',
      type: 'string',
    },
    {
      name: 'exchangeRate',
      baseName: 'exchangeRate',
      type: 'string',
    },
    {
      name: 'company',
      baseName: 'company',
      type: 'string',
    },
    {
      name: 'memo',
      baseName: 'memo',
      type: 'string',
    },
    {
      name: 'lines',
      baseName: 'lines',
      type: 'Array<ExpenseLine>',
    },
    {
      name: 'trackingCategories',
      baseName: 'trackingCategories',
      type: 'Array<string>',
    },
    {
      name: 'remoteWasDeleted',
      baseName: 'remoteWasDeleted',
      type: 'boolean',
    },
    {
      name: 'accountingPeriod',
      baseName: 'accountingPeriod',
      type: 'string',
    },
    {
      name: 'modifiedAt',
      baseName: 'modifiedAt',
      type: 'Date',
    },
    {
      name: 'mergeRecordId',
      baseName: 'mergeRecordId',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return Expense.attributeTypeMap;
  }
}
