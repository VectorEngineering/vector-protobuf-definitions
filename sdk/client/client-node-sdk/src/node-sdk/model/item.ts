/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
 * The Item object refers to the goods involved in a transaction.
 */
export class Item {
  'id'?: string;
  /**
   * The third-party API ID of the matching object.
   */
  'remoteId'?: string;
  /**
   * The item\'s name.
   */
  'name'?: string;
  'status'?: string;
  /**
   * The item\'s unit price.
   */
  'unitPrice'?: number;
  /**
   * The price at which the item is purchased from a vendor.
   */
  'purchasePrice'?: number;
  /**
   * References the default account used to record a purchase of the item.
   */
  'purchaseAccount'?: string;
  /**
   * References the default account used to record a sale.
   */
  'salesAccount'?: string;
  /**
   * The company the item belongs to.
   */
  'company'?: string;
  /**
   * When the third party\'s item note was updated.
   */
  'remoteUpdatedAt'?: Date;
  /**
   * Indicates whether or not this object has been deleted by third party webhooks.
   */
  'remoteWasDeleted'?: boolean;
  'modifiedAt'?: Date;
  'mergeRecordId'?: string;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'remoteId',
      baseName: 'remoteId',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'string',
    },
    {
      name: 'unitPrice',
      baseName: 'unitPrice',
      type: 'number',
    },
    {
      name: 'purchasePrice',
      baseName: 'purchasePrice',
      type: 'number',
    },
    {
      name: 'purchaseAccount',
      baseName: 'purchaseAccount',
      type: 'string',
    },
    {
      name: 'salesAccount',
      baseName: 'salesAccount',
      type: 'string',
    },
    {
      name: 'company',
      baseName: 'company',
      type: 'string',
    },
    {
      name: 'remoteUpdatedAt',
      baseName: 'remoteUpdatedAt',
      type: 'Date',
    },
    {
      name: 'remoteWasDeleted',
      baseName: 'remoteWasDeleted',
      type: 'boolean',
    },
    {
      name: 'modifiedAt',
      baseName: 'modifiedAt',
      type: 'Date',
    },
    {
      name: 'mergeRecordId',
      baseName: 'mergeRecordId',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return Item.attributeTypeMap;
  }
}
