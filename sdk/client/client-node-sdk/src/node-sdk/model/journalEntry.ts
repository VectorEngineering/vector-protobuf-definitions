/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { JournalLine } from './journalLine';

/**
 * A JournalEntry is a record of a transaction or event that is entered into a company\'s accounting system.  The JournalEntry common model contains records that are automatically created as a result of a certain type of transaction, like an Invoice, and records that are manually created against a companyâ€™s ledger.  The lines of a given JournalEntry object should always sum to 0. A positive net_amount means the line represents a debit and a negative net_amount represents a credit.
 */
export class JournalEntry {
  'id'?: string;
  'remoteId'?: string;
  /**
   * The journal entry\'s transaction date.
   */
  'transactionDate'?: Date;
  /**
   * When the third party\'s journal entry was created.
   */
  'remoteCreatedAt'?: Date;
  'remoteUpdatedAt'?: Date;
  'payments'?: Array<string>;
  /**
   * The journal entry\'s private note.
   */
  'memo'?: string;
  'currency'?: string;
  /**
   * The journal entry\'s exchange rate.  Assuming string due to the example provided, but could be float or double.
   */
  'exchangeRate'?: string;
  /**
   * The company the journal entry belongs to.
   */
  'company'?: string;
  /**
   * The JournalLine object is used to represent a journal entry\'s line items.
   */
  'lines'?: Array<JournalLine>;
  /**
   * Reference number for identifying journal entries.
   */
  'journalNumber'?: string;
  'trackingCategories'?: Array<string>;
  'remoteWasDeleted'?: boolean;
  'postingStatus'?: string;
  /**
   * The accounting period that the JournalEntry was generated in.
   */
  'accountingPeriod'?: string;
  'modifiedAt'?: Date;
  'mergeRecordId'?: string;
  /**
   * A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.
   */
  'appliedPayments'?: Array<string>;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'remoteId',
      baseName: 'remoteId',
      type: 'string',
    },
    {
      name: 'transactionDate',
      baseName: 'transactionDate',
      type: 'Date',
    },
    {
      name: 'remoteCreatedAt',
      baseName: 'remoteCreatedAt',
      type: 'Date',
    },
    {
      name: 'remoteUpdatedAt',
      baseName: 'remoteUpdatedAt',
      type: 'Date',
    },
    {
      name: 'payments',
      baseName: 'payments',
      type: 'Array<string>',
    },
    {
      name: 'memo',
      baseName: 'memo',
      type: 'string',
    },
    {
      name: 'currency',
      baseName: 'currency',
      type: 'string',
    },
    {
      name: 'exchangeRate',
      baseName: 'exchangeRate',
      type: 'string',
    },
    {
      name: 'company',
      baseName: 'company',
      type: 'string',
    },
    {
      name: 'lines',
      baseName: 'lines',
      type: 'Array<JournalLine>',
    },
    {
      name: 'journalNumber',
      baseName: 'journalNumber',
      type: 'string',
    },
    {
      name: 'trackingCategories',
      baseName: 'trackingCategories',
      type: 'Array<string>',
    },
    {
      name: 'remoteWasDeleted',
      baseName: 'remoteWasDeleted',
      type: 'boolean',
    },
    {
      name: 'postingStatus',
      baseName: 'postingStatus',
      type: 'string',
    },
    {
      name: 'accountingPeriod',
      baseName: 'accountingPeriod',
      type: 'string',
    },
    {
      name: 'modifiedAt',
      baseName: 'modifiedAt',
      type: 'Date',
    },
    {
      name: 'mergeRecordId',
      baseName: 'mergeRecordId',
      type: 'string',
    },
    {
      name: 'appliedPayments',
      baseName: 'appliedPayments',
      type: 'Array<string>',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return JournalEntry.attributeTypeMap;
  }
}
