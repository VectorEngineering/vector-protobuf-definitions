/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountingAttachment } from './accountingAttachment';
import { BalanceSheet } from './balanceSheet';
import { BusinessChartOfAccount } from './businessChartOfAccount';
import { BusinessTransaction } from './businessTransaction';
import { CashFlowStatement } from './cashFlowStatement';
import { CompanyInfo } from './companyInfo';
import { Contacts } from './contacts';
import { CreditNote } from './creditNote';
import { Expense } from './expense';
import { IncomeStatement } from './incomeStatement';
import { Invoice } from './invoice';
import { Item } from './item';
import { JournalEntry } from './journalEntry';
import { Payment } from './payment';
import { PurchaseOrder } from './purchaseOrder';
import { TaxRate } from './taxRate';
import { VendorCredit } from './vendorCredit';

export class LinkedAccountingAccount {
  'id'?: string;
  'attachments'?: Array<AccountingAttachment>;
  /**
   * The CompanyInfo object is used to represent a company\'s information.
   */
  'companyInfo'?: Array<CompanyInfo>;
  'purchaseOrders'?: Array<PurchaseOrder>;
  'balanceSheets'?: Array<BalanceSheet>;
  'cashFlowStatements'?: Array<CashFlowStatement>;
  'incomeStatements'?: Array<IncomeStatement>;
  'chartOfAccounts'?: Array<BusinessChartOfAccount>;
  'items'?: Array<Item>;
  'taxRates'?: Array<TaxRate>;
  /**
   * The Contact object refers to either a supplier or a customer.
   */
  'contacts'?: Array<Contacts>;
  'invoices'?: Array<Invoice>;
  'payments'?: Array<Payment>;
  'expenses'?: Array<Expense>;
  'journalEntries'?: Array<JournalEntry>;
  'transactions'?: Array<BusinessTransaction>;
  'vendorCredits'?: Array<VendorCredit>;
  'creditNotes'?: Array<CreditNote>;
  'createdAt'?: Date;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'attachments',
      baseName: 'attachments',
      type: 'Array<AccountingAttachment>',
    },
    {
      name: 'companyInfo',
      baseName: 'companyInfo',
      type: 'Array<CompanyInfo>',
    },
    {
      name: 'purchaseOrders',
      baseName: 'purchaseOrders',
      type: 'Array<PurchaseOrder>',
    },
    {
      name: 'balanceSheets',
      baseName: 'balanceSheets',
      type: 'Array<BalanceSheet>',
    },
    {
      name: 'cashFlowStatements',
      baseName: 'cashFlowStatements',
      type: 'Array<CashFlowStatement>',
    },
    {
      name: 'incomeStatements',
      baseName: 'incomeStatements',
      type: 'Array<IncomeStatement>',
    },
    {
      name: 'chartOfAccounts',
      baseName: 'chartOfAccounts',
      type: 'Array<BusinessChartOfAccount>',
    },
    {
      name: 'items',
      baseName: 'items',
      type: 'Array<Item>',
    },
    {
      name: 'taxRates',
      baseName: 'taxRates',
      type: 'Array<TaxRate>',
    },
    {
      name: 'contacts',
      baseName: 'contacts',
      type: 'Array<Contacts>',
    },
    {
      name: 'invoices',
      baseName: 'invoices',
      type: 'Array<Invoice>',
    },
    {
      name: 'payments',
      baseName: 'payments',
      type: 'Array<Payment>',
    },
    {
      name: 'expenses',
      baseName: 'expenses',
      type: 'Array<Expense>',
    },
    {
      name: 'journalEntries',
      baseName: 'journalEntries',
      type: 'Array<JournalEntry>',
    },
    {
      name: 'transactions',
      baseName: 'transactions',
      type: 'Array<BusinessTransaction>',
    },
    {
      name: 'vendorCredits',
      baseName: 'vendorCredits',
      type: 'Array<VendorCredit>',
    },
    {
      name: 'creditNotes',
      baseName: 'creditNotes',
      type: 'Array<CreditNote>',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return LinkedAccountingAccount.attributeTypeMap;
  }
}
