/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { LocationType } from './locationType';

/**
 * The Location object is used to represent an address that can be associated with an employee.
 */
export class LocationAddress {
  'id'?: string;
  'remoteId'?: string;
  /**
   * The location\'s name.
   */
  'name'?: string;
  /**
   * The location\'s phone number.
   */
  'phoneNumber'?: string;
  /**
   * Line 1 of the location\'s street address.
   */
  'street1'?: string;
  /**
   * Line 2 of the location\'s street address.
   */
  'street2'?: string;
  /**
   * The location\'s city.
   */
  'city'?: string;
  /**
   * The location\'s state. Represents a region if outside of the US.
   */
  'state'?: string;
  /**
   * The location\'s zip code or postal code.
   */
  'zipCode'?: string;
  /**
   * The location\'s country.
   */
  'country'?: string;
  'locationType'?: LocationType;
  /**
   * Indicates whether or not this object has been deleted in the third party platform.
   */
  'remoteWasDeleted'?: boolean;
  'createdAt'?: Date;
  'modifiedAt'?: Date;
  'mergeAccountId'?: string;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'remoteId',
      baseName: 'remoteId',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'phoneNumber',
      baseName: 'phoneNumber',
      type: 'string',
    },
    {
      name: 'street1',
      baseName: 'street1',
      type: 'string',
    },
    {
      name: 'street2',
      baseName: 'street2',
      type: 'string',
    },
    {
      name: 'city',
      baseName: 'city',
      type: 'string',
    },
    {
      name: 'state',
      baseName: 'state',
      type: 'string',
    },
    {
      name: 'zipCode',
      baseName: 'zipCode',
      type: 'string',
    },
    {
      name: 'country',
      baseName: 'country',
      type: 'string',
    },
    {
      name: 'locationType',
      baseName: 'locationType',
      type: 'LocationType',
    },
    {
      name: 'remoteWasDeleted',
      baseName: 'remoteWasDeleted',
      type: 'boolean',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'modifiedAt',
      baseName: 'modifiedAt',
      type: 'Date',
    },
    {
      name: 'mergeAccountId',
      baseName: 'mergeAccountId',
      type: 'string',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return LocationAddress.attributeTypeMap;
  }
}

export namespace LocationAddress {}
