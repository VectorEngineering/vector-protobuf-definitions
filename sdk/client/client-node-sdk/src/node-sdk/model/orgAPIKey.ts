/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { APIKeyEnvironment } from './aPIKeyEnvironment';
import { ApiPermission } from './apiPermission';
import { ScopeType } from './scopeType';

export class OrgAPIKey {
  /**
   * Unique identifier for the API key.
   */
  'id'?: string;
  /**
   * Name of the API key.
   */
  'keyName': string;
  /**
   * Description of the API key.
   */
  'description'?: string;
  /**
   * Unique key identifier.
   */
  'keyId': string;
  /**
   * Hashed API key.
   */
  'keyHash'?: string;
  /**
   * Scopes assigned to the API key.
   */
  'scopes'?: Array<ScopeType>;
  /**
   * Rate limit for the API key.
   */
  'rateLimit'?: number;
  /**
   * Allowed IP addresses (supports both IPv4 and IPv6 with CIDR notation).
   */
  'allowedIps'?: Array<string>;
  /**
   * Allowed domains.
   */
  'allowedDomains'?: Array<string>;
  /**
   * Usage count of the API key.
   */
  'usageCount'?: number;
  /**
   * Maximum usage count allowed.
   */
  'maxUsageCount'?: number;
  /**
   * Last used IP address.
   */
  'lastUsedIp'?: string;
  'environment'?: APIKeyEnvironment;
  /**
   * Indicates if the key has been revoked.
   */
  'revoked'?: boolean;
  /**
   * Timestamp when the key was revoked.
   */
  'revokedAt'?: Date;
  /**
   * Reason for revocation.
   */
  'revokedReason'?: string;
  /**
   * Expiration date of the key.
   */
  'expiresAt'?: Date;
  /**
   * Timestamp when the key was created.
   */
  'createdAt'?: Date;
  /**
   * Timestamp when the key was last updated.
   */
  'updatedAt'?: Date;
  /**
   * ID of the creator.
   */
  'createdBy'?: string;
  /**
   * Timestamp when the key was last used.
   */
  'lastUsed'?: Date;
  /**
   * Indicates if the key is active.
   */
  'isActive'?: boolean;
  'permissions'?: Array<ApiPermission>;
  'deletedAt'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'keyName',
      baseName: 'keyName',
      type: 'string',
    },
    {
      name: 'description',
      baseName: 'description',
      type: 'string',
    },
    {
      name: 'keyId',
      baseName: 'keyId',
      type: 'string',
    },
    {
      name: 'keyHash',
      baseName: 'keyHash',
      type: 'string',
    },
    {
      name: 'scopes',
      baseName: 'scopes',
      type: 'Array<ScopeType>',
    },
    {
      name: 'rateLimit',
      baseName: 'rateLimit',
      type: 'number',
    },
    {
      name: 'allowedIps',
      baseName: 'allowedIps',
      type: 'Array<string>',
    },
    {
      name: 'allowedDomains',
      baseName: 'allowedDomains',
      type: 'Array<string>',
    },
    {
      name: 'usageCount',
      baseName: 'usageCount',
      type: 'number',
    },
    {
      name: 'maxUsageCount',
      baseName: 'maxUsageCount',
      type: 'number',
    },
    {
      name: 'lastUsedIp',
      baseName: 'lastUsedIp',
      type: 'string',
    },
    {
      name: 'environment',
      baseName: 'environment',
      type: 'APIKeyEnvironment',
    },
    {
      name: 'revoked',
      baseName: 'revoked',
      type: 'boolean',
    },
    {
      name: 'revokedAt',
      baseName: 'revokedAt',
      type: 'Date',
    },
    {
      name: 'revokedReason',
      baseName: 'revokedReason',
      type: 'string',
    },
    {
      name: 'expiresAt',
      baseName: 'expiresAt',
      type: 'Date',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'updatedAt',
      baseName: 'updatedAt',
      type: 'Date',
    },
    {
      name: 'createdBy',
      baseName: 'createdBy',
      type: 'string',
    },
    {
      name: 'lastUsed',
      baseName: 'lastUsed',
      type: 'Date',
    },
    {
      name: 'isActive',
      baseName: 'isActive',
      type: 'boolean',
    },
    {
      name: 'permissions',
      baseName: 'permissions',
      type: 'Array<ApiPermission>',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return OrgAPIKey.attributeTypeMap;
  }
}

export namespace OrgAPIKey {}
