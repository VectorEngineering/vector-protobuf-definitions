/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AuditLog } from './auditLog';
import { PermissionScope } from './permissionScope';

export class OwnershipPermission {
  'id'?: string;
  'permissionName'?: string;
  'scope'?: PermissionScope;
  'isDelegatable'?: boolean;
  'requiresApproval'?: boolean;
  'approverRoles'?: Array<string>;
  'conditions'?: object;
  'grantedAt'?: Date;
  'expiresAt'?: Date;
  'permissionAuditLogs'?: Array<AuditLog>;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'permissionName',
      baseName: 'permissionName',
      type: 'string',
    },
    {
      name: 'scope',
      baseName: 'scope',
      type: 'PermissionScope',
    },
    {
      name: 'isDelegatable',
      baseName: 'isDelegatable',
      type: 'boolean',
    },
    {
      name: 'requiresApproval',
      baseName: 'requiresApproval',
      type: 'boolean',
    },
    {
      name: 'approverRoles',
      baseName: 'approverRoles',
      type: 'Array<string>',
    },
    {
      name: 'conditions',
      baseName: 'conditions',
      type: 'object',
    },
    {
      name: 'grantedAt',
      baseName: 'grantedAt',
      type: 'Date',
    },
    {
      name: 'expiresAt',
      baseName: 'expiresAt',
      type: 'Date',
    },
    {
      name: 'permissionAuditLogs',
      baseName: 'permissionAuditLogs',
      type: 'Array<AuditLog>',
    },
  ];

  static getAttributeTypeMap() {
    return OwnershipPermission.attributeTypeMap;
  }
}

export namespace OwnershipPermission {}
