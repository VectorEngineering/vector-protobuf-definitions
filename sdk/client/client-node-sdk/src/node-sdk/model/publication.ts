/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PublicationType } from './publicationType';
import { UserProfile } from './userProfile';

/**
 * Use Case - An online magazine, a publication with a fixed publication staff that posts stories around a specific topic - A community publication, a publication that accepts stories published around Medium - A company blog, a publication that is created specifically to share company news - A collection of individual stories by a single author that are parts of a larger whole
 */
export class Publication {
  'id'?: string;
  'postIds'?: Array<string>;
  'admin'?: UserProfile;
  'adminBackendPlatformUserId': string;
  'tags': Array<string>;
  'editors'?: Array<UserProfile>;
  'subjects': Array<string>;
  'description'?: string;
  'createdAt'?: string;
  'type': PublicationType;
  'publicationName': string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'postIds',
      baseName: 'postIds',
      type: 'Array<string>',
    },
    {
      name: 'admin',
      baseName: 'admin',
      type: 'UserProfile',
    },
    {
      name: 'adminBackendPlatformUserId',
      baseName: 'adminBackendPlatformUserId',
      type: 'string',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<string>',
    },
    {
      name: 'editors',
      baseName: 'editors',
      type: 'Array<UserProfile>',
    },
    {
      name: 'subjects',
      baseName: 'subjects',
      type: 'Array<string>',
    },
    {
      name: 'description',
      baseName: 'description',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'string',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'PublicationType',
    },
    {
      name: 'publicationName',
      baseName: 'publicationName',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return Publication.attributeTypeMap;
  }
}

export namespace Publication {}
