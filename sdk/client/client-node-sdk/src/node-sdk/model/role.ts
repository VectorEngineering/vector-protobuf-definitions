/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { RoleAuditEvents } from './roleAuditEvents';
import { RoleType } from './roleType';

/**
 * Role defines the role of a user in the system with specific permissions.
 */
export class Role {
  /**
   * Unique identifier for the role.
   */
  'id'?: string;
  /**
   * Name of the role.
   */
  'name'?: string;
  'type'?: RoleType;
  /**
   * Permissions related to user management.
   */
  'canCreateUsers'?: boolean;
  'canReadUsers'?: boolean;
  'canUpdateUsers'?: boolean;
  'canDeleteUsers'?: boolean;
  /**
   * Permissions related to project management.
   */
  'canCreateProjects'?: boolean;
  'canReadProjects'?: boolean;
  'canUpdateProjects'?: boolean;
  'canDeleteProjects'?: boolean;
  /**
   * Permissions related to report management.
   */
  'canCreateReports'?: boolean;
  'canReadReports'?: boolean;
  'canUpdateReports'?: boolean;
  'canDeleteReports'?: boolean;
  /**
   * Add more permissions as necessary for other modules or features. Timestamps for tracking creation and modification times.
   */
  'createdAt'?: Date;
  'updatedAt'?: Date;
  /**
   * Audit log for this role.
   */
  'auditLog'?: Array<RoleAuditEvents>;
  'deletedAt'?: Date;
  'assignmentReason'?: string;
  'assignedAt'?: Date;
  'expiresAt'?: Date;
  'isActive'?: boolean;
  'limitations'?: Array<string>;
  'roleSettings'?: object;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'RoleType',
    },
    {
      name: 'canCreateUsers',
      baseName: 'canCreateUsers',
      type: 'boolean',
    },
    {
      name: 'canReadUsers',
      baseName: 'canReadUsers',
      type: 'boolean',
    },
    {
      name: 'canUpdateUsers',
      baseName: 'canUpdateUsers',
      type: 'boolean',
    },
    {
      name: 'canDeleteUsers',
      baseName: 'canDeleteUsers',
      type: 'boolean',
    },
    {
      name: 'canCreateProjects',
      baseName: 'canCreateProjects',
      type: 'boolean',
    },
    {
      name: 'canReadProjects',
      baseName: 'canReadProjects',
      type: 'boolean',
    },
    {
      name: 'canUpdateProjects',
      baseName: 'canUpdateProjects',
      type: 'boolean',
    },
    {
      name: 'canDeleteProjects',
      baseName: 'canDeleteProjects',
      type: 'boolean',
    },
    {
      name: 'canCreateReports',
      baseName: 'canCreateReports',
      type: 'boolean',
    },
    {
      name: 'canReadReports',
      baseName: 'canReadReports',
      type: 'boolean',
    },
    {
      name: 'canUpdateReports',
      baseName: 'canUpdateReports',
      type: 'boolean',
    },
    {
      name: 'canDeleteReports',
      baseName: 'canDeleteReports',
      type: 'boolean',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'updatedAt',
      baseName: 'updatedAt',
      type: 'Date',
    },
    {
      name: 'auditLog',
      baseName: 'auditLog',
      type: 'Array<RoleAuditEvents>',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
    {
      name: 'assignmentReason',
      baseName: 'assignmentReason',
      type: 'string',
    },
    {
      name: 'assignedAt',
      baseName: 'assignedAt',
      type: 'Date',
    },
    {
      name: 'expiresAt',
      baseName: 'expiresAt',
      type: 'Date',
    },
    {
      name: 'isActive',
      baseName: 'isActive',
      type: 'boolean',
    },
    {
      name: 'limitations',
      baseName: 'limitations',
      type: 'Array<string>',
    },
    {
      name: 'roleSettings',
      baseName: 'roleSettings',
      type: 'object',
    },
  ];

  static getAttributeTypeMap() {
    return Role.attributeTypeMap;
  }
}

export namespace Role {}
