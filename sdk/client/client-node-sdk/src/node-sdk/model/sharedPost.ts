/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AccountType } from './accountType';
import { Category } from './category';
import { Comment } from './comment';
import { Note } from './note';
import { PostType } from './postType';
import { Reaction } from './reaction';
import { Thread } from './thread';

export class SharedPost {
  'id'?: string;
  'originalPostId': string;
  'originalAuthorUsername'?: string;
  'createdAt'?: string;
  'content': string;
  'mentions'?: Array<string>;
  'hashtags'?: Array<string>;
  'extra'?: { [key: string]: string | undefined };
  'comments'?: Array<Comment>;
  'backendPlatformUserId'?: string;
  'profileId'?: string;
  'tags'?: Array<string>;
  'authorUsername'?: string;
  'affinityScore'?: string;
  'qualityScore'?: string;
  'userIdToAffinityScoreMap'?: { [key: string]: string | undefined };
  /**
   * AccountType is the account type of the creator of this piece of  content
   */
  'userIdToReportsMap'?: { [key: string]: string | undefined };
  'notes'?: Array<Note>;
  'thread'?: Thread;
  'authorAccountType'?: AccountType;
  'userIdToReactionMap'?: { [key: string]: Reaction | undefined };
  'action': PostType;
  'originalPostUserProfileId'?: string;
  'originalPostUserbackendPlaformId'?: string;
  'originalPostAction': PostType;
  'category'?: Category;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'originalPostId',
      baseName: 'originalPostId',
      type: 'string',
    },
    {
      name: 'originalAuthorUsername',
      baseName: 'originalAuthorUsername',
      type: 'string',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'string',
    },
    {
      name: 'content',
      baseName: 'content',
      type: 'string',
    },
    {
      name: 'mentions',
      baseName: 'mentions',
      type: 'Array<string>',
    },
    {
      name: 'hashtags',
      baseName: 'hashtags',
      type: 'Array<string>',
    },
    {
      name: 'extra',
      baseName: 'extra',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'comments',
      baseName: 'comments',
      type: 'Array<Comment>',
    },
    {
      name: 'backendPlatformUserId',
      baseName: 'backendPlatformUserId',
      type: 'string',
    },
    {
      name: 'profileId',
      baseName: 'profileId',
      type: 'string',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<string>',
    },
    {
      name: 'authorUsername',
      baseName: 'authorUsername',
      type: 'string',
    },
    {
      name: 'affinityScore',
      baseName: 'affinityScore',
      type: 'string',
    },
    {
      name: 'qualityScore',
      baseName: 'qualityScore',
      type: 'string',
    },
    {
      name: 'userIdToAffinityScoreMap',
      baseName: 'userIdToAffinityScoreMap',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'userIdToReportsMap',
      baseName: 'userIdToReportsMap',
      type: '{ [key: string]: string | undefined; }',
    },
    {
      name: 'notes',
      baseName: 'notes',
      type: 'Array<Note>',
    },
    {
      name: 'thread',
      baseName: 'thread',
      type: 'Thread',
    },
    {
      name: 'authorAccountType',
      baseName: 'authorAccountType',
      type: 'AccountType',
    },
    {
      name: 'userIdToReactionMap',
      baseName: 'userIdToReactionMap',
      type: '{ [key: string]: Reaction | undefined; }',
    },
    {
      name: 'action',
      baseName: 'action',
      type: 'PostType',
    },
    {
      name: 'originalPostUserProfileId',
      baseName: 'originalPostUserProfileId',
      type: 'string',
    },
    {
      name: 'originalPostUserbackendPlaformId',
      baseName: 'originalPostUserbackendPlaformId',
      type: 'string',
    },
    {
      name: 'originalPostAction',
      baseName: 'originalPostAction',
      type: 'PostType',
    },
    {
      name: 'category',
      baseName: 'category',
      type: 'Category',
    },
  ];

  static getAttributeTypeMap() {
    return SharedPost.attributeTypeMap;
  }
}

export namespace SharedPost {}
