/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Address } from './address';
import { AuditLog } from './auditLog';
import { Tags } from './tags';
import { TeamHierarchyLevel } from './teamHierarchyLevel';
import { TeamInvites } from './teamInvites';
import { TeamMember } from './teamMember';
import { TeamOwnership } from './teamOwnership';
import { TeamResource } from './teamResource';
import { TeamStatus } from './teamStatus';
import { TeamType } from './teamType';

/**
 * Team: represents a team within the context of solomon-ai.
 */
export class Team {
  /**
   * Unique identifier for the team.
   */
  'id'?: string;
  /**
   * Name of the team.
   */
  'name': string;
  /**
   * Description of the team, providing additional details or purpose.
   */
  'description'?: string;
  /**
   * Tags associated with the team, useful for categorization or filtering.
   */
  'tags'?: Array<Tags>;
  'teamType'?: TeamType;
  /**
   * Indicates if the team is currently active.
   */
  'isActive'?: boolean;
  /**
   * Metadata in JSON format, allowing flexible storage for additional team-related information.
   */
  'metadata'?: object;
  /**
   * Timestamp indicating when the team was created.
   */
  'createdAt'?: Date;
  /**
   * Timestamp indicating the last update time for the team.
   */
  'updatedAt'?: Date;
  /**
   * Team Roles and Members --------------------- List of team members, with each member having specific roles and permissions.
   */
  'teamMembers'?: Array<TeamMember>;
  'address'?: Address;
  /**
   * Audit logs related to the team, used for tracking changes and events.
   */
  'auditLogs'?: Array<AuditLog>;
  'teamInvites'?: Array<TeamInvites>;
  'deletedAt'?: Date;
  'parentTeam'?: Team;
  'subTeams'?: Array<Team>;
  'hierarchyLevel'?: TeamHierarchyLevel;
  'status'?: TeamStatus;
  'ownership'?: TeamOwnership;
  'resources'?: Array<TeamResource>;
  'maxMembers'?: number;
  'joinedAt'?: Date;
  'lastActive'?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'description',
      baseName: 'description',
      type: 'string',
    },
    {
      name: 'tags',
      baseName: 'tags',
      type: 'Array<Tags>',
    },
    {
      name: 'teamType',
      baseName: 'teamType',
      type: 'TeamType',
    },
    {
      name: 'isActive',
      baseName: 'isActive',
      type: 'boolean',
    },
    {
      name: 'metadata',
      baseName: 'metadata',
      type: 'object',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'Date',
    },
    {
      name: 'updatedAt',
      baseName: 'updatedAt',
      type: 'Date',
    },
    {
      name: 'teamMembers',
      baseName: 'teamMembers',
      type: 'Array<TeamMember>',
    },
    {
      name: 'address',
      baseName: 'address',
      type: 'Address',
    },
    {
      name: 'auditLogs',
      baseName: 'auditLogs',
      type: 'Array<AuditLog>',
    },
    {
      name: 'teamInvites',
      baseName: 'teamInvites',
      type: 'Array<TeamInvites>',
    },
    {
      name: 'deletedAt',
      baseName: 'deletedAt',
      type: 'Date',
    },
    {
      name: 'parentTeam',
      baseName: 'parentTeam',
      type: 'Team',
    },
    {
      name: 'subTeams',
      baseName: 'subTeams',
      type: 'Array<Team>',
    },
    {
      name: 'hierarchyLevel',
      baseName: 'hierarchyLevel',
      type: 'TeamHierarchyLevel',
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'TeamStatus',
    },
    {
      name: 'ownership',
      baseName: 'ownership',
      type: 'TeamOwnership',
    },
    {
      name: 'resources',
      baseName: 'resources',
      type: 'Array<TeamResource>',
    },
    {
      name: 'maxMembers',
      baseName: 'maxMembers',
      type: 'number',
    },
    {
      name: 'joinedAt',
      baseName: 'joinedAt',
      type: 'Date',
    },
    {
      name: 'lastActive',
      baseName: 'lastActive',
      type: 'Date',
    },
  ];

  static getAttributeTypeMap() {
    return Team.attributeTypeMap;
  }
}

export namespace Team {}
