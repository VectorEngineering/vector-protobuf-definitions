/**
 * User Service API
 * Solomon AI User Service API - Manages user profiles and authentication
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@solomon-ai.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Any } from './any';
import { FinancialUserProfileType } from './financialUserProfileType';

export class Transaction {
  'accountId'?: string;
  'amount'?: number;
  'isoCurrencyCode'?: string;
  'unofficialCurrencyCode'?: string;
  'categoryId'?: string;
  'checkNumber'?: string;
  'currentDate'?: string;
  'currentDatetime'?: string;
  'authorizedDate'?: string;
  'authorizedDatetime'?: string;
  'name'?: string;
  'merchantName'?: string;
  'paymentChannel'?: string;
  'pending'?: boolean;
  'pendingTransactionId'?: string;
  'accountOwner'?: string;
  'transactionId'?: string;
  'transactionCode'?: string;
  'id'?: string;
  'userId'?: string;
  'linkId'?: string;
  'sign'?: number;
  'personalFinanceCategoryPrimary'?: string;
  'personalFinanceCategoryDetailed'?: string;
  'locationAddress'?: string;
  'locationCity'?: string;
  'locationRegion'?: string;
  'locationPostalCode'?: string;
  'locationCountry'?: string;
  'locationLat'?: number;
  'locationLon'?: number;
  'locationStoreNumber'?: string;
  'paymentMetaByOrderOf'?: string;
  'paymentMetaPayee'?: string;
  'paymentMetaPayer'?: string;
  'paymentMetaPaymentMethod'?: string;
  'paymentMetaPaymentProcessor'?: string;
  'paymentMetaPpdId'?: string;
  'paymentMetaReason'?: string;
  'paymentMetaReferenceNumber'?: string;
  'time'?: Date;
  'additionalProperties'?: Any;
  'categories'?: Array<string>;
  'profileType'?: FinancialUserProfileType;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'accountId',
      baseName: 'accountId',
      type: 'string',
    },
    {
      name: 'amount',
      baseName: 'amount',
      type: 'number',
    },
    {
      name: 'isoCurrencyCode',
      baseName: 'isoCurrencyCode',
      type: 'string',
    },
    {
      name: 'unofficialCurrencyCode',
      baseName: 'unofficialCurrencyCode',
      type: 'string',
    },
    {
      name: 'categoryId',
      baseName: 'categoryId',
      type: 'string',
    },
    {
      name: 'checkNumber',
      baseName: 'checkNumber',
      type: 'string',
    },
    {
      name: 'currentDate',
      baseName: 'currentDate',
      type: 'string',
    },
    {
      name: 'currentDatetime',
      baseName: 'currentDatetime',
      type: 'string',
    },
    {
      name: 'authorizedDate',
      baseName: 'authorizedDate',
      type: 'string',
    },
    {
      name: 'authorizedDatetime',
      baseName: 'authorizedDatetime',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'merchantName',
      baseName: 'merchantName',
      type: 'string',
    },
    {
      name: 'paymentChannel',
      baseName: 'paymentChannel',
      type: 'string',
    },
    {
      name: 'pending',
      baseName: 'pending',
      type: 'boolean',
    },
    {
      name: 'pendingTransactionId',
      baseName: 'pendingTransactionId',
      type: 'string',
    },
    {
      name: 'accountOwner',
      baseName: 'accountOwner',
      type: 'string',
    },
    {
      name: 'transactionId',
      baseName: 'transactionId',
      type: 'string',
    },
    {
      name: 'transactionCode',
      baseName: 'transactionCode',
      type: 'string',
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'userId',
      baseName: 'userId',
      type: 'string',
    },
    {
      name: 'linkId',
      baseName: 'linkId',
      type: 'string',
    },
    {
      name: 'sign',
      baseName: 'sign',
      type: 'number',
    },
    {
      name: 'personalFinanceCategoryPrimary',
      baseName: 'personalFinanceCategoryPrimary',
      type: 'string',
    },
    {
      name: 'personalFinanceCategoryDetailed',
      baseName: 'personalFinanceCategoryDetailed',
      type: 'string',
    },
    {
      name: 'locationAddress',
      baseName: 'locationAddress',
      type: 'string',
    },
    {
      name: 'locationCity',
      baseName: 'locationCity',
      type: 'string',
    },
    {
      name: 'locationRegion',
      baseName: 'locationRegion',
      type: 'string',
    },
    {
      name: 'locationPostalCode',
      baseName: 'locationPostalCode',
      type: 'string',
    },
    {
      name: 'locationCountry',
      baseName: 'locationCountry',
      type: 'string',
    },
    {
      name: 'locationLat',
      baseName: 'locationLat',
      type: 'number',
    },
    {
      name: 'locationLon',
      baseName: 'locationLon',
      type: 'number',
    },
    {
      name: 'locationStoreNumber',
      baseName: 'locationStoreNumber',
      type: 'string',
    },
    {
      name: 'paymentMetaByOrderOf',
      baseName: 'paymentMetaByOrderOf',
      type: 'string',
    },
    {
      name: 'paymentMetaPayee',
      baseName: 'paymentMetaPayee',
      type: 'string',
    },
    {
      name: 'paymentMetaPayer',
      baseName: 'paymentMetaPayer',
      type: 'string',
    },
    {
      name: 'paymentMetaPaymentMethod',
      baseName: 'paymentMetaPaymentMethod',
      type: 'string',
    },
    {
      name: 'paymentMetaPaymentProcessor',
      baseName: 'paymentMetaPaymentProcessor',
      type: 'string',
    },
    {
      name: 'paymentMetaPpdId',
      baseName: 'paymentMetaPpdId',
      type: 'string',
    },
    {
      name: 'paymentMetaReason',
      baseName: 'paymentMetaReason',
      type: 'string',
    },
    {
      name: 'paymentMetaReferenceNumber',
      baseName: 'paymentMetaReferenceNumber',
      type: 'string',
    },
    {
      name: 'time',
      baseName: 'time',
      type: 'Date',
    },
    {
      name: 'additionalProperties',
      baseName: 'additionalProperties',
      type: 'Any',
    },
    {
      name: 'categories',
      baseName: 'categories',
      type: 'Array<string>',
    },
    {
      name: 'profileType',
      baseName: 'profileType',
      type: 'FinancialUserProfileType',
    },
  ];

  static getAttributeTypeMap() {
    return Transaction.attributeTypeMap;
  }
}

export namespace Transaction {}
