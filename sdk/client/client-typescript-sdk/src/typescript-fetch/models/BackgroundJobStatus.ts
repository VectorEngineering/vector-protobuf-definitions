/* tslint:disable */
/* eslint-disable */
/**
 * Lead Scraping Service API
 * Vector Lead Scraping Service API - Manages Lead Scraping Jobs
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@vector.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * BackgroundJobStatus represents the possible states of a background job.
 * This enum is used to track the lifecycle of asynchronous tasks like scraping jobs.
 *
 * State transitions:
 * 1. QUEUED -> IN_PROGRESS
 * 2. IN_PROGRESS -> COMPLETED/FAILED/CANCELLED/TIMED_OUT
 *
 * Usage example:
 * ```go
 * job := &ScrapingJob{
 *     Status: BackgroundJobStatus_BACKGROUND_JOB_STATUS_IN_PROGRESS,
 * }
 * ```
 *
 *  - BACKGROUND_JOB_STATUS_UNSPECIFIED: Default state, should not be used explicitly
 *  - BACKGROUND_JOB_STATUS_QUEUED: Job is queued and waiting to be processed
 *  - BACKGROUND_JOB_STATUS_IN_PROGRESS: Job is currently being processed
 *  - BACKGROUND_JOB_STATUS_COMPLETED: Job has completed successfully
 *  - BACKGROUND_JOB_STATUS_FAILED: Job encountered an error and failed
 *  - BACKGROUND_JOB_STATUS_CANCELLED: Job was manually cancelled by user
 *  - BACKGROUND_JOB_STATUS_TIMED_OUT: Job exceeded its maximum execution time
 * @export
 */
export const BackgroundJobStatus = {
  Unspecified: 'BACKGROUND_JOB_STATUS_UNSPECIFIED',
  Queued: 'BACKGROUND_JOB_STATUS_QUEUED',
  InProgress: 'BACKGROUND_JOB_STATUS_IN_PROGRESS',
  Completed: 'BACKGROUND_JOB_STATUS_COMPLETED',
  Failed: 'BACKGROUND_JOB_STATUS_FAILED',
  Cancelled: 'BACKGROUND_JOB_STATUS_CANCELLED',
  TimedOut: 'BACKGROUND_JOB_STATUS_TIMED_OUT',
} as const;
export type BackgroundJobStatus =
  (typeof BackgroundJobStatus)[keyof typeof BackgroundJobStatus];

export function instanceOfBackgroundJobStatus(value: any): boolean {
  for (const key in BackgroundJobStatus) {
    if (Object.prototype.hasOwnProperty.call(BackgroundJobStatus, key)) {
      if (
        (BackgroundJobStatus as Record<string, BackgroundJobStatus>)[key] ===
        value
      ) {
        return true;
      }
    }
  }
  return false;
}

export function BackgroundJobStatusFromJSON(json: any): BackgroundJobStatus {
  return BackgroundJobStatusFromJSONTyped(json, false);
}

export function BackgroundJobStatusFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BackgroundJobStatus {
  return json as BackgroundJobStatus;
}

export function BackgroundJobStatusToJSON(
  value?: BackgroundJobStatus | null
): any {
  return value as any;
}
