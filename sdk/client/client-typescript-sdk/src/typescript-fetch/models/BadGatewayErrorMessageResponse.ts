/* tslint:disable */
/* eslint-disable */
/**
 * Lead Scraping Service API
 * Vector Lead Scraping Service API - Manages Lead Scraping Jobs
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@vector.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorResponse } from './ErrorResponse';
import {
  ErrorResponseFromJSON,
  ErrorResponseFromJSONTyped,
  ErrorResponseToJSON,
} from './ErrorResponse';

/**
 * Represents errors when the server received an invalid response from an upstream server
 * @export
 * @interface BadGatewayErrorMessageResponse
 */
export interface BadGatewayErrorMessageResponse {
  /**
   *
   * @type {number}
   * @memberof BadGatewayErrorMessageResponse
   */
  code?: number;
  /**
   *
   * @type {string}
   * @memberof BadGatewayErrorMessageResponse
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof BadGatewayErrorMessageResponse
   */
  upstreamService?: string;
  /**
   *
   * @type {ErrorResponse}
   * @memberof BadGatewayErrorMessageResponse
   */
  errorResponse?: ErrorResponse;
}

/**
 * Check if a given object implements the BadGatewayErrorMessageResponse interface.
 */
export function instanceOfBadGatewayErrorMessageResponse(
  value: object
): value is BadGatewayErrorMessageResponse {
  return true;
}

export function BadGatewayErrorMessageResponseFromJSON(
  json: any
): BadGatewayErrorMessageResponse {
  return BadGatewayErrorMessageResponseFromJSONTyped(json, false);
}

export function BadGatewayErrorMessageResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BadGatewayErrorMessageResponse {
  if (json == null) {
    return json;
  }
  return {
    code: json['code'] == null ? undefined : json['code'],
    message: json['message'] == null ? undefined : json['message'],
    upstreamService:
      json['upstreamService'] == null ? undefined : json['upstreamService'],
    errorResponse:
      json['errorResponse'] == null
        ? undefined
        : ErrorResponseFromJSON(json['errorResponse']),
  };
}

export function BadGatewayErrorMessageResponseToJSON(
  value?: BadGatewayErrorMessageResponse | null
): any {
  if (value == null) {
    return value;
  }
  return {
    code: value['code'],
    message: value['message'],
    upstreamService: value['upstreamService'],
    errorResponse: ErrorResponseToJSON(value['errorResponse']),
  };
}
