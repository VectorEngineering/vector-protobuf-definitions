/* tslint:disable */
/* eslint-disable */
/**
 * Lead Scraping Service API
 * Vector Lead Scraping Service API - Manages Lead Scraping Jobs
 *
 * The version of the OpenAPI document: 1.0
 * Contact: yoanyomba@vector.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * - INTERNAL_ERROR: General internal errors
 *  - RESOURCE_EXHAUSTED: Resource exhaustion errors
 *  - CANCELLED: Operation errors
 *  - UNAVAILABLE: Availability errors
 *  - DEPENDENCY_FAILURE: New internal error codes
 *
 * Failure in external dependency
 *  - CONFIGURATION_ERROR: Service configuration error
 *  - SECURITY_BREACH_DETECTED: Potential security breach detected
 * @export
 */
export const InternalErrorCode = {
  NoInternalError: 'NO_INTERNAL_ERROR',
  InternalError: 'INTERNAL_ERROR',
  DataCorruption: 'DATA_CORRUPTION',
  DatabaseError: 'DATABASE_ERROR',
  CacheError: 'CACHE_ERROR',
  ResourceExhausted: 'RESOURCE_EXHAUSTED',
  QuotaExceeded: 'QUOTA_EXCEEDED',
  RateLimitExceeded: 'RATE_LIMIT_EXCEEDED',
  Cancelled: 'CANCELLED',
  DeadlineExceeded: 'DEADLINE_EXCEEDED',
  AlreadyExists: 'ALREADY_EXISTS',
  FailedPrecondition: 'FAILED_PRECONDITION',
  Aborted: 'ABORTED',
  OutOfRange: 'OUT_OF_RANGE',
  Unavailable: 'UNAVAILABLE',
  DataLoss: 'DATA_LOSS',
  ServiceDegraded: 'SERVICE_DEGRADED',
  DependencyFailure: 'DEPENDENCY_FAILURE',
  ConfigurationError: 'CONFIGURATION_ERROR',
  SecurityBreachDetected: 'SECURITY_BREACH_DETECTED',
} as const;
export type InternalErrorCode =
  (typeof InternalErrorCode)[keyof typeof InternalErrorCode];

export function instanceOfInternalErrorCode(value: any): boolean {
  for (const key in InternalErrorCode) {
    if (Object.prototype.hasOwnProperty.call(InternalErrorCode, key)) {
      if (
        (InternalErrorCode as Record<string, InternalErrorCode>)[key] === value
      ) {
        return true;
      }
    }
  }
  return false;
}

export function InternalErrorCodeFromJSON(json: any): InternalErrorCode {
  return InternalErrorCodeFromJSONTyped(json, false);
}

export function InternalErrorCodeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): InternalErrorCode {
  return json as InternalErrorCode;
}

export function InternalErrorCodeToJSON(value?: InternalErrorCode | null): any {
  return value as any;
}
