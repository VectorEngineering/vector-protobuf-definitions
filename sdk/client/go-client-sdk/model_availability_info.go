/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the AvailabilityInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailabilityInfo{}

// AvailabilityInfo struct for AvailabilityInfo
type AvailabilityInfo struct {
	RetryAfter *int32 `json:"retryAfter,omitempty"`
	MaintenanceWindow *string `json:"maintenanceWindow,omitempty"`
	AffectedServices []string `json:"affectedServices,omitempty"`
	StatusPageUrl *string `json:"statusPageUrl,omitempty"`
}

// NewAvailabilityInfo instantiates a new AvailabilityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityInfo() *AvailabilityInfo {
	this := AvailabilityInfo{}
	return &this
}

// NewAvailabilityInfoWithDefaults instantiates a new AvailabilityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityInfoWithDefaults() *AvailabilityInfo {
	this := AvailabilityInfo{}
	return &this
}

// GetRetryAfter returns the RetryAfter field value if set, zero value otherwise.
func (o *AvailabilityInfo) GetRetryAfter() int32 {
	if o == nil || IsNil(o.RetryAfter) {
		var ret int32
		return ret
	}
	return *o.RetryAfter
}

// GetRetryAfterOk returns a tuple with the RetryAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityInfo) GetRetryAfterOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryAfter) {
		return nil, false
	}
	return o.RetryAfter, true
}

// HasRetryAfter returns a boolean if a field has been set.
func (o *AvailabilityInfo) HasRetryAfter() bool {
	if o != nil && !IsNil(o.RetryAfter) {
		return true
	}

	return false
}

// SetRetryAfter gets a reference to the given int32 and assigns it to the RetryAfter field.
func (o *AvailabilityInfo) SetRetryAfter(v int32) {
	o.RetryAfter = &v
}

// GetMaintenanceWindow returns the MaintenanceWindow field value if set, zero value otherwise.
func (o *AvailabilityInfo) GetMaintenanceWindow() string {
	if o == nil || IsNil(o.MaintenanceWindow) {
		var ret string
		return ret
	}
	return *o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityInfo) GetMaintenanceWindowOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceWindow) {
		return nil, false
	}
	return o.MaintenanceWindow, true
}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *AvailabilityInfo) HasMaintenanceWindow() bool {
	if o != nil && !IsNil(o.MaintenanceWindow) {
		return true
	}

	return false
}

// SetMaintenanceWindow gets a reference to the given string and assigns it to the MaintenanceWindow field.
func (o *AvailabilityInfo) SetMaintenanceWindow(v string) {
	o.MaintenanceWindow = &v
}

// GetAffectedServices returns the AffectedServices field value if set, zero value otherwise.
func (o *AvailabilityInfo) GetAffectedServices() []string {
	if o == nil || IsNil(o.AffectedServices) {
		var ret []string
		return ret
	}
	return o.AffectedServices
}

// GetAffectedServicesOk returns a tuple with the AffectedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityInfo) GetAffectedServicesOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedServices) {
		return nil, false
	}
	return o.AffectedServices, true
}

// HasAffectedServices returns a boolean if a field has been set.
func (o *AvailabilityInfo) HasAffectedServices() bool {
	if o != nil && !IsNil(o.AffectedServices) {
		return true
	}

	return false
}

// SetAffectedServices gets a reference to the given []string and assigns it to the AffectedServices field.
func (o *AvailabilityInfo) SetAffectedServices(v []string) {
	o.AffectedServices = v
}

// GetStatusPageUrl returns the StatusPageUrl field value if set, zero value otherwise.
func (o *AvailabilityInfo) GetStatusPageUrl() string {
	if o == nil || IsNil(o.StatusPageUrl) {
		var ret string
		return ret
	}
	return *o.StatusPageUrl
}

// GetStatusPageUrlOk returns a tuple with the StatusPageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityInfo) GetStatusPageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StatusPageUrl) {
		return nil, false
	}
	return o.StatusPageUrl, true
}

// HasStatusPageUrl returns a boolean if a field has been set.
func (o *AvailabilityInfo) HasStatusPageUrl() bool {
	if o != nil && !IsNil(o.StatusPageUrl) {
		return true
	}

	return false
}

// SetStatusPageUrl gets a reference to the given string and assigns it to the StatusPageUrl field.
func (o *AvailabilityInfo) SetStatusPageUrl(v string) {
	o.StatusPageUrl = &v
}

func (o AvailabilityInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailabilityInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RetryAfter) {
		toSerialize["retryAfter"] = o.RetryAfter
	}
	if !IsNil(o.MaintenanceWindow) {
		toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	}
	if !IsNil(o.AffectedServices) {
		toSerialize["affectedServices"] = o.AffectedServices
	}
	if !IsNil(o.StatusPageUrl) {
		toSerialize["statusPageUrl"] = o.StatusPageUrl
	}
	return toSerialize, nil
}

type NullableAvailabilityInfo struct {
	value *AvailabilityInfo
	isSet bool
}

func (v NullableAvailabilityInfo) Get() *AvailabilityInfo {
	return v.value
}

func (v *NullableAvailabilityInfo) Set(val *AvailabilityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityInfo(val *AvailabilityInfo) *NullableAvailabilityInfo {
	return &NullableAvailabilityInfo{value: val, isSet: true}
}

func (v NullableAvailabilityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


