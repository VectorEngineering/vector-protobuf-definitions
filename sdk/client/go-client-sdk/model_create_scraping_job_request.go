/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateScrapingJobRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateScrapingJobRequest{}

// CreateScrapingJobRequest struct for CreateScrapingJobRequest
type CreateScrapingJobRequest struct {
	UserId string `json:"userId"`
	OrgId string `json:"orgId"`
	TenantId string `json:"tenantId"`
	Name *string `json:"name,omitempty"`
	Keywords []string `json:"keywords,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Zoom *int32 `json:"zoom,omitempty"`
	Lat *string `json:"lat,omitempty"`
	Lon *string `json:"lon,omitempty"`
	FastMode *bool `json:"fastMode,omitempty"`
	Radius *int32 `json:"radius,omitempty"`
	Depth *int32 `json:"depth,omitempty"`
	Email *bool `json:"email,omitempty"`
	MaxTime *int32 `json:"maxTime,omitempty"`
	Proxies []string `json:"proxies,omitempty"`
}

type _CreateScrapingJobRequest CreateScrapingJobRequest

// NewCreateScrapingJobRequest instantiates a new CreateScrapingJobRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateScrapingJobRequest(userId string, orgId string, tenantId string) *CreateScrapingJobRequest {
	this := CreateScrapingJobRequest{}
	this.UserId = userId
	this.OrgId = orgId
	this.TenantId = tenantId
	return &this
}

// NewCreateScrapingJobRequestWithDefaults instantiates a new CreateScrapingJobRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateScrapingJobRequestWithDefaults() *CreateScrapingJobRequest {
	this := CreateScrapingJobRequest{}
	return &this
}

// GetUserId returns the UserId field value
func (o *CreateScrapingJobRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CreateScrapingJobRequest) SetUserId(v string) {
	o.UserId = v
}

// GetOrgId returns the OrgId field value
func (o *CreateScrapingJobRequest) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *CreateScrapingJobRequest) SetOrgId(v string) {
	o.OrgId = v
}

// GetTenantId returns the TenantId field value
func (o *CreateScrapingJobRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *CreateScrapingJobRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateScrapingJobRequest) SetName(v string) {
	o.Name = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetKeywords() []string {
	if o == nil || IsNil(o.Keywords) {
		var ret []string
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []string and assigns it to the Keywords field.
func (o *CreateScrapingJobRequest) SetKeywords(v []string) {
	o.Keywords = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CreateScrapingJobRequest) SetLang(v string) {
	o.Lang = &v
}

// GetZoom returns the Zoom field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetZoom() int32 {
	if o == nil || IsNil(o.Zoom) {
		var ret int32
		return ret
	}
	return *o.Zoom
}

// GetZoomOk returns a tuple with the Zoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetZoomOk() (*int32, bool) {
	if o == nil || IsNil(o.Zoom) {
		return nil, false
	}
	return o.Zoom, true
}

// HasZoom returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasZoom() bool {
	if o != nil && !IsNil(o.Zoom) {
		return true
	}

	return false
}

// SetZoom gets a reference to the given int32 and assigns it to the Zoom field.
func (o *CreateScrapingJobRequest) SetZoom(v int32) {
	o.Zoom = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetLat() string {
	if o == nil || IsNil(o.Lat) {
		var ret string
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetLatOk() (*string, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given string and assigns it to the Lat field.
func (o *CreateScrapingJobRequest) SetLat(v string) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetLon() string {
	if o == nil || IsNil(o.Lon) {
		var ret string
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetLonOk() (*string, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given string and assigns it to the Lon field.
func (o *CreateScrapingJobRequest) SetLon(v string) {
	o.Lon = &v
}

// GetFastMode returns the FastMode field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetFastMode() bool {
	if o == nil || IsNil(o.FastMode) {
		var ret bool
		return ret
	}
	return *o.FastMode
}

// GetFastModeOk returns a tuple with the FastMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetFastModeOk() (*bool, bool) {
	if o == nil || IsNil(o.FastMode) {
		return nil, false
	}
	return o.FastMode, true
}

// HasFastMode returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasFastMode() bool {
	if o != nil && !IsNil(o.FastMode) {
		return true
	}

	return false
}

// SetFastMode gets a reference to the given bool and assigns it to the FastMode field.
func (o *CreateScrapingJobRequest) SetFastMode(v bool) {
	o.FastMode = &v
}

// GetRadius returns the Radius field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetRadius() int32 {
	if o == nil || IsNil(o.Radius) {
		var ret int32
		return ret
	}
	return *o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetRadiusOk() (*int32, bool) {
	if o == nil || IsNil(o.Radius) {
		return nil, false
	}
	return o.Radius, true
}

// HasRadius returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasRadius() bool {
	if o != nil && !IsNil(o.Radius) {
		return true
	}

	return false
}

// SetRadius gets a reference to the given int32 and assigns it to the Radius field.
func (o *CreateScrapingJobRequest) SetRadius(v int32) {
	o.Radius = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetDepth() int32 {
	if o == nil || IsNil(o.Depth) {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *CreateScrapingJobRequest) SetDepth(v int32) {
	o.Depth = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetEmail() bool {
	if o == nil || IsNil(o.Email) {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *CreateScrapingJobRequest) SetEmail(v bool) {
	o.Email = &v
}

// GetMaxTime returns the MaxTime field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetMaxTime() int32 {
	if o == nil || IsNil(o.MaxTime) {
		var ret int32
		return ret
	}
	return *o.MaxTime
}

// GetMaxTimeOk returns a tuple with the MaxTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetMaxTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTime) {
		return nil, false
	}
	return o.MaxTime, true
}

// HasMaxTime returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasMaxTime() bool {
	if o != nil && !IsNil(o.MaxTime) {
		return true
	}

	return false
}

// SetMaxTime gets a reference to the given int32 and assigns it to the MaxTime field.
func (o *CreateScrapingJobRequest) SetMaxTime(v int32) {
	o.MaxTime = &v
}

// GetProxies returns the Proxies field value if set, zero value otherwise.
func (o *CreateScrapingJobRequest) GetProxies() []string {
	if o == nil || IsNil(o.Proxies) {
		var ret []string
		return ret
	}
	return o.Proxies
}

// GetProxiesOk returns a tuple with the Proxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateScrapingJobRequest) GetProxiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Proxies) {
		return nil, false
	}
	return o.Proxies, true
}

// HasProxies returns a boolean if a field has been set.
func (o *CreateScrapingJobRequest) HasProxies() bool {
	if o != nil && !IsNil(o.Proxies) {
		return true
	}

	return false
}

// SetProxies gets a reference to the given []string and assigns it to the Proxies field.
func (o *CreateScrapingJobRequest) SetProxies(v []string) {
	o.Proxies = v
}

func (o CreateScrapingJobRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateScrapingJobRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["orgId"] = o.OrgId
	toSerialize["tenantId"] = o.TenantId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Zoom) {
		toSerialize["zoom"] = o.Zoom
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	if !IsNil(o.FastMode) {
		toSerialize["fastMode"] = o.FastMode
	}
	if !IsNil(o.Radius) {
		toSerialize["radius"] = o.Radius
	}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.MaxTime) {
		toSerialize["maxTime"] = o.MaxTime
	}
	if !IsNil(o.Proxies) {
		toSerialize["proxies"] = o.Proxies
	}
	return toSerialize, nil
}

func (o *CreateScrapingJobRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userId",
		"orgId",
		"tenantId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateScrapingJobRequest := _CreateScrapingJobRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateScrapingJobRequest)

	if err != nil {
		return err
	}

	*o = CreateScrapingJobRequest(varCreateScrapingJobRequest)

	return err
}

type NullableCreateScrapingJobRequest struct {
	value *CreateScrapingJobRequest
	isSet bool
}

func (v NullableCreateScrapingJobRequest) Get() *CreateScrapingJobRequest {
	return v.value
}

func (v *NullableCreateScrapingJobRequest) Set(val *CreateScrapingJobRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateScrapingJobRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateScrapingJobRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateScrapingJobRequest(val *CreateScrapingJobRequest) *NullableCreateScrapingJobRequest {
	return &NullableCreateScrapingJobRequest{value: val, isSet: true}
}

func (v NullableCreateScrapingJobRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateScrapingJobRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


