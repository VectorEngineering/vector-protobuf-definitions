/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the DeleteScrapingJobResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteScrapingJobResponse{}

// DeleteScrapingJobResponse struct for DeleteScrapingJobResponse
type DeleteScrapingJobResponse struct {
	Success *bool `json:"success,omitempty"`
}

// NewDeleteScrapingJobResponse instantiates a new DeleteScrapingJobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteScrapingJobResponse() *DeleteScrapingJobResponse {
	this := DeleteScrapingJobResponse{}
	return &this
}

// NewDeleteScrapingJobResponseWithDefaults instantiates a new DeleteScrapingJobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteScrapingJobResponseWithDefaults() *DeleteScrapingJobResponse {
	this := DeleteScrapingJobResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DeleteScrapingJobResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteScrapingJobResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *DeleteScrapingJobResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *DeleteScrapingJobResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o DeleteScrapingJobResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteScrapingJobResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableDeleteScrapingJobResponse struct {
	value *DeleteScrapingJobResponse
	isSet bool
}

func (v NullableDeleteScrapingJobResponse) Get() *DeleteScrapingJobResponse {
	return v.value
}

func (v *NullableDeleteScrapingJobResponse) Set(val *DeleteScrapingJobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteScrapingJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteScrapingJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteScrapingJobResponse(val *DeleteScrapingJobResponse) *NullableDeleteScrapingJobResponse {
	return &NullableDeleteScrapingJobResponse{value: val, isSet: true}
}

func (v NullableDeleteScrapingJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteScrapingJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


