/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the DownloadScrapingResultsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadScrapingResultsResponse{}

// DownloadScrapingResultsResponse struct for DownloadScrapingResultsResponse
type DownloadScrapingResultsResponse struct {
	Content *string `json:"content,omitempty"`
	Filename *string `json:"filename,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
}

// NewDownloadScrapingResultsResponse instantiates a new DownloadScrapingResultsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadScrapingResultsResponse() *DownloadScrapingResultsResponse {
	this := DownloadScrapingResultsResponse{}
	return &this
}

// NewDownloadScrapingResultsResponseWithDefaults instantiates a new DownloadScrapingResultsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadScrapingResultsResponseWithDefaults() *DownloadScrapingResultsResponse {
	this := DownloadScrapingResultsResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *DownloadScrapingResultsResponse) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadScrapingResultsResponse) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *DownloadScrapingResultsResponse) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *DownloadScrapingResultsResponse) SetContent(v string) {
	o.Content = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *DownloadScrapingResultsResponse) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadScrapingResultsResponse) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *DownloadScrapingResultsResponse) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *DownloadScrapingResultsResponse) SetFilename(v string) {
	o.Filename = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *DownloadScrapingResultsResponse) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadScrapingResultsResponse) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *DownloadScrapingResultsResponse) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *DownloadScrapingResultsResponse) SetContentType(v string) {
	o.ContentType = &v
}

func (o DownloadScrapingResultsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadScrapingResultsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableDownloadScrapingResultsResponse struct {
	value *DownloadScrapingResultsResponse
	isSet bool
}

func (v NullableDownloadScrapingResultsResponse) Get() *DownloadScrapingResultsResponse {
	return v.value
}

func (v *NullableDownloadScrapingResultsResponse) Set(val *DownloadScrapingResultsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadScrapingResultsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadScrapingResultsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadScrapingResultsResponse(val *DownloadScrapingResultsResponse) *NullableDownloadScrapingResultsResponse {
	return &NullableDownloadScrapingResultsResponse{value: val, isSet: true}
}

func (v NullableDownloadScrapingResultsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadScrapingResultsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


