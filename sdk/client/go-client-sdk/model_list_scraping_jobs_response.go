/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the ListScrapingJobsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListScrapingJobsResponse{}

// ListScrapingJobsResponse struct for ListScrapingJobsResponse
type ListScrapingJobsResponse struct {
	Jobs []ScrapingJob `json:"jobs,omitempty"`
}

// NewListScrapingJobsResponse instantiates a new ListScrapingJobsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListScrapingJobsResponse() *ListScrapingJobsResponse {
	this := ListScrapingJobsResponse{}
	return &this
}

// NewListScrapingJobsResponseWithDefaults instantiates a new ListScrapingJobsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListScrapingJobsResponseWithDefaults() *ListScrapingJobsResponse {
	this := ListScrapingJobsResponse{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *ListScrapingJobsResponse) GetJobs() []ScrapingJob {
	if o == nil || IsNil(o.Jobs) {
		var ret []ScrapingJob
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListScrapingJobsResponse) GetJobsOk() ([]ScrapingJob, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *ListScrapingJobsResponse) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []ScrapingJob and assigns it to the Jobs field.
func (o *ListScrapingJobsResponse) SetJobs(v []ScrapingJob) {
	o.Jobs = v
}

func (o ListScrapingJobsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListScrapingJobsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	return toSerialize, nil
}

type NullableListScrapingJobsResponse struct {
	value *ListScrapingJobsResponse
	isSet bool
}

func (v NullableListScrapingJobsResponse) Get() *ListScrapingJobsResponse {
	return v.value
}

func (v *NullableListScrapingJobsResponse) Set(val *ListScrapingJobsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListScrapingJobsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListScrapingJobsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListScrapingJobsResponse(val *ListScrapingJobsResponse) *NullableListScrapingJobsResponse {
	return &NullableListScrapingJobsResponse{value: val, isSet: true}
}

func (v NullableListScrapingJobsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListScrapingJobsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


