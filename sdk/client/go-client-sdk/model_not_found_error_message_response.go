/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the NotFoundErrorMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotFoundErrorMessageResponse{}

// NotFoundErrorMessageResponse Represents resource not found errors
type NotFoundErrorMessageResponse struct {
	Code *NotFoundErrorCode `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	ResourceInfo *ResourceInfo `json:"resourceInfo,omitempty"`
	Suggestions *Suggestions `json:"suggestions,omitempty"`
	ApiInfo *APIInfo `json:"apiInfo,omitempty"`
	ErrorResponse *ErrorResponse `json:"errorResponse,omitempty"`
}

// NewNotFoundErrorMessageResponse instantiates a new NotFoundErrorMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotFoundErrorMessageResponse() *NotFoundErrorMessageResponse {
	this := NotFoundErrorMessageResponse{}
	var code NotFoundErrorCode = NO_NOT_FOUND_ERROR
	this.Code = &code
	return &this
}

// NewNotFoundErrorMessageResponseWithDefaults instantiates a new NotFoundErrorMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotFoundErrorMessageResponseWithDefaults() *NotFoundErrorMessageResponse {
	this := NotFoundErrorMessageResponse{}
	var code NotFoundErrorCode = NO_NOT_FOUND_ERROR
	this.Code = &code
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetCode() NotFoundErrorCode {
	if o == nil || IsNil(o.Code) {
		var ret NotFoundErrorCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetCodeOk() (*NotFoundErrorCode, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given NotFoundErrorCode and assigns it to the Code field.
func (o *NotFoundErrorMessageResponse) SetCode(v NotFoundErrorCode) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *NotFoundErrorMessageResponse) SetMessage(v string) {
	o.Message = &v
}

// GetResourceInfo returns the ResourceInfo field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetResourceInfo() ResourceInfo {
	if o == nil || IsNil(o.ResourceInfo) {
		var ret ResourceInfo
		return ret
	}
	return *o.ResourceInfo
}

// GetResourceInfoOk returns a tuple with the ResourceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetResourceInfoOk() (*ResourceInfo, bool) {
	if o == nil || IsNil(o.ResourceInfo) {
		return nil, false
	}
	return o.ResourceInfo, true
}

// HasResourceInfo returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasResourceInfo() bool {
	if o != nil && !IsNil(o.ResourceInfo) {
		return true
	}

	return false
}

// SetResourceInfo gets a reference to the given ResourceInfo and assigns it to the ResourceInfo field.
func (o *NotFoundErrorMessageResponse) SetResourceInfo(v ResourceInfo) {
	o.ResourceInfo = &v
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetSuggestions() Suggestions {
	if o == nil || IsNil(o.Suggestions) {
		var ret Suggestions
		return ret
	}
	return *o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetSuggestionsOk() (*Suggestions, bool) {
	if o == nil || IsNil(o.Suggestions) {
		return nil, false
	}
	return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasSuggestions() bool {
	if o != nil && !IsNil(o.Suggestions) {
		return true
	}

	return false
}

// SetSuggestions gets a reference to the given Suggestions and assigns it to the Suggestions field.
func (o *NotFoundErrorMessageResponse) SetSuggestions(v Suggestions) {
	o.Suggestions = &v
}

// GetApiInfo returns the ApiInfo field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetApiInfo() APIInfo {
	if o == nil || IsNil(o.ApiInfo) {
		var ret APIInfo
		return ret
	}
	return *o.ApiInfo
}

// GetApiInfoOk returns a tuple with the ApiInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetApiInfoOk() (*APIInfo, bool) {
	if o == nil || IsNil(o.ApiInfo) {
		return nil, false
	}
	return o.ApiInfo, true
}

// HasApiInfo returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasApiInfo() bool {
	if o != nil && !IsNil(o.ApiInfo) {
		return true
	}

	return false
}

// SetApiInfo gets a reference to the given APIInfo and assigns it to the ApiInfo field.
func (o *NotFoundErrorMessageResponse) SetApiInfo(v APIInfo) {
	o.ApiInfo = &v
}

// GetErrorResponse returns the ErrorResponse field value if set, zero value otherwise.
func (o *NotFoundErrorMessageResponse) GetErrorResponse() ErrorResponse {
	if o == nil || IsNil(o.ErrorResponse) {
		var ret ErrorResponse
		return ret
	}
	return *o.ErrorResponse
}

// GetErrorResponseOk returns a tuple with the ErrorResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorMessageResponse) GetErrorResponseOk() (*ErrorResponse, bool) {
	if o == nil || IsNil(o.ErrorResponse) {
		return nil, false
	}
	return o.ErrorResponse, true
}

// HasErrorResponse returns a boolean if a field has been set.
func (o *NotFoundErrorMessageResponse) HasErrorResponse() bool {
	if o != nil && !IsNil(o.ErrorResponse) {
		return true
	}

	return false
}

// SetErrorResponse gets a reference to the given ErrorResponse and assigns it to the ErrorResponse field.
func (o *NotFoundErrorMessageResponse) SetErrorResponse(v ErrorResponse) {
	o.ErrorResponse = &v
}

func (o NotFoundErrorMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotFoundErrorMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ResourceInfo) {
		toSerialize["resourceInfo"] = o.ResourceInfo
	}
	if !IsNil(o.Suggestions) {
		toSerialize["suggestions"] = o.Suggestions
	}
	if !IsNil(o.ApiInfo) {
		toSerialize["apiInfo"] = o.ApiInfo
	}
	if !IsNil(o.ErrorResponse) {
		toSerialize["errorResponse"] = o.ErrorResponse
	}
	return toSerialize, nil
}

type NullableNotFoundErrorMessageResponse struct {
	value *NotFoundErrorMessageResponse
	isSet bool
}

func (v NullableNotFoundErrorMessageResponse) Get() *NotFoundErrorMessageResponse {
	return v.value
}

func (v *NullableNotFoundErrorMessageResponse) Set(val *NotFoundErrorMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNotFoundErrorMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNotFoundErrorMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotFoundErrorMessageResponse(val *NotFoundErrorMessageResponse) *NullableNotFoundErrorMessageResponse {
	return &NullableNotFoundErrorMessageResponse{value: val, isSet: true}
}

func (v NullableNotFoundErrorMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotFoundErrorMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


