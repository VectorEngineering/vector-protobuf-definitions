/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
	"time"
)

// checks if the OperationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperationDetails{}

// OperationDetails struct for OperationDetails
type OperationDetails struct {
	OperationId *string `json:"operationId,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	EndTime *time.Time `json:"endTime,omitempty"`
	StackTrace []string `json:"stackTrace,omitempty"`
	Parameters *map[string]string `json:"parameters,omitempty"`
}

// NewOperationDetails instantiates a new OperationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationDetails() *OperationDetails {
	this := OperationDetails{}
	return &this
}

// NewOperationDetailsWithDefaults instantiates a new OperationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationDetailsWithDefaults() *OperationDetails {
	this := OperationDetails{}
	return &this
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *OperationDetails) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationDetails) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *OperationDetails) HasOperationId() bool {
	if o != nil && !IsNil(o.OperationId) {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *OperationDetails) SetOperationId(v string) {
	o.OperationId = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *OperationDetails) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationDetails) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *OperationDetails) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *OperationDetails) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *OperationDetails) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationDetails) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *OperationDetails) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *OperationDetails) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetStackTrace returns the StackTrace field value if set, zero value otherwise.
func (o *OperationDetails) GetStackTrace() []string {
	if o == nil || IsNil(o.StackTrace) {
		var ret []string
		return ret
	}
	return o.StackTrace
}

// GetStackTraceOk returns a tuple with the StackTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationDetails) GetStackTraceOk() ([]string, bool) {
	if o == nil || IsNil(o.StackTrace) {
		return nil, false
	}
	return o.StackTrace, true
}

// HasStackTrace returns a boolean if a field has been set.
func (o *OperationDetails) HasStackTrace() bool {
	if o != nil && !IsNil(o.StackTrace) {
		return true
	}

	return false
}

// SetStackTrace gets a reference to the given []string and assigns it to the StackTrace field.
func (o *OperationDetails) SetStackTrace(v []string) {
	o.StackTrace = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *OperationDetails) GetParameters() map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationDetails) GetParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *OperationDetails) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *OperationDetails) SetParameters(v map[string]string) {
	o.Parameters = &v
}

func (o OperationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperationId) {
		toSerialize["operationId"] = o.OperationId
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.StackTrace) {
		toSerialize["stackTrace"] = o.StackTrace
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableOperationDetails struct {
	value *OperationDetails
	isSet bool
}

func (v NullableOperationDetails) Get() *OperationDetails {
	return v.value
}

func (v *NullableOperationDetails) Set(val *OperationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationDetails(val *OperationDetails) *NullableOperationDetails {
	return &NullableOperationDetails{value: val, isSet: true}
}

func (v NullableOperationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


