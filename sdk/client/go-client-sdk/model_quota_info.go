/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
	"time"
)

// checks if the QuotaInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaInfo{}

// QuotaInfo struct for QuotaInfo
type QuotaInfo struct {
	Resource *string `json:"resource,omitempty"`
	Used *string `json:"used,omitempty"`
	Limit *string `json:"limit,omitempty"`
	ResetTime *time.Time `json:"resetTime,omitempty"`
	ResourceUsage *map[string]string `json:"resourceUsage,omitempty"`
}

// NewQuotaInfo instantiates a new QuotaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaInfo() *QuotaInfo {
	this := QuotaInfo{}
	return &this
}

// NewQuotaInfoWithDefaults instantiates a new QuotaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaInfoWithDefaults() *QuotaInfo {
	this := QuotaInfo{}
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *QuotaInfo) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaInfo) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *QuotaInfo) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *QuotaInfo) SetResource(v string) {
	o.Resource = &v
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *QuotaInfo) GetUsed() string {
	if o == nil || IsNil(o.Used) {
		var ret string
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaInfo) GetUsedOk() (*string, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *QuotaInfo) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given string and assigns it to the Used field.
func (o *QuotaInfo) SetUsed(v string) {
	o.Used = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QuotaInfo) GetLimit() string {
	if o == nil || IsNil(o.Limit) {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaInfo) GetLimitOk() (*string, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QuotaInfo) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *QuotaInfo) SetLimit(v string) {
	o.Limit = &v
}

// GetResetTime returns the ResetTime field value if set, zero value otherwise.
func (o *QuotaInfo) GetResetTime() time.Time {
	if o == nil || IsNil(o.ResetTime) {
		var ret time.Time
		return ret
	}
	return *o.ResetTime
}

// GetResetTimeOk returns a tuple with the ResetTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaInfo) GetResetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ResetTime) {
		return nil, false
	}
	return o.ResetTime, true
}

// HasResetTime returns a boolean if a field has been set.
func (o *QuotaInfo) HasResetTime() bool {
	if o != nil && !IsNil(o.ResetTime) {
		return true
	}

	return false
}

// SetResetTime gets a reference to the given time.Time and assigns it to the ResetTime field.
func (o *QuotaInfo) SetResetTime(v time.Time) {
	o.ResetTime = &v
}

// GetResourceUsage returns the ResourceUsage field value if set, zero value otherwise.
func (o *QuotaInfo) GetResourceUsage() map[string]string {
	if o == nil || IsNil(o.ResourceUsage) {
		var ret map[string]string
		return ret
	}
	return *o.ResourceUsage
}

// GetResourceUsageOk returns a tuple with the ResourceUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaInfo) GetResourceUsageOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ResourceUsage) {
		return nil, false
	}
	return o.ResourceUsage, true
}

// HasResourceUsage returns a boolean if a field has been set.
func (o *QuotaInfo) HasResourceUsage() bool {
	if o != nil && !IsNil(o.ResourceUsage) {
		return true
	}

	return false
}

// SetResourceUsage gets a reference to the given map[string]string and assigns it to the ResourceUsage field.
func (o *QuotaInfo) SetResourceUsage(v map[string]string) {
	o.ResourceUsage = &v
}

func (o QuotaInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.ResetTime) {
		toSerialize["resetTime"] = o.ResetTime
	}
	if !IsNil(o.ResourceUsage) {
		toSerialize["resourceUsage"] = o.ResourceUsage
	}
	return toSerialize, nil
}

type NullableQuotaInfo struct {
	value *QuotaInfo
	isSet bool
}

func (v NullableQuotaInfo) Get() *QuotaInfo {
	return v.value
}

func (v *NullableQuotaInfo) Set(val *QuotaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaInfo(val *QuotaInfo) *NullableQuotaInfo {
	return &NullableQuotaInfo{value: val, isSet: true}
}

func (v NullableQuotaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


