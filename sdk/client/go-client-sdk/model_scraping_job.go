/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
	"time"
)

// checks if the ScrapingJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScrapingJob{}

// ScrapingJob ScrapingJob represents a Google Maps scraping task. This message defines both the configuration and current state of a scraping operation.  Key components: - Basic metadata (id, name, timestamps) - Job status tracking - Search configuration parameters - Geographic settings - Performance options - Multi-tenant context  Database considerations: - Stored in \"scraping_jobs\" table - Uses GORM for ORM mapping - Includes foreign key to Account - Supports soft deletes  Usage example: ```go job := &ScrapingJob{     Name: \"Athens Cafes\",     Status: BackgroundJobStatus_BACKGROUND_JOB_STATUS_QUEUED,     Keywords: []string{\"cafe\", \"coffee\"},     Lang: \"el\",     Zoom: 15,     FastMode: true,     MaxTime: 3600, } ```
type ScrapingJob struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Status *BackgroundJobStatus `json:"status,omitempty"`
	Keywords []string `json:"keywords,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Zoom *int32 `json:"zoom,omitempty"`
	Lat *string `json:"lat,omitempty"`
	Lon *string `json:"lon,omitempty"`
	FastMode *bool `json:"fastMode,omitempty"`
	Radius *int32 `json:"radius,omitempty"`
	Depth *int32 `json:"depth,omitempty"`
	Email *bool `json:"email,omitempty"`
	MaxTime *int32 `json:"maxTime,omitempty"`
	Proxies []string `json:"proxies,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	PayloadType *string `json:"payloadType,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	Payload *string `json:"payload,omitempty"`
}

// NewScrapingJob instantiates a new ScrapingJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScrapingJob() *ScrapingJob {
	this := ScrapingJob{}
	var status BackgroundJobStatus = UNSPECIFIED
	this.Status = &status
	return &this
}

// NewScrapingJobWithDefaults instantiates a new ScrapingJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScrapingJobWithDefaults() *ScrapingJob {
	this := ScrapingJob{}
	var status BackgroundJobStatus = UNSPECIFIED
	this.Status = &status
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScrapingJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScrapingJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ScrapingJob) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScrapingJob) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScrapingJob) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScrapingJob) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ScrapingJob) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ScrapingJob) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ScrapingJob) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScrapingJob) GetStatus() BackgroundJobStatus {
	if o == nil || IsNil(o.Status) {
		var ret BackgroundJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetStatusOk() (*BackgroundJobStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScrapingJob) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BackgroundJobStatus and assigns it to the Status field.
func (o *ScrapingJob) SetStatus(v BackgroundJobStatus) {
	o.Status = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ScrapingJob) GetKeywords() []string {
	if o == nil || IsNil(o.Keywords) {
		var ret []string
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ScrapingJob) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []string and assigns it to the Keywords field.
func (o *ScrapingJob) SetKeywords(v []string) {
	o.Keywords = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ScrapingJob) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ScrapingJob) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ScrapingJob) SetLang(v string) {
	o.Lang = &v
}

// GetZoom returns the Zoom field value if set, zero value otherwise.
func (o *ScrapingJob) GetZoom() int32 {
	if o == nil || IsNil(o.Zoom) {
		var ret int32
		return ret
	}
	return *o.Zoom
}

// GetZoomOk returns a tuple with the Zoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetZoomOk() (*int32, bool) {
	if o == nil || IsNil(o.Zoom) {
		return nil, false
	}
	return o.Zoom, true
}

// HasZoom returns a boolean if a field has been set.
func (o *ScrapingJob) HasZoom() bool {
	if o != nil && !IsNil(o.Zoom) {
		return true
	}

	return false
}

// SetZoom gets a reference to the given int32 and assigns it to the Zoom field.
func (o *ScrapingJob) SetZoom(v int32) {
	o.Zoom = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *ScrapingJob) GetLat() string {
	if o == nil || IsNil(o.Lat) {
		var ret string
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetLatOk() (*string, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *ScrapingJob) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given string and assigns it to the Lat field.
func (o *ScrapingJob) SetLat(v string) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *ScrapingJob) GetLon() string {
	if o == nil || IsNil(o.Lon) {
		var ret string
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetLonOk() (*string, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *ScrapingJob) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given string and assigns it to the Lon field.
func (o *ScrapingJob) SetLon(v string) {
	o.Lon = &v
}

// GetFastMode returns the FastMode field value if set, zero value otherwise.
func (o *ScrapingJob) GetFastMode() bool {
	if o == nil || IsNil(o.FastMode) {
		var ret bool
		return ret
	}
	return *o.FastMode
}

// GetFastModeOk returns a tuple with the FastMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetFastModeOk() (*bool, bool) {
	if o == nil || IsNil(o.FastMode) {
		return nil, false
	}
	return o.FastMode, true
}

// HasFastMode returns a boolean if a field has been set.
func (o *ScrapingJob) HasFastMode() bool {
	if o != nil && !IsNil(o.FastMode) {
		return true
	}

	return false
}

// SetFastMode gets a reference to the given bool and assigns it to the FastMode field.
func (o *ScrapingJob) SetFastMode(v bool) {
	o.FastMode = &v
}

// GetRadius returns the Radius field value if set, zero value otherwise.
func (o *ScrapingJob) GetRadius() int32 {
	if o == nil || IsNil(o.Radius) {
		var ret int32
		return ret
	}
	return *o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetRadiusOk() (*int32, bool) {
	if o == nil || IsNil(o.Radius) {
		return nil, false
	}
	return o.Radius, true
}

// HasRadius returns a boolean if a field has been set.
func (o *ScrapingJob) HasRadius() bool {
	if o != nil && !IsNil(o.Radius) {
		return true
	}

	return false
}

// SetRadius gets a reference to the given int32 and assigns it to the Radius field.
func (o *ScrapingJob) SetRadius(v int32) {
	o.Radius = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *ScrapingJob) GetDepth() int32 {
	if o == nil || IsNil(o.Depth) {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *ScrapingJob) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *ScrapingJob) SetDepth(v int32) {
	o.Depth = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ScrapingJob) GetEmail() bool {
	if o == nil || IsNil(o.Email) {
		var ret bool
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ScrapingJob) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given bool and assigns it to the Email field.
func (o *ScrapingJob) SetEmail(v bool) {
	o.Email = &v
}

// GetMaxTime returns the MaxTime field value if set, zero value otherwise.
func (o *ScrapingJob) GetMaxTime() int32 {
	if o == nil || IsNil(o.MaxTime) {
		var ret int32
		return ret
	}
	return *o.MaxTime
}

// GetMaxTimeOk returns a tuple with the MaxTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetMaxTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTime) {
		return nil, false
	}
	return o.MaxTime, true
}

// HasMaxTime returns a boolean if a field has been set.
func (o *ScrapingJob) HasMaxTime() bool {
	if o != nil && !IsNil(o.MaxTime) {
		return true
	}

	return false
}

// SetMaxTime gets a reference to the given int32 and assigns it to the MaxTime field.
func (o *ScrapingJob) SetMaxTime(v int32) {
	o.MaxTime = &v
}

// GetProxies returns the Proxies field value if set, zero value otherwise.
func (o *ScrapingJob) GetProxies() []string {
	if o == nil || IsNil(o.Proxies) {
		var ret []string
		return ret
	}
	return o.Proxies
}

// GetProxiesOk returns a tuple with the Proxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetProxiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Proxies) {
		return nil, false
	}
	return o.Proxies, true
}

// HasProxies returns a boolean if a field has been set.
func (o *ScrapingJob) HasProxies() bool {
	if o != nil && !IsNil(o.Proxies) {
		return true
	}

	return false
}

// SetProxies gets a reference to the given []string and assigns it to the Proxies field.
func (o *ScrapingJob) SetProxies(v []string) {
	o.Proxies = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ScrapingJob) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ScrapingJob) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ScrapingJob) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ScrapingJob) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ScrapingJob) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *ScrapingJob) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetPayloadType returns the PayloadType field value if set, zero value otherwise.
func (o *ScrapingJob) GetPayloadType() string {
	if o == nil || IsNil(o.PayloadType) {
		var ret string
		return ret
	}
	return *o.PayloadType
}

// GetPayloadTypeOk returns a tuple with the PayloadType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetPayloadTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PayloadType) {
		return nil, false
	}
	return o.PayloadType, true
}

// HasPayloadType returns a boolean if a field has been set.
func (o *ScrapingJob) HasPayloadType() bool {
	if o != nil && !IsNil(o.PayloadType) {
		return true
	}

	return false
}

// SetPayloadType gets a reference to the given string and assigns it to the PayloadType field.
func (o *ScrapingJob) SetPayloadType(v string) {
	o.PayloadType = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ScrapingJob) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ScrapingJob) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ScrapingJob) SetPriority(v int32) {
	o.Priority = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *ScrapingJob) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScrapingJob) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *ScrapingJob) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *ScrapingJob) SetPayload(v string) {
	o.Payload = &v
}

func (o ScrapingJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScrapingJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Zoom) {
		toSerialize["zoom"] = o.Zoom
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	if !IsNil(o.FastMode) {
		toSerialize["fastMode"] = o.FastMode
	}
	if !IsNil(o.Radius) {
		toSerialize["radius"] = o.Radius
	}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.MaxTime) {
		toSerialize["maxTime"] = o.MaxTime
	}
	if !IsNil(o.Proxies) {
		toSerialize["proxies"] = o.Proxies
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.PayloadType) {
		toSerialize["payloadType"] = o.PayloadType
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableScrapingJob struct {
	value *ScrapingJob
	isSet bool
}

func (v NullableScrapingJob) Get() *ScrapingJob {
	return v.value
}

func (v *NullableScrapingJob) Set(val *ScrapingJob) {
	v.value = val
	v.isSet = true
}

func (v NullableScrapingJob) IsSet() bool {
	return v.isSet
}

func (v *NullableScrapingJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScrapingJob(val *ScrapingJob) *NullableScrapingJob {
	return &NullableScrapingJob{value: val, isSet: true}
}

func (v NullableScrapingJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScrapingJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


