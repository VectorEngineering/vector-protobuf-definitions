/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the ServiceUnavailableErrorMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUnavailableErrorMessageResponse{}

// ServiceUnavailableErrorMessageResponse Represents service availability errors
type ServiceUnavailableErrorMessageResponse struct {
	Code *InternalErrorCode `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	AvailabilityInfo *AvailabilityInfo `json:"availabilityInfo,omitempty"`
	ErrorResponse *ErrorResponse `json:"errorResponse,omitempty"`
}

// NewServiceUnavailableErrorMessageResponse instantiates a new ServiceUnavailableErrorMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUnavailableErrorMessageResponse() *ServiceUnavailableErrorMessageResponse {
	this := ServiceUnavailableErrorMessageResponse{}
	var code InternalErrorCode = NO_INTERNAL_ERROR
	this.Code = &code
	return &this
}

// NewServiceUnavailableErrorMessageResponseWithDefaults instantiates a new ServiceUnavailableErrorMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUnavailableErrorMessageResponseWithDefaults() *ServiceUnavailableErrorMessageResponse {
	this := ServiceUnavailableErrorMessageResponse{}
	var code InternalErrorCode = NO_INTERNAL_ERROR
	this.Code = &code
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ServiceUnavailableErrorMessageResponse) GetCode() InternalErrorCode {
	if o == nil || IsNil(o.Code) {
		var ret InternalErrorCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUnavailableErrorMessageResponse) GetCodeOk() (*InternalErrorCode, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ServiceUnavailableErrorMessageResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given InternalErrorCode and assigns it to the Code field.
func (o *ServiceUnavailableErrorMessageResponse) SetCode(v InternalErrorCode) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ServiceUnavailableErrorMessageResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUnavailableErrorMessageResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ServiceUnavailableErrorMessageResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ServiceUnavailableErrorMessageResponse) SetMessage(v string) {
	o.Message = &v
}

// GetAvailabilityInfo returns the AvailabilityInfo field value if set, zero value otherwise.
func (o *ServiceUnavailableErrorMessageResponse) GetAvailabilityInfo() AvailabilityInfo {
	if o == nil || IsNil(o.AvailabilityInfo) {
		var ret AvailabilityInfo
		return ret
	}
	return *o.AvailabilityInfo
}

// GetAvailabilityInfoOk returns a tuple with the AvailabilityInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUnavailableErrorMessageResponse) GetAvailabilityInfoOk() (*AvailabilityInfo, bool) {
	if o == nil || IsNil(o.AvailabilityInfo) {
		return nil, false
	}
	return o.AvailabilityInfo, true
}

// HasAvailabilityInfo returns a boolean if a field has been set.
func (o *ServiceUnavailableErrorMessageResponse) HasAvailabilityInfo() bool {
	if o != nil && !IsNil(o.AvailabilityInfo) {
		return true
	}

	return false
}

// SetAvailabilityInfo gets a reference to the given AvailabilityInfo and assigns it to the AvailabilityInfo field.
func (o *ServiceUnavailableErrorMessageResponse) SetAvailabilityInfo(v AvailabilityInfo) {
	o.AvailabilityInfo = &v
}

// GetErrorResponse returns the ErrorResponse field value if set, zero value otherwise.
func (o *ServiceUnavailableErrorMessageResponse) GetErrorResponse() ErrorResponse {
	if o == nil || IsNil(o.ErrorResponse) {
		var ret ErrorResponse
		return ret
	}
	return *o.ErrorResponse
}

// GetErrorResponseOk returns a tuple with the ErrorResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUnavailableErrorMessageResponse) GetErrorResponseOk() (*ErrorResponse, bool) {
	if o == nil || IsNil(o.ErrorResponse) {
		return nil, false
	}
	return o.ErrorResponse, true
}

// HasErrorResponse returns a boolean if a field has been set.
func (o *ServiceUnavailableErrorMessageResponse) HasErrorResponse() bool {
	if o != nil && !IsNil(o.ErrorResponse) {
		return true
	}

	return false
}

// SetErrorResponse gets a reference to the given ErrorResponse and assigns it to the ErrorResponse field.
func (o *ServiceUnavailableErrorMessageResponse) SetErrorResponse(v ErrorResponse) {
	o.ErrorResponse = &v
}

func (o ServiceUnavailableErrorMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUnavailableErrorMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.AvailabilityInfo) {
		toSerialize["availabilityInfo"] = o.AvailabilityInfo
	}
	if !IsNil(o.ErrorResponse) {
		toSerialize["errorResponse"] = o.ErrorResponse
	}
	return toSerialize, nil
}

type NullableServiceUnavailableErrorMessageResponse struct {
	value *ServiceUnavailableErrorMessageResponse
	isSet bool
}

func (v NullableServiceUnavailableErrorMessageResponse) Get() *ServiceUnavailableErrorMessageResponse {
	return v.value
}

func (v *NullableServiceUnavailableErrorMessageResponse) Set(val *ServiceUnavailableErrorMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUnavailableErrorMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUnavailableErrorMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUnavailableErrorMessageResponse(val *ServiceUnavailableErrorMessageResponse) *NullableServiceUnavailableErrorMessageResponse {
	return &NullableServiceUnavailableErrorMessageResponse{value: val, isSet: true}
}

func (v NullableServiceUnavailableErrorMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUnavailableErrorMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


