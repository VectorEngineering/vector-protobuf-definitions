/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the Suggestions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Suggestions{}

// Suggestions struct for Suggestions
type Suggestions struct {
	SimilarResources []string `json:"similarResources,omitempty"`
	AlternativePaths []string `json:"alternativePaths,omitempty"`
	DocumentationUrl *string `json:"documentationUrl,omitempty"`
	Hints *map[string]string `json:"hints,omitempty"`
}

// NewSuggestions instantiates a new Suggestions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestions() *Suggestions {
	this := Suggestions{}
	return &this
}

// NewSuggestionsWithDefaults instantiates a new Suggestions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestionsWithDefaults() *Suggestions {
	this := Suggestions{}
	return &this
}

// GetSimilarResources returns the SimilarResources field value if set, zero value otherwise.
func (o *Suggestions) GetSimilarResources() []string {
	if o == nil || IsNil(o.SimilarResources) {
		var ret []string
		return ret
	}
	return o.SimilarResources
}

// GetSimilarResourcesOk returns a tuple with the SimilarResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions) GetSimilarResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.SimilarResources) {
		return nil, false
	}
	return o.SimilarResources, true
}

// HasSimilarResources returns a boolean if a field has been set.
func (o *Suggestions) HasSimilarResources() bool {
	if o != nil && !IsNil(o.SimilarResources) {
		return true
	}

	return false
}

// SetSimilarResources gets a reference to the given []string and assigns it to the SimilarResources field.
func (o *Suggestions) SetSimilarResources(v []string) {
	o.SimilarResources = v
}

// GetAlternativePaths returns the AlternativePaths field value if set, zero value otherwise.
func (o *Suggestions) GetAlternativePaths() []string {
	if o == nil || IsNil(o.AlternativePaths) {
		var ret []string
		return ret
	}
	return o.AlternativePaths
}

// GetAlternativePathsOk returns a tuple with the AlternativePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions) GetAlternativePathsOk() ([]string, bool) {
	if o == nil || IsNil(o.AlternativePaths) {
		return nil, false
	}
	return o.AlternativePaths, true
}

// HasAlternativePaths returns a boolean if a field has been set.
func (o *Suggestions) HasAlternativePaths() bool {
	if o != nil && !IsNil(o.AlternativePaths) {
		return true
	}

	return false
}

// SetAlternativePaths gets a reference to the given []string and assigns it to the AlternativePaths field.
func (o *Suggestions) SetAlternativePaths(v []string) {
	o.AlternativePaths = v
}

// GetDocumentationUrl returns the DocumentationUrl field value if set, zero value otherwise.
func (o *Suggestions) GetDocumentationUrl() string {
	if o == nil || IsNil(o.DocumentationUrl) {
		var ret string
		return ret
	}
	return *o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions) GetDocumentationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentationUrl) {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// HasDocumentationUrl returns a boolean if a field has been set.
func (o *Suggestions) HasDocumentationUrl() bool {
	if o != nil && !IsNil(o.DocumentationUrl) {
		return true
	}

	return false
}

// SetDocumentationUrl gets a reference to the given string and assigns it to the DocumentationUrl field.
func (o *Suggestions) SetDocumentationUrl(v string) {
	o.DocumentationUrl = &v
}

// GetHints returns the Hints field value if set, zero value otherwise.
func (o *Suggestions) GetHints() map[string]string {
	if o == nil || IsNil(o.Hints) {
		var ret map[string]string
		return ret
	}
	return *o.Hints
}

// GetHintsOk returns a tuple with the Hints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions) GetHintsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Hints) {
		return nil, false
	}
	return o.Hints, true
}

// HasHints returns a boolean if a field has been set.
func (o *Suggestions) HasHints() bool {
	if o != nil && !IsNil(o.Hints) {
		return true
	}

	return false
}

// SetHints gets a reference to the given map[string]string and assigns it to the Hints field.
func (o *Suggestions) SetHints(v map[string]string) {
	o.Hints = &v
}

func (o Suggestions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Suggestions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SimilarResources) {
		toSerialize["similarResources"] = o.SimilarResources
	}
	if !IsNil(o.AlternativePaths) {
		toSerialize["alternativePaths"] = o.AlternativePaths
	}
	if !IsNil(o.DocumentationUrl) {
		toSerialize["documentationUrl"] = o.DocumentationUrl
	}
	if !IsNil(o.Hints) {
		toSerialize["hints"] = o.Hints
	}
	return toSerialize, nil
}

type NullableSuggestions struct {
	value *Suggestions
	isSet bool
}

func (v NullableSuggestions) Get() *Suggestions {
	return v.value
}

func (v *NullableSuggestions) Set(val *Suggestions) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestions) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestions(val *Suggestions) *NullableSuggestions {
	return &NullableSuggestions{value: val, isSet: true}
}

func (v NullableSuggestions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


