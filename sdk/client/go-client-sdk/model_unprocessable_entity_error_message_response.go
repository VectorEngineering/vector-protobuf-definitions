/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the UnprocessableEntityErrorMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnprocessableEntityErrorMessageResponse{}

// UnprocessableEntityErrorMessageResponse Represents errors when the server understands the content type but cannot process the instructions
type UnprocessableEntityErrorMessageResponse struct {
	Code *int32 `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Errors []FieldError `json:"errors,omitempty"`
	ErrorResponse *ErrorResponse `json:"errorResponse,omitempty"`
}

// NewUnprocessableEntityErrorMessageResponse instantiates a new UnprocessableEntityErrorMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnprocessableEntityErrorMessageResponse() *UnprocessableEntityErrorMessageResponse {
	this := UnprocessableEntityErrorMessageResponse{}
	return &this
}

// NewUnprocessableEntityErrorMessageResponseWithDefaults instantiates a new UnprocessableEntityErrorMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnprocessableEntityErrorMessageResponseWithDefaults() *UnprocessableEntityErrorMessageResponse {
	this := UnprocessableEntityErrorMessageResponse{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UnprocessableEntityErrorMessageResponse) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnprocessableEntityErrorMessageResponse) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UnprocessableEntityErrorMessageResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *UnprocessableEntityErrorMessageResponse) SetCode(v int32) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UnprocessableEntityErrorMessageResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnprocessableEntityErrorMessageResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UnprocessableEntityErrorMessageResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UnprocessableEntityErrorMessageResponse) SetMessage(v string) {
	o.Message = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *UnprocessableEntityErrorMessageResponse) GetErrors() []FieldError {
	if o == nil || IsNil(o.Errors) {
		var ret []FieldError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnprocessableEntityErrorMessageResponse) GetErrorsOk() ([]FieldError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *UnprocessableEntityErrorMessageResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []FieldError and assigns it to the Errors field.
func (o *UnprocessableEntityErrorMessageResponse) SetErrors(v []FieldError) {
	o.Errors = v
}

// GetErrorResponse returns the ErrorResponse field value if set, zero value otherwise.
func (o *UnprocessableEntityErrorMessageResponse) GetErrorResponse() ErrorResponse {
	if o == nil || IsNil(o.ErrorResponse) {
		var ret ErrorResponse
		return ret
	}
	return *o.ErrorResponse
}

// GetErrorResponseOk returns a tuple with the ErrorResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnprocessableEntityErrorMessageResponse) GetErrorResponseOk() (*ErrorResponse, bool) {
	if o == nil || IsNil(o.ErrorResponse) {
		return nil, false
	}
	return o.ErrorResponse, true
}

// HasErrorResponse returns a boolean if a field has been set.
func (o *UnprocessableEntityErrorMessageResponse) HasErrorResponse() bool {
	if o != nil && !IsNil(o.ErrorResponse) {
		return true
	}

	return false
}

// SetErrorResponse gets a reference to the given ErrorResponse and assigns it to the ErrorResponse field.
func (o *UnprocessableEntityErrorMessageResponse) SetErrorResponse(v ErrorResponse) {
	o.ErrorResponse = &v
}

func (o UnprocessableEntityErrorMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnprocessableEntityErrorMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.ErrorResponse) {
		toSerialize["errorResponse"] = o.ErrorResponse
	}
	return toSerialize, nil
}

type NullableUnprocessableEntityErrorMessageResponse struct {
	value *UnprocessableEntityErrorMessageResponse
	isSet bool
}

func (v NullableUnprocessableEntityErrorMessageResponse) Get() *UnprocessableEntityErrorMessageResponse {
	return v.value
}

func (v *NullableUnprocessableEntityErrorMessageResponse) Set(val *UnprocessableEntityErrorMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUnprocessableEntityErrorMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUnprocessableEntityErrorMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnprocessableEntityErrorMessageResponse(val *UnprocessableEntityErrorMessageResponse) *NullableUnprocessableEntityErrorMessageResponse {
	return &NullableUnprocessableEntityErrorMessageResponse{value: val, isSet: true}
}

func (v NullableUnprocessableEntityErrorMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnprocessableEntityErrorMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


