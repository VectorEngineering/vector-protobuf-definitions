/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the UpdateAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAccountResponse{}

// UpdateAccountResponse struct for UpdateAccountResponse
type UpdateAccountResponse struct {
	Account *Account `json:"account,omitempty"`
}

// NewUpdateAccountResponse instantiates a new UpdateAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountResponse() *UpdateAccountResponse {
	this := UpdateAccountResponse{}
	return &this
}

// NewUpdateAccountResponseWithDefaults instantiates a new UpdateAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountResponseWithDefaults() *UpdateAccountResponse {
	this := UpdateAccountResponse{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *UpdateAccountResponse) GetAccount() Account {
	if o == nil || IsNil(o.Account) {
		var ret Account
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountResponse) GetAccountOk() (*Account, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *UpdateAccountResponse) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given Account and assigns it to the Account field.
func (o *UpdateAccountResponse) SetAccount(v Account) {
	o.Account = &v
}

func (o UpdateAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return toSerialize, nil
}

type NullableUpdateAccountResponse struct {
	value *UpdateAccountResponse
	isSet bool
}

func (v NullableUpdateAccountResponse) Get() *UpdateAccountResponse {
	return v.value
}

func (v *NullableUpdateAccountResponse) Set(val *UpdateAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountResponse(val *UpdateAccountResponse) *NullableUpdateAccountResponse {
	return &NullableUpdateAccountResponse{value: val, isSet: true}
}

func (v NullableUpdateAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


