/*
Lead Scraping Service API

Vector Lead Scraping Service API - Manages Lead Scraping Jobs

API version: 1.0
Contact: yoanyomba@vector.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend_client

import (
	"encoding/json"
)

// checks if the ValidationErrorMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationErrorMessageResponse{}

// ValidationErrorMessageResponse Represents data validation and business logic errors
type ValidationErrorMessageResponse struct {
	Code *ValidationErrorCode `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	FieldViolations []FieldViolation `json:"fieldViolations,omitempty"`
	SchemaValidation *SchemaValidation `json:"schemaValidation,omitempty"`
	ResourceValidation *ResourceValidation `json:"resourceValidation,omitempty"`
	ErrorResponse *ErrorResponse `json:"errorResponse,omitempty"`
}

// NewValidationErrorMessageResponse instantiates a new ValidationErrorMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationErrorMessageResponse() *ValidationErrorMessageResponse {
	this := ValidationErrorMessageResponse{}
	var code ValidationErrorCode = NO_ERROR
	this.Code = &code
	return &this
}

// NewValidationErrorMessageResponseWithDefaults instantiates a new ValidationErrorMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationErrorMessageResponseWithDefaults() *ValidationErrorMessageResponse {
	this := ValidationErrorMessageResponse{}
	var code ValidationErrorCode = NO_ERROR
	this.Code = &code
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetCode() ValidationErrorCode {
	if o == nil || IsNil(o.Code) {
		var ret ValidationErrorCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetCodeOk() (*ValidationErrorCode, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given ValidationErrorCode and assigns it to the Code field.
func (o *ValidationErrorMessageResponse) SetCode(v ValidationErrorCode) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ValidationErrorMessageResponse) SetMessage(v string) {
	o.Message = &v
}

// GetFieldViolations returns the FieldViolations field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetFieldViolations() []FieldViolation {
	if o == nil || IsNil(o.FieldViolations) {
		var ret []FieldViolation
		return ret
	}
	return o.FieldViolations
}

// GetFieldViolationsOk returns a tuple with the FieldViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetFieldViolationsOk() ([]FieldViolation, bool) {
	if o == nil || IsNil(o.FieldViolations) {
		return nil, false
	}
	return o.FieldViolations, true
}

// HasFieldViolations returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasFieldViolations() bool {
	if o != nil && !IsNil(o.FieldViolations) {
		return true
	}

	return false
}

// SetFieldViolations gets a reference to the given []FieldViolation and assigns it to the FieldViolations field.
func (o *ValidationErrorMessageResponse) SetFieldViolations(v []FieldViolation) {
	o.FieldViolations = v
}

// GetSchemaValidation returns the SchemaValidation field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetSchemaValidation() SchemaValidation {
	if o == nil || IsNil(o.SchemaValidation) {
		var ret SchemaValidation
		return ret
	}
	return *o.SchemaValidation
}

// GetSchemaValidationOk returns a tuple with the SchemaValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetSchemaValidationOk() (*SchemaValidation, bool) {
	if o == nil || IsNil(o.SchemaValidation) {
		return nil, false
	}
	return o.SchemaValidation, true
}

// HasSchemaValidation returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasSchemaValidation() bool {
	if o != nil && !IsNil(o.SchemaValidation) {
		return true
	}

	return false
}

// SetSchemaValidation gets a reference to the given SchemaValidation and assigns it to the SchemaValidation field.
func (o *ValidationErrorMessageResponse) SetSchemaValidation(v SchemaValidation) {
	o.SchemaValidation = &v
}

// GetResourceValidation returns the ResourceValidation field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetResourceValidation() ResourceValidation {
	if o == nil || IsNil(o.ResourceValidation) {
		var ret ResourceValidation
		return ret
	}
	return *o.ResourceValidation
}

// GetResourceValidationOk returns a tuple with the ResourceValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetResourceValidationOk() (*ResourceValidation, bool) {
	if o == nil || IsNil(o.ResourceValidation) {
		return nil, false
	}
	return o.ResourceValidation, true
}

// HasResourceValidation returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasResourceValidation() bool {
	if o != nil && !IsNil(o.ResourceValidation) {
		return true
	}

	return false
}

// SetResourceValidation gets a reference to the given ResourceValidation and assigns it to the ResourceValidation field.
func (o *ValidationErrorMessageResponse) SetResourceValidation(v ResourceValidation) {
	o.ResourceValidation = &v
}

// GetErrorResponse returns the ErrorResponse field value if set, zero value otherwise.
func (o *ValidationErrorMessageResponse) GetErrorResponse() ErrorResponse {
	if o == nil || IsNil(o.ErrorResponse) {
		var ret ErrorResponse
		return ret
	}
	return *o.ErrorResponse
}

// GetErrorResponseOk returns a tuple with the ErrorResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrorMessageResponse) GetErrorResponseOk() (*ErrorResponse, bool) {
	if o == nil || IsNil(o.ErrorResponse) {
		return nil, false
	}
	return o.ErrorResponse, true
}

// HasErrorResponse returns a boolean if a field has been set.
func (o *ValidationErrorMessageResponse) HasErrorResponse() bool {
	if o != nil && !IsNil(o.ErrorResponse) {
		return true
	}

	return false
}

// SetErrorResponse gets a reference to the given ErrorResponse and assigns it to the ErrorResponse field.
func (o *ValidationErrorMessageResponse) SetErrorResponse(v ErrorResponse) {
	o.ErrorResponse = &v
}

func (o ValidationErrorMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationErrorMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.FieldViolations) {
		toSerialize["fieldViolations"] = o.FieldViolations
	}
	if !IsNil(o.SchemaValidation) {
		toSerialize["schemaValidation"] = o.SchemaValidation
	}
	if !IsNil(o.ResourceValidation) {
		toSerialize["resourceValidation"] = o.ResourceValidation
	}
	if !IsNil(o.ErrorResponse) {
		toSerialize["errorResponse"] = o.ErrorResponse
	}
	return toSerialize, nil
}

type NullableValidationErrorMessageResponse struct {
	value *ValidationErrorMessageResponse
	isSet bool
}

func (v NullableValidationErrorMessageResponse) Get() *ValidationErrorMessageResponse {
	return v.value
}

func (v *NullableValidationErrorMessageResponse) Set(val *ValidationErrorMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationErrorMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationErrorMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationErrorMessageResponse(val *ValidationErrorMessageResponse) *NullableValidationErrorMessageResponse {
	return &NullableValidationErrorMessageResponse{value: val, isSet: true}
}

func (v NullableValidationErrorMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationErrorMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


