// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Lead Scraping Service API
 *
 * Vector Lead Scraping Service API - Manages Lead Scraping Jobs
 *
 * API version: 1.0
 * Contact: yoanyomba@vector.ai
 */

package backend_server

import (
	"context"
	"net/http"
)



// LeadScraperServiceAPIRouter defines the required methods for binding the api requests to a responses for the LeadScraperServiceAPI
// The LeadScraperServiceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LeadScraperServiceAPIServicer to perform the required actions, then write the service results to the http response.
type LeadScraperServiceAPIRouter interface { 
	CreateAccount(http.ResponseWriter, *http.Request)
	CreateScrapingJob(http.ResponseWriter, *http.Request)
	DeleteAccount(http.ResponseWriter, *http.Request)
	DeleteScrapingJob(http.ResponseWriter, *http.Request)
	DownloadScrapingResults(http.ResponseWriter, *http.Request)
	GetAccount(http.ResponseWriter, *http.Request)
	GetScrapingJob(http.ResponseWriter, *http.Request)
	ListAccounts(http.ResponseWriter, *http.Request)
	ListScrapingJobs(http.ResponseWriter, *http.Request)
	UpdateAccount(http.ResponseWriter, *http.Request)
}


// LeadScraperServiceAPIServicer defines the api actions for the LeadScraperServiceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LeadScraperServiceAPIServicer interface { 
	CreateAccount(context.Context, CreateAccountRequest) (ImplResponse, error)
	CreateScrapingJob(context.Context, CreateScrapingJobRequest) (ImplResponse, error)
	DeleteAccount(context.Context, string, string, string) (ImplResponse, error)
	DeleteScrapingJob(context.Context, string, string, string, string) (ImplResponse, error)
	DownloadScrapingResults(context.Context, string, string, string, string) (ImplResponse, error)
	GetAccount(context.Context, string, string, string) (ImplResponse, error)
	GetScrapingJob(context.Context, string, string, string, string) (ImplResponse, error)
	ListAccounts(context.Context, string, string, int32, int32) (ImplResponse, error)
	ListScrapingJobs(context.Context, string, string, string) (ImplResponse, error)
	UpdateAccount(context.Context, UpdateAccountRequest) (ImplResponse, error)
}
