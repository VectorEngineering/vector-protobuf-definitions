// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Lead Scraping Service API
 *
 * Vector Lead Scraping Service API - Manages Lead Scraping Jobs
 *
 * API version: 1.0
 * Contact: yoanyomba@vector.ai
 */

package backend_server




// AuthenticationErrorMessageResponse - Represents authentication and authorization failures
type AuthenticationErrorMessageResponse struct {

	Code AuthErrorCode `json:"code,omitempty"`

	Message string `json:"message,omitempty"`

	TokenInfo TokenInfo `json:"tokenInfo,omitempty"`

	AuthContext AuthContext `json:"authContext,omitempty"`

	SessionInfo SessionInfo `json:"sessionInfo,omitempty"`

	MfaInfo MfaInfo `json:"mfaInfo,omitempty"`

	ErrorResponse ErrorResponse `json:"errorResponse,omitempty"`
}

// AssertAuthenticationErrorMessageResponseRequired checks if the required fields are not zero-ed
func AssertAuthenticationErrorMessageResponseRequired(obj AuthenticationErrorMessageResponse) error {
	if err := AssertTokenInfoRequired(obj.TokenInfo); err != nil {
		return err
	}
	if err := AssertAuthContextRequired(obj.AuthContext); err != nil {
		return err
	}
	if err := AssertSessionInfoRequired(obj.SessionInfo); err != nil {
		return err
	}
	if err := AssertMfaInfoRequired(obj.MfaInfo); err != nil {
		return err
	}
	if err := AssertErrorResponseRequired(obj.ErrorResponse); err != nil {
		return err
	}
	return nil
}

// AssertAuthenticationErrorMessageResponseConstraints checks if the values respects the defined constraints
func AssertAuthenticationErrorMessageResponseConstraints(obj AuthenticationErrorMessageResponse) error {
	if err := AssertTokenInfoConstraints(obj.TokenInfo); err != nil {
		return err
	}
	if err := AssertAuthContextConstraints(obj.AuthContext); err != nil {
		return err
	}
	if err := AssertSessionInfoConstraints(obj.SessionInfo); err != nil {
		return err
	}
	if err := AssertMfaInfoConstraints(obj.MfaInfo); err != nil {
		return err
	}
	if err := AssertErrorResponseConstraints(obj.ErrorResponse); err != nil {
		return err
	}
	return nil
}
