# 
# Lead Scraping Service API
# 
# 
# Vector Lead Scraping Service API - Manages Lead Scraping Jobs
# 
# Version: 1.0
# Contact: yoanyomba@vector.ai
# Generated by OpenAPI Generator: https://openapi-generator.tech

# package openapi3graphql-server

# lead_scraper_service_api



input CreateAccountInput {
    
    createAccountRequest: CreateAccountRequestInput
}

input CreateScrapingJobInput {
    
    createScrapingJobRequest: CreateScrapingJobRequestInput
}

input DeleteAccountInput {
    # Account identifier
    accountId: String!, 
    # Organization context
    orgId: String!, 
    # Tenant context
    tenantId: String!
}

input DeleteScrapingJobInput {
    
    jobId: String!, 
    
    userId: String!, 
    
    orgId: String!, 
    
    tenantId: String!
}

input UpdateAccountInput {
    
    updateAccountRequest: UpdateAccountRequestInput
}

type Mutation {
  # Create a new account
  # Creates a new user account in the workspace service
  # @param CreateAccountRequest createAccountRequest 
  # @return [CreateAccountResponse]
  CreateAccount(input: CreateAccountInput!): CreateAccountResponse
  # Create a new job scraping task
  # This endpoint creates a new Google Maps scraping job
  # @param CreateScrapingJobRequest createScrapingJobRequest 
  # @return [CreateScrapingJobResponse]
  CreateScrapingJob(input: CreateScrapingJobInput!): CreateScrapingJobResponse
  # Delete account
  # Permanently deletes an account and associated resources
  # @param String! accountId Account identifier
  # @param String! orgId Organization context
  # @param String! tenantId Tenant context
  # @return [DeleteAccountResponse]
  DeleteAccount(input: DeleteAccountInput!): DeleteAccountResponse
  # Delete a specific job
  # This endpoint deletes a specific Google Maps scraping job
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [DeleteScrapingJobResponse]
  DeleteScrapingJob(input: DeleteScrapingJobInput!): DeleteScrapingJobResponse
  # Update account details
  # Updates specified fields of an existing account
  # @param UpdateAccountRequest updateAccountRequest 
  # @return [UpdateAccountResponse]
  UpdateAccount(input: UpdateAccountInput!): UpdateAccountResponse
}

type Query {
  # Download job results as CSV
  # This endpoint downloads the results of a Google Maps scraping job as CSV
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [DownloadScrapingResultsResponse]
  DownloadScrapingResults(jobId: String!, userId: String!, orgId: String!, tenantId: String!): DownloadScrapingResultsResponse
  # Get account details
  # Retrieves details of a specific account
  # @param String! accountId Account identifier
  # @param String! orgId Organization context
  # @param String! tenantId Tenant context
  # @return [GetAccountResponse]
  GetAccount(accountId: String!, orgId: String!, tenantId: String!): GetAccountResponse
  # Get a specific job
  # This endpoint retrieves a specific Google Maps scraping job
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [GetScrapingJobResponse]
  GetScrapingJob(jobId: String!, userId: String!, orgId: String!, tenantId: String!): GetScrapingJobResponse
  # List accounts
  # Retrieves a list of accounts with optional filtering
  # @param String! orgId Organization context
  # @param String! tenantId Tenant context
  # @param Int! offset Pagination offset
  # @param Int! limit Maximum number of results
  # @return [ListAccountsResponse]
  ListAccounts(orgId: String!, tenantId: String!, offset: Int!, limit: Int!): ListAccountsResponse
  # Get all jobs
  # This endpoint retrieves all Google Maps scraping jobs
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [ListScrapingJobsResponse]
  ListScrapingJobs(userId: String!, orgId: String!, tenantId: String!): ListScrapingJobsResponse
}

