# 
# Lead Scraping Service API
# 
# 
# Vector Lead Scraping Service API - Manages Lead Scraping Jobs
# 
# Version: 1.0
# Contact: yoanyomba@vector.ai
# Generated by OpenAPI Generator: https://openapi-generator.tech

# package openapi3graphql-server

# lead_scraper_service_api



input CreateAccountInput {
    
    createAccountRequest: CreateAccountRequestInput
}

input CreateOrganizationInput {
    
    createOrganizationRequest: CreateOrganizationRequestInput
}

input CreateScrapingJobInput {
    
    createScrapingJobRequest: CreateScrapingJobRequestInput
}

input CreateTenantInput {
    
    organizationId: String!, 
    
    createTenantBody: CreateTenantBodyInput
}

input CreateWorkspaceInput {
    
    createWorkspaceRequest: CreateWorkspaceRequestInput
}

input DeleteAccountInput {
    
    Id_: String!, 
    
    organizationId: String!, 
    
    tenantId: String!
}

input DeleteOrganizationInput {
    
    Id_: String!
}

input DeleteScrapingJobInput {
    
    jobId: String!, 
    
    userId: String!, 
    
    orgId: String!, 
    
    tenantId: String!
}

input DeleteTenantInput {
    
    organizationId: String!, 
    
    tenantId: String!
}

input DeleteWorkspaceInput {
    
    Id_: String!
}

input LeadScraperServiceCreateWorkflowInput {
    
    workspaceId: String!, 
    
    createWorkflowBody: CreateWorkflowBodyInput
}

input PauseWorkflowInput {
    
    workspaceId: String!, 
    
    Id_: String!, 
    
    pauseWorkflowBody: PauseWorkflowBodyInput
}

input TriggerWorkflowInput {
    
    workspaceId: String!, 
    
    Id_: String!, 
    
    triggerWorkflowBody: TriggerWorkflowBodyInput
}

input UpdateAccountInput {
    
    updateAccountRequest: UpdateAccountRequestInput
}

input UpdateAccountSettingsInput {
    
    updateAccountSettingsRequest: UpdateAccountSettingsRequestInput
}

input UpdateOrganizationInput {
    
    updateOrganizationRequest: UpdateOrganizationRequestInput
}

input UpdateTenantInput {
    
    updateTenantRequest: UpdateTenantRequestInput
}

input UpdateWorkflowInput {
    
    updateWorkflowRequest: UpdateWorkflowRequestInput
}

input UpdateWorkspaceInput {
    
    updateWorkspaceRequest: UpdateWorkspaceRequestInput
}

type Mutation {
  # Create a new account
  # Creates a new user account in the workspace service
  # @param CreateAccountRequest createAccountRequest 
  # @return [CreateAccountResponse]
  CreateAccount(input: CreateAccountInput!): CreateAccountResponse
  # Create a new organization
  # Creates a new organization within a tenant
  # @param CreateOrganizationRequest createOrganizationRequest 
  # @return [CreateOrganizationResponse]
  CreateOrganization(input: CreateOrganizationInput!): CreateOrganizationResponse
  # Create a new job scraping task
  # This endpoint creates a new Google Maps scraping job
  # @param CreateScrapingJobRequest createScrapingJobRequest 
  # @return [CreateScrapingJobResponse]
  CreateScrapingJob(input: CreateScrapingJobInput!): CreateScrapingJobResponse
  # Create a new tenant
  # Creates a new tenant in the system
  # @param String! organizationId 
  # @param CreateTenantBody createTenantBody 
  # @return [CreateTenantResponse]
  CreateTenant(input: CreateTenantInput!): CreateTenantResponse
  # Create a new workspace
  # Creates a new workspace for a given account
  # @param CreateWorkspaceRequest createWorkspaceRequest 
  # @return [CreateWorkspaceResponse]
  CreateWorkspace(input: CreateWorkspaceInput!): CreateWorkspaceResponse
  # Delete account
  # Permanently deletes an account and associated resources
  # @param String! Id_ 
  # @param String! organizationId 
  # @param String! tenantId 
  # @return [DeleteAccountResponse]
  DeleteAccount(input: DeleteAccountInput!): DeleteAccountResponse
  # Delete an organization
  # Permanently deletes an organization and all associated resources
  # @param String! Id_ 
  # @return [DeleteOrganizationResponse]
  DeleteOrganization(input: DeleteOrganizationInput!): DeleteOrganizationResponse
  # Delete a specific job
  # This endpoint deletes a specific Google Maps scraping job
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [DeleteScrapingJobResponse]
  DeleteScrapingJob(input: DeleteScrapingJobInput!): DeleteScrapingJobResponse
  # Delete a tenant
  # Permanently deletes a tenant and all associated resources
  # @param String! organizationId 
  # @param String! tenantId 
  # @return [DeleteTenantResponse]
  DeleteTenant(input: DeleteTenantInput!): DeleteTenantResponse
  # Delete a workspace
  # Deletes a specific workspace
  # @param String! Id_ 
  # @return [DeleteWorkspaceResponse]
  DeleteWorkspace(input: DeleteWorkspaceInput!): DeleteWorkspaceResponse
  # Create a new workflow
  # This endpoint creates a new workflow configuration for a specific workspace  Required parameters: - workspace_id: Parent workspace ID - name: Human-readable workflow name - description: Optional workflow description - parameters: Job parameters for the workflow  Example: &#x60;&#x60;&#x60;json
  # @param String! workspaceId 
  # @param CreateWorkflowBody createWorkflowBody 
  # @return [CreateWorkflowResponse]
  LeadScraperServiceCreateWorkflow(input: LeadScraperServiceCreateWorkflowInput!): CreateWorkflowResponse
  # Pause workflow execution
  # Pauses the execution of a specific workflow
  # @param String! workspaceId 
  # @param String! Id_ 
  # @param PauseWorkflowBody pauseWorkflowBody 
  # @return [PauseWorkflowResponse]
  PauseWorkflow(input: PauseWorkflowInput!): PauseWorkflowResponse
  # Trigger workflow execution
  # Triggers the execution of a specific workflow
  # @param String! workspaceId 
  # @param String! Id_ 
  # @param TriggerWorkflowBody triggerWorkflowBody 
  # @return [TriggerWorkflowResponse]
  TriggerWorkflow(input: TriggerWorkflowInput!): TriggerWorkflowResponse
  # Update account details
  # Updates specified fields of an existing account
  # @param UpdateAccountRequest updateAccountRequest 
  # @return [UpdateAccountResponse]
  UpdateAccount(input: UpdateAccountInput!): UpdateAccountResponse
  # Update account settings
  # Updates the settings for a given account
  # @param UpdateAccountSettingsRequest updateAccountSettingsRequest 
  # @return [UpdateAccountSettingsResponse]
  UpdateAccountSettings(input: UpdateAccountSettingsInput!): UpdateAccountSettingsResponse
  # Update organization details
  # Updates the configuration of a specific organization
  # @param UpdateOrganizationRequest updateOrganizationRequest 
  # @return [UpdateOrganizationResponse]
  UpdateOrganization(input: UpdateOrganizationInput!): UpdateOrganizationResponse
  # Update tenant details
  # Updates the configuration of a specific tenant
  # @param UpdateTenantRequest updateTenantRequest 
  # @return [UpdateTenantResponse]
  UpdateTenant(input: UpdateTenantInput!): UpdateTenantResponse
  # Update workflow details
  # Updates the details of a specific workflow
  # @param UpdateWorkflowRequest updateWorkflowRequest 
  # @return [ScrapingWorkflow]
  UpdateWorkflow(input: UpdateWorkflowInput!): ScrapingWorkflow
  # Update workspace details
  # Updates the details of a specific workspace
  # @param UpdateWorkspaceRequest updateWorkspaceRequest 
  # @return [UpdateWorkspaceResponse]
  UpdateWorkspace(input: UpdateWorkspaceInput!): UpdateWorkspaceResponse
}

type Query {
  # Download job results as CSV
  # This endpoint downloads the results of a Google Maps scraping job as CSV
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [DownloadScrapingResultsResponse]
  DownloadScrapingResults(jobId: String!, userId: String!, orgId: String!, tenantId: String!): DownloadScrapingResultsResponse
  # Get account details
  # Retrieves details of a specific account
  # @param String! Id_ 
  # @param String! organizationId 
  # @param String! tenantId 
  # @return [GetAccountResponse]
  GetAccount(Id_: String!, organizationId: String!, tenantId: String!): GetAccountResponse
  # Get account usage
  # Retrieves usage details for a given account
  # @param String! Id_ 
  # @return [GetAccountUsageResponse]
  GetAccountUsage(Id_: String!): GetAccountUsageResponse
  # Get organization details
  # Retrieves details of a specific organization
  # @param String! Id_ 
  # @return [GetOrganizationResponse]
  GetOrganization(Id_: String!): GetOrganizationResponse
  # Get a specific job
  # This endpoint retrieves a specific Google Maps scraping job
  # @param String! jobId 
  # @param String! userId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [GetScrapingJobResponse]
  GetScrapingJob(jobId: String!, userId: String!, orgId: String!, tenantId: String!): GetScrapingJobResponse
  # Get tenant details
  # Retrieves details of a specific tenant
  # @param String! organizationId 
  # @param String! tenantId 
  # @return [GetTenantResponse]
  GetTenant(organizationId: String!, tenantId: String!): GetTenantResponse
  # Get workflow details
  # Retrieves details of a specific workflow
  # @param String! workspaceId 
  # @param String! Id_ 
  # @return [ScrapingWorkflow]
  GetWorkflow(workspaceId: String!, Id_: String!): ScrapingWorkflow
  # Get workspace details
  # Retrieves details of a specific workspace
  # @param String! Id_ 
  # @return [Workspace]
  GetWorkspace(Id_: String!): Workspace
  # Get workspace analytics
  # Retrieves analytics data for a specific workspace
  # @param String! workspaceId 
  # @param String! startTime 
  # @param String! endTime 
  # @return [GetWorkspaceAnalyticsResponse]
  GetWorkspaceAnalytics(workspaceId: String!, startTime: String!, endTime: String!): GetWorkspaceAnalyticsResponse
  # List all accounts
  # Retrieves a list of accounts
  # @param Int! pageSize 
  # @param Int! pageNumber 
  # @param String! filter 
  # @param String! organizationId 
  # @param String! tenantId 
  # @return [ListAccountsResponse]
  ListAccounts(pageSize: Int!, pageNumber: Int!, filter: String!, organizationId: String!, tenantId: String!): ListAccountsResponse
  # List all organizations
  # Retrieves a list of all organizations in a tenant
  # @param Int! pageSize 
  # @param Int! pageNumber 
  # @return [ListOrganizationsResponse]
  ListOrganizations(pageSize: Int!, pageNumber: Int!): ListOrganizationsResponse
  # Get all jobs
  # This endpoint retrieves all Google Maps scraping jobs
  # @param String! authPlatformUserId 
  # @param String! orgId 
  # @param String! tenantId 
  # @return [ListScrapingJobsResponse]
  ListScrapingJobs(authPlatformUserId: String!, orgId: String!, tenantId: String!): ListScrapingJobsResponse
  # List all tenants
  # Retrieves a list of all tenants in the system
  # @param String! organizationId 
  # @param Int! pageSize 
  # @param Int! pageNumber 
  # @return [ListTenantsResponse]
  ListTenants(organizationId: String!, pageSize: Int!, pageNumber: Int!): ListTenantsResponse
  # List workflows
  # Retrieves a list of workflows for a given workspace
  # @param String! workspaceId 
  # @param Int! pageSize 
  # @param Int! pageNumber 
  # @param String! filter 
  # @return [ListWorkflowsResponse]
  ListWorkflows(workspaceId: String!, pageSize: Int!, pageNumber: Int!, filter: String!): ListWorkflowsResponse
  # List workspaces
  # Retrieves a list of workspaces for a given account
  # @param String! accountId 
  # @param Int! pageSize 
  # @param Int! pageNumber 
  # @return [ListWorkspacesResponse]
  ListWorkspaces(accountId: String!, pageSize: Int!, pageNumber: Int!): ListWorkspacesResponse
}

