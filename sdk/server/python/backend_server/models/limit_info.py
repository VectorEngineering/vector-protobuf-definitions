from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server import util


class LimitInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current=None, limit=None, reset_time=None, window_size=None):  # noqa: E501
        """LimitInfo - a model defined in OpenAPI

        :param current: The current of this LimitInfo.  # noqa: E501
        :type current: int
        :param limit: The limit of this LimitInfo.  # noqa: E501
        :type limit: int
        :param reset_time: The reset_time of this LimitInfo.  # noqa: E501
        :type reset_time: datetime
        :param window_size: The window_size of this LimitInfo.  # noqa: E501
        :type window_size: str
        """
        self.openapi_types = {
            'current': int,
            'limit': int,
            'reset_time': datetime,
            'window_size': str
        }

        self.attribute_map = {
            'current': 'current',
            'limit': 'limit',
            'reset_time': 'resetTime',
            'window_size': 'windowSize'
        }

        self._current = current
        self._limit = limit
        self._reset_time = reset_time
        self._window_size = window_size

    @classmethod
    def from_dict(cls, dikt) -> 'LimitInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LimitInfo of this LimitInfo.  # noqa: E501
        :rtype: LimitInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current(self) -> int:
        """Gets the current of this LimitInfo.


        :return: The current of this LimitInfo.
        :rtype: int
        """
        return self._current

    @current.setter
    def current(self, current: int):
        """Sets the current of this LimitInfo.


        :param current: The current of this LimitInfo.
        :type current: int
        """

        self._current = current

    @property
    def limit(self) -> int:
        """Gets the limit of this LimitInfo.


        :return: The limit of this LimitInfo.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this LimitInfo.


        :param limit: The limit of this LimitInfo.
        :type limit: int
        """

        self._limit = limit

    @property
    def reset_time(self) -> datetime:
        """Gets the reset_time of this LimitInfo.


        :return: The reset_time of this LimitInfo.
        :rtype: datetime
        """
        return self._reset_time

    @reset_time.setter
    def reset_time(self, reset_time: datetime):
        """Sets the reset_time of this LimitInfo.


        :param reset_time: The reset_time of this LimitInfo.
        :type reset_time: datetime
        """

        self._reset_time = reset_time

    @property
    def window_size(self) -> str:
        """Gets the window_size of this LimitInfo.


        :return: The window_size of this LimitInfo.
        :rtype: str
        """
        return self._window_size

    @window_size.setter
    def window_size(self, window_size: str):
        """Sets the window_size of this LimitInfo.


        :param window_size: The window_size of this LimitInfo.
        :type window_size: str
        """

        self._window_size = window_size
