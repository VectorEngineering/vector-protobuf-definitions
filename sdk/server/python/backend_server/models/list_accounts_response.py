from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server.models.account import Account
from backend_server import util

from backend_server.models.account import Account  # noqa: E501

class ListAccountsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts=None, total=None):  # noqa: E501
        """ListAccountsResponse - a model defined in OpenAPI

        :param accounts: The accounts of this ListAccountsResponse.  # noqa: E501
        :type accounts: List[Account]
        :param total: The total of this ListAccountsResponse.  # noqa: E501
        :type total: int
        """
        self.openapi_types = {
            'accounts': List[Account],
            'total': int
        }

        self.attribute_map = {
            'accounts': 'accounts',
            'total': 'total'
        }

        self._accounts = accounts
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'ListAccountsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListAccountsResponse of this ListAccountsResponse.  # noqa: E501
        :rtype: ListAccountsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self) -> List[Account]:
        """Gets the accounts of this ListAccountsResponse.


        :return: The accounts of this ListAccountsResponse.
        :rtype: List[Account]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts: List[Account]):
        """Sets the accounts of this ListAccountsResponse.


        :param accounts: The accounts of this ListAccountsResponse.
        :type accounts: List[Account]
        """

        self._accounts = accounts

    @property
    def total(self) -> int:
        """Gets the total of this ListAccountsResponse.


        :return: The total of this ListAccountsResponse.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total: int):
        """Sets the total of this ListAccountsResponse.


        :param total: The total of this ListAccountsResponse.
        :type total: int
        """

        self._total = total
