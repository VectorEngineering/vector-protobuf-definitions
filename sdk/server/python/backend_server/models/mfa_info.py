from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server import util


class MFAInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mfa_required=None, allowed_methods=None, failed_reason=None):  # noqa: E501
        """MFAInfo - a model defined in OpenAPI

        :param mfa_required: The mfa_required of this MFAInfo.  # noqa: E501
        :type mfa_required: bool
        :param allowed_methods: The allowed_methods of this MFAInfo.  # noqa: E501
        :type allowed_methods: List[str]
        :param failed_reason: The failed_reason of this MFAInfo.  # noqa: E501
        :type failed_reason: str
        """
        self.openapi_types = {
            'mfa_required': bool,
            'allowed_methods': List[str],
            'failed_reason': str
        }

        self.attribute_map = {
            'mfa_required': 'mfaRequired',
            'allowed_methods': 'allowedMethods',
            'failed_reason': 'failedReason'
        }

        self._mfa_required = mfa_required
        self._allowed_methods = allowed_methods
        self._failed_reason = failed_reason

    @classmethod
    def from_dict(cls, dikt) -> 'MFAInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MFAInfo of this MFAInfo.  # noqa: E501
        :rtype: MFAInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mfa_required(self) -> bool:
        """Gets the mfa_required of this MFAInfo.


        :return: The mfa_required of this MFAInfo.
        :rtype: bool
        """
        return self._mfa_required

    @mfa_required.setter
    def mfa_required(self, mfa_required: bool):
        """Sets the mfa_required of this MFAInfo.


        :param mfa_required: The mfa_required of this MFAInfo.
        :type mfa_required: bool
        """

        self._mfa_required = mfa_required

    @property
    def allowed_methods(self) -> List[str]:
        """Gets the allowed_methods of this MFAInfo.


        :return: The allowed_methods of this MFAInfo.
        :rtype: List[str]
        """
        return self._allowed_methods

    @allowed_methods.setter
    def allowed_methods(self, allowed_methods: List[str]):
        """Sets the allowed_methods of this MFAInfo.


        :param allowed_methods: The allowed_methods of this MFAInfo.
        :type allowed_methods: List[str]
        """

        self._allowed_methods = allowed_methods

    @property
    def failed_reason(self) -> str:
        """Gets the failed_reason of this MFAInfo.


        :return: The failed_reason of this MFAInfo.
        :rtype: str
        """
        return self._failed_reason

    @failed_reason.setter
    def failed_reason(self, failed_reason: str):
        """Sets the failed_reason of this MFAInfo.


        :param failed_reason: The failed_reason of this MFAInfo.
        :type failed_reason: str
        """

        self._failed_reason = failed_reason
