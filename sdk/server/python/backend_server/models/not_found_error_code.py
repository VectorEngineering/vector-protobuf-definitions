from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server import util


class NotFoundErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NO_NOT_FOUND_ERROR = 'NO_NOT_FOUND_ERROR'
    UNDEFINED_ENDPOINT = 'UNDEFINED_ENDPOINT'
    UNIMPLEMENTED = 'UNIMPLEMENTED'
    STORE_ID_NOT_FOUND = 'STORE_ID_NOT_FOUND'
    USER_NOT_FOUND = 'USER_NOT_FOUND'
    RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND'
    TENANT_NOT_FOUND = 'TENANT_NOT_FOUND'
    def __init__(self):  # noqa: E501
        """NotFoundErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'NotFoundErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NotFoundErrorCode of this NotFoundErrorCode.  # noqa: E501
        :rtype: NotFoundErrorCode
        """
        return util.deserialize_model(dikt, cls)
