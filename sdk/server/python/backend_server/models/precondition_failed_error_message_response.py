from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server.models.error_response import ErrorResponse
from backend_server import util

from backend_server.models.error_response import ErrorResponse  # noqa: E501

class PreconditionFailedErrorMessageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, message=None, failed_conditions=None, error_response=None):  # noqa: E501
        """PreconditionFailedErrorMessageResponse - a model defined in OpenAPI

        :param code: The code of this PreconditionFailedErrorMessageResponse.  # noqa: E501
        :type code: int
        :param message: The message of this PreconditionFailedErrorMessageResponse.  # noqa: E501
        :type message: str
        :param failed_conditions: The failed_conditions of this PreconditionFailedErrorMessageResponse.  # noqa: E501
        :type failed_conditions: List[str]
        :param error_response: The error_response of this PreconditionFailedErrorMessageResponse.  # noqa: E501
        :type error_response: ErrorResponse
        """
        self.openapi_types = {
            'code': int,
            'message': str,
            'failed_conditions': List[str],
            'error_response': ErrorResponse
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'failed_conditions': 'failedConditions',
            'error_response': 'errorResponse'
        }

        self._code = code
        self._message = message
        self._failed_conditions = failed_conditions
        self._error_response = error_response

    @classmethod
    def from_dict(cls, dikt) -> 'PreconditionFailedErrorMessageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PreconditionFailedErrorMessageResponse of this PreconditionFailedErrorMessageResponse.  # noqa: E501
        :rtype: PreconditionFailedErrorMessageResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this PreconditionFailedErrorMessageResponse.


        :return: The code of this PreconditionFailedErrorMessageResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this PreconditionFailedErrorMessageResponse.


        :param code: The code of this PreconditionFailedErrorMessageResponse.
        :type code: int
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this PreconditionFailedErrorMessageResponse.


        :return: The message of this PreconditionFailedErrorMessageResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this PreconditionFailedErrorMessageResponse.


        :param message: The message of this PreconditionFailedErrorMessageResponse.
        :type message: str
        """

        self._message = message

    @property
    def failed_conditions(self) -> List[str]:
        """Gets the failed_conditions of this PreconditionFailedErrorMessageResponse.


        :return: The failed_conditions of this PreconditionFailedErrorMessageResponse.
        :rtype: List[str]
        """
        return self._failed_conditions

    @failed_conditions.setter
    def failed_conditions(self, failed_conditions: List[str]):
        """Sets the failed_conditions of this PreconditionFailedErrorMessageResponse.


        :param failed_conditions: The failed_conditions of this PreconditionFailedErrorMessageResponse.
        :type failed_conditions: List[str]
        """

        self._failed_conditions = failed_conditions

    @property
    def error_response(self) -> ErrorResponse:
        """Gets the error_response of this PreconditionFailedErrorMessageResponse.


        :return: The error_response of this PreconditionFailedErrorMessageResponse.
        :rtype: ErrorResponse
        """
        return self._error_response

    @error_response.setter
    def error_response(self, error_response: ErrorResponse):
        """Sets the error_response of this PreconditionFailedErrorMessageResponse.


        :param error_response: The error_response of this PreconditionFailedErrorMessageResponse.
        :type error_response: ErrorResponse
        """

        self._error_response = error_response
