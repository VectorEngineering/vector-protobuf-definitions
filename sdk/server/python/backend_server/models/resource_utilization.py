from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server import util


class ResourceUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpu_usage=None, memory_usage=None, active_connections=None, quotas=None):  # noqa: E501
        """ResourceUtilization - a model defined in OpenAPI

        :param cpu_usage: The cpu_usage of this ResourceUtilization.  # noqa: E501
        :type cpu_usage: float
        :param memory_usage: The memory_usage of this ResourceUtilization.  # noqa: E501
        :type memory_usage: float
        :param active_connections: The active_connections of this ResourceUtilization.  # noqa: E501
        :type active_connections: int
        :param quotas: The quotas of this ResourceUtilization.  # noqa: E501
        :type quotas: Dict[str, float]
        """
        self.openapi_types = {
            'cpu_usage': float,
            'memory_usage': float,
            'active_connections': int,
            'quotas': Dict[str, float]
        }

        self.attribute_map = {
            'cpu_usage': 'cpuUsage',
            'memory_usage': 'memoryUsage',
            'active_connections': 'activeConnections',
            'quotas': 'quotas'
        }

        self._cpu_usage = cpu_usage
        self._memory_usage = memory_usage
        self._active_connections = active_connections
        self._quotas = quotas

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourceUtilization of this ResourceUtilization.  # noqa: E501
        :rtype: ResourceUtilization
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpu_usage(self) -> float:
        """Gets the cpu_usage of this ResourceUtilization.


        :return: The cpu_usage of this ResourceUtilization.
        :rtype: float
        """
        return self._cpu_usage

    @cpu_usage.setter
    def cpu_usage(self, cpu_usage: float):
        """Sets the cpu_usage of this ResourceUtilization.


        :param cpu_usage: The cpu_usage of this ResourceUtilization.
        :type cpu_usage: float
        """

        self._cpu_usage = cpu_usage

    @property
    def memory_usage(self) -> float:
        """Gets the memory_usage of this ResourceUtilization.


        :return: The memory_usage of this ResourceUtilization.
        :rtype: float
        """
        return self._memory_usage

    @memory_usage.setter
    def memory_usage(self, memory_usage: float):
        """Sets the memory_usage of this ResourceUtilization.


        :param memory_usage: The memory_usage of this ResourceUtilization.
        :type memory_usage: float
        """

        self._memory_usage = memory_usage

    @property
    def active_connections(self) -> int:
        """Gets the active_connections of this ResourceUtilization.


        :return: The active_connections of this ResourceUtilization.
        :rtype: int
        """
        return self._active_connections

    @active_connections.setter
    def active_connections(self, active_connections: int):
        """Sets the active_connections of this ResourceUtilization.


        :param active_connections: The active_connections of this ResourceUtilization.
        :type active_connections: int
        """

        self._active_connections = active_connections

    @property
    def quotas(self) -> Dict[str, float]:
        """Gets the quotas of this ResourceUtilization.


        :return: The quotas of this ResourceUtilization.
        :rtype: Dict[str, float]
        """
        return self._quotas

    @quotas.setter
    def quotas(self, quotas: Dict[str, float]):
        """Sets the quotas of this ResourceUtilization.


        :param quotas: The quotas of this ResourceUtilization.
        :type quotas: Dict[str, float]
        """

        self._quotas = quotas
