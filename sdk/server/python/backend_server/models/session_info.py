from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model import Model
from backend_server import util


class SessionInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, session_id=None, last_active=None, device_id=None, ip_address=None):  # noqa: E501
        """SessionInfo - a model defined in OpenAPI

        :param session_id: The session_id of this SessionInfo.  # noqa: E501
        :type session_id: str
        :param last_active: The last_active of this SessionInfo.  # noqa: E501
        :type last_active: datetime
        :param device_id: The device_id of this SessionInfo.  # noqa: E501
        :type device_id: str
        :param ip_address: The ip_address of this SessionInfo.  # noqa: E501
        :type ip_address: str
        """
        self.openapi_types = {
            'session_id': str,
            'last_active': datetime,
            'device_id': str,
            'ip_address': str
        }

        self.attribute_map = {
            'session_id': 'sessionId',
            'last_active': 'lastActive',
            'device_id': 'deviceId',
            'ip_address': 'ipAddress'
        }

        self._session_id = session_id
        self._last_active = last_active
        self._device_id = device_id
        self._ip_address = ip_address

    @classmethod
    def from_dict(cls, dikt) -> 'SessionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SessionInfo of this SessionInfo.  # noqa: E501
        :rtype: SessionInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self) -> str:
        """Gets the session_id of this SessionInfo.


        :return: The session_id of this SessionInfo.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id: str):
        """Sets the session_id of this SessionInfo.


        :param session_id: The session_id of this SessionInfo.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def last_active(self) -> datetime:
        """Gets the last_active of this SessionInfo.


        :return: The last_active of this SessionInfo.
        :rtype: datetime
        """
        return self._last_active

    @last_active.setter
    def last_active(self, last_active: datetime):
        """Sets the last_active of this SessionInfo.


        :param last_active: The last_active of this SessionInfo.
        :type last_active: datetime
        """

        self._last_active = last_active

    @property
    def device_id(self) -> str:
        """Gets the device_id of this SessionInfo.


        :return: The device_id of this SessionInfo.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id: str):
        """Sets the device_id of this SessionInfo.


        :param device_id: The device_id of this SessionInfo.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def ip_address(self) -> str:
        """Gets the ip_address of this SessionInfo.


        :return: The ip_address of this SessionInfo.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address: str):
        """Sets the ip_address of this SessionInfo.


        :param ip_address: The ip_address of this SessionInfo.
        :type ip_address: str
        """

        self._ip_address = ip_address
