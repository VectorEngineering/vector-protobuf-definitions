from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class AppInstallation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, app_id=None, workspace_id=None, version_installed=None, configuration=None, installation_status=None, installed_at=None, last_used=None):  # noqa: E501
        """AppInstallation - a model defined in OpenAPI

        :param id: The id of this AppInstallation.  # noqa: E501
        :type id: str
        :param app_id: The app_id of this AppInstallation.  # noqa: E501
        :type app_id: str
        :param workspace_id: The workspace_id of this AppInstallation.  # noqa: E501
        :type workspace_id: str
        :param version_installed: The version_installed of this AppInstallation.  # noqa: E501
        :type version_installed: str
        :param configuration: The configuration of this AppInstallation.  # noqa: E501
        :type configuration: Dict[str, str]
        :param installation_status: The installation_status of this AppInstallation.  # noqa: E501
        :type installation_status: str
        :param installed_at: The installed_at of this AppInstallation.  # noqa: E501
        :type installed_at: datetime
        :param last_used: The last_used of this AppInstallation.  # noqa: E501
        :type last_used: datetime
        """
        self.openapi_types = {
            'id': str,
            'app_id': str,
            'workspace_id': str,
            'version_installed': str,
            'configuration': Dict[str, str],
            'installation_status': str,
            'installed_at': datetime,
            'last_used': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'app_id': 'appId',
            'workspace_id': 'workspaceId',
            'version_installed': 'versionInstalled',
            'configuration': 'configuration',
            'installation_status': 'installationStatus',
            'installed_at': 'installedAt',
            'last_used': 'lastUsed'
        }

        self._id = id
        self._app_id = app_id
        self._workspace_id = workspace_id
        self._version_installed = version_installed
        self._configuration = configuration
        self._installation_status = installation_status
        self._installed_at = installed_at
        self._last_used = last_used

    @classmethod
    def from_dict(cls, dikt) -> 'AppInstallation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppInstallation of this AppInstallation.  # noqa: E501
        :rtype: AppInstallation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this AppInstallation.


        :return: The id of this AppInstallation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AppInstallation.


        :param id: The id of this AppInstallation.
        :type id: str
        """

        self._id = id

    @property
    def app_id(self) -> str:
        """Gets the app_id of this AppInstallation.


        :return: The app_id of this AppInstallation.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id: str):
        """Sets the app_id of this AppInstallation.


        :param app_id: The app_id of this AppInstallation.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this AppInstallation.


        :return: The workspace_id of this AppInstallation.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this AppInstallation.


        :param workspace_id: The workspace_id of this AppInstallation.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def version_installed(self) -> str:
        """Gets the version_installed of this AppInstallation.


        :return: The version_installed of this AppInstallation.
        :rtype: str
        """
        return self._version_installed

    @version_installed.setter
    def version_installed(self, version_installed: str):
        """Sets the version_installed of this AppInstallation.


        :param version_installed: The version_installed of this AppInstallation.
        :type version_installed: str
        """

        self._version_installed = version_installed

    @property
    def configuration(self) -> Dict[str, str]:
        """Gets the configuration of this AppInstallation.


        :return: The configuration of this AppInstallation.
        :rtype: Dict[str, str]
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration: Dict[str, str]):
        """Sets the configuration of this AppInstallation.


        :param configuration: The configuration of this AppInstallation.
        :type configuration: Dict[str, str]
        """

        self._configuration = configuration

    @property
    def installation_status(self) -> str:
        """Gets the installation_status of this AppInstallation.


        :return: The installation_status of this AppInstallation.
        :rtype: str
        """
        return self._installation_status

    @installation_status.setter
    def installation_status(self, installation_status: str):
        """Sets the installation_status of this AppInstallation.


        :param installation_status: The installation_status of this AppInstallation.
        :type installation_status: str
        """

        self._installation_status = installation_status

    @property
    def installed_at(self) -> datetime:
        """Gets the installed_at of this AppInstallation.


        :return: The installed_at of this AppInstallation.
        :rtype: datetime
        """
        return self._installed_at

    @installed_at.setter
    def installed_at(self, installed_at: datetime):
        """Sets the installed_at of this AppInstallation.


        :param installed_at: The installed_at of this AppInstallation.
        :type installed_at: datetime
        """

        self._installed_at = installed_at

    @property
    def last_used(self) -> datetime:
        """Gets the last_used of this AppInstallation.


        :return: The last_used of this AppInstallation.
        :rtype: datetime
        """
        return self._last_used

    @last_used.setter
    def last_used(self, last_used: datetime):
        """Sets the last_used of this AppInstallation.


        :param last_used: The last_used of this AppInstallation.
        :type last_used: datetime
        """

        self._last_used = last_used
