from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class AppVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, app_id=None, version_number=None, changelog=None, requirements=None, is_public=None, release_date=None):  # noqa: E501
        """AppVersion - a model defined in OpenAPI

        :param id: The id of this AppVersion.  # noqa: E501
        :type id: str
        :param app_id: The app_id of this AppVersion.  # noqa: E501
        :type app_id: str
        :param version_number: The version_number of this AppVersion.  # noqa: E501
        :type version_number: str
        :param changelog: The changelog of this AppVersion.  # noqa: E501
        :type changelog: str
        :param requirements: The requirements of this AppVersion.  # noqa: E501
        :type requirements: Dict[str, str]
        :param is_public: The is_public of this AppVersion.  # noqa: E501
        :type is_public: bool
        :param release_date: The release_date of this AppVersion.  # noqa: E501
        :type release_date: datetime
        """
        self.openapi_types = {
            'id': str,
            'app_id': str,
            'version_number': str,
            'changelog': str,
            'requirements': Dict[str, str],
            'is_public': bool,
            'release_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'app_id': 'appId',
            'version_number': 'versionNumber',
            'changelog': 'changelog',
            'requirements': 'requirements',
            'is_public': 'isPublic',
            'release_date': 'releaseDate'
        }

        self._id = id
        self._app_id = app_id
        self._version_number = version_number
        self._changelog = changelog
        self._requirements = requirements
        self._is_public = is_public
        self._release_date = release_date

    @classmethod
    def from_dict(cls, dikt) -> 'AppVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppVersion of this AppVersion.  # noqa: E501
        :rtype: AppVersion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this AppVersion.


        :return: The id of this AppVersion.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AppVersion.


        :param id: The id of this AppVersion.
        :type id: str
        """

        self._id = id

    @property
    def app_id(self) -> str:
        """Gets the app_id of this AppVersion.


        :return: The app_id of this AppVersion.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id: str):
        """Sets the app_id of this AppVersion.


        :param app_id: The app_id of this AppVersion.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def version_number(self) -> str:
        """Gets the version_number of this AppVersion.


        :return: The version_number of this AppVersion.
        :rtype: str
        """
        return self._version_number

    @version_number.setter
    def version_number(self, version_number: str):
        """Sets the version_number of this AppVersion.


        :param version_number: The version_number of this AppVersion.
        :type version_number: str
        """

        self._version_number = version_number

    @property
    def changelog(self) -> str:
        """Gets the changelog of this AppVersion.


        :return: The changelog of this AppVersion.
        :rtype: str
        """
        return self._changelog

    @changelog.setter
    def changelog(self, changelog: str):
        """Sets the changelog of this AppVersion.


        :param changelog: The changelog of this AppVersion.
        :type changelog: str
        """

        self._changelog = changelog

    @property
    def requirements(self) -> Dict[str, str]:
        """Gets the requirements of this AppVersion.


        :return: The requirements of this AppVersion.
        :rtype: Dict[str, str]
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements: Dict[str, str]):
        """Sets the requirements of this AppVersion.


        :param requirements: The requirements of this AppVersion.
        :type requirements: Dict[str, str]
        """

        self._requirements = requirements

    @property
    def is_public(self) -> bool:
        """Gets the is_public of this AppVersion.


        :return: The is_public of this AppVersion.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public: bool):
        """Sets the is_public of this AppVersion.


        :param is_public: The is_public of this AppVersion.
        :type is_public: bool
        """

        self._is_public = is_public

    @property
    def release_date(self) -> datetime:
        """Gets the release_date of this AppVersion.


        :return: The release_date of this AppVersion.
        :rtype: datetime
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date: datetime):
        """Sets the release_date of this AppVersion.


        :param release_date: The release_date of this AppVersion.
        :type release_date: datetime
        """

        self._release_date = release_date
