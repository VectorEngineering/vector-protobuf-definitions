from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class AppWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, app_id=None, url=None, subscribed_events=None, secret_key=None, retry_count=None, timeout_seconds=None, is_active=None, headers=None, last_triggered=None, created_at=None):  # noqa: E501
        """AppWebhook - a model defined in OpenAPI

        :param id: The id of this AppWebhook.  # noqa: E501
        :type id: str
        :param app_id: The app_id of this AppWebhook.  # noqa: E501
        :type app_id: str
        :param url: The url of this AppWebhook.  # noqa: E501
        :type url: str
        :param subscribed_events: The subscribed_events of this AppWebhook.  # noqa: E501
        :type subscribed_events: List[str]
        :param secret_key: The secret_key of this AppWebhook.  # noqa: E501
        :type secret_key: str
        :param retry_count: The retry_count of this AppWebhook.  # noqa: E501
        :type retry_count: int
        :param timeout_seconds: The timeout_seconds of this AppWebhook.  # noqa: E501
        :type timeout_seconds: int
        :param is_active: The is_active of this AppWebhook.  # noqa: E501
        :type is_active: bool
        :param headers: The headers of this AppWebhook.  # noqa: E501
        :type headers: Dict[str, str]
        :param last_triggered: The last_triggered of this AppWebhook.  # noqa: E501
        :type last_triggered: datetime
        :param created_at: The created_at of this AppWebhook.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'app_id': str,
            'url': str,
            'subscribed_events': List[str],
            'secret_key': str,
            'retry_count': int,
            'timeout_seconds': int,
            'is_active': bool,
            'headers': Dict[str, str],
            'last_triggered': datetime,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'app_id': 'appId',
            'url': 'url',
            'subscribed_events': 'subscribedEvents',
            'secret_key': 'secretKey',
            'retry_count': 'retryCount',
            'timeout_seconds': 'timeoutSeconds',
            'is_active': 'isActive',
            'headers': 'headers',
            'last_triggered': 'lastTriggered',
            'created_at': 'createdAt'
        }

        self._id = id
        self._app_id = app_id
        self._url = url
        self._subscribed_events = subscribed_events
        self._secret_key = secret_key
        self._retry_count = retry_count
        self._timeout_seconds = timeout_seconds
        self._is_active = is_active
        self._headers = headers
        self._last_triggered = last_triggered
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'AppWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppWebhook of this AppWebhook.  # noqa: E501
        :rtype: AppWebhook
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this AppWebhook.


        :return: The id of this AppWebhook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AppWebhook.


        :param id: The id of this AppWebhook.
        :type id: str
        """

        self._id = id

    @property
    def app_id(self) -> str:
        """Gets the app_id of this AppWebhook.


        :return: The app_id of this AppWebhook.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id: str):
        """Sets the app_id of this AppWebhook.


        :param app_id: The app_id of this AppWebhook.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def url(self) -> str:
        """Gets the url of this AppWebhook.


        :return: The url of this AppWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this AppWebhook.


        :param url: The url of this AppWebhook.
        :type url: str
        """

        self._url = url

    @property
    def subscribed_events(self) -> List[str]:
        """Gets the subscribed_events of this AppWebhook.


        :return: The subscribed_events of this AppWebhook.
        :rtype: List[str]
        """
        return self._subscribed_events

    @subscribed_events.setter
    def subscribed_events(self, subscribed_events: List[str]):
        """Sets the subscribed_events of this AppWebhook.


        :param subscribed_events: The subscribed_events of this AppWebhook.
        :type subscribed_events: List[str]
        """

        self._subscribed_events = subscribed_events

    @property
    def secret_key(self) -> str:
        """Gets the secret_key of this AppWebhook.


        :return: The secret_key of this AppWebhook.
        :rtype: str
        """
        return self._secret_key

    @secret_key.setter
    def secret_key(self, secret_key: str):
        """Sets the secret_key of this AppWebhook.


        :param secret_key: The secret_key of this AppWebhook.
        :type secret_key: str
        """

        self._secret_key = secret_key

    @property
    def retry_count(self) -> int:
        """Gets the retry_count of this AppWebhook.


        :return: The retry_count of this AppWebhook.
        :rtype: int
        """
        return self._retry_count

    @retry_count.setter
    def retry_count(self, retry_count: int):
        """Sets the retry_count of this AppWebhook.


        :param retry_count: The retry_count of this AppWebhook.
        :type retry_count: int
        """

        self._retry_count = retry_count

    @property
    def timeout_seconds(self) -> int:
        """Gets the timeout_seconds of this AppWebhook.


        :return: The timeout_seconds of this AppWebhook.
        :rtype: int
        """
        return self._timeout_seconds

    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds: int):
        """Sets the timeout_seconds of this AppWebhook.


        :param timeout_seconds: The timeout_seconds of this AppWebhook.
        :type timeout_seconds: int
        """

        self._timeout_seconds = timeout_seconds

    @property
    def is_active(self) -> bool:
        """Gets the is_active of this AppWebhook.


        :return: The is_active of this AppWebhook.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active: bool):
        """Sets the is_active of this AppWebhook.


        :param is_active: The is_active of this AppWebhook.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def headers(self) -> Dict[str, str]:
        """Gets the headers of this AppWebhook.


        :return: The headers of this AppWebhook.
        :rtype: Dict[str, str]
        """
        return self._headers

    @headers.setter
    def headers(self, headers: Dict[str, str]):
        """Sets the headers of this AppWebhook.


        :param headers: The headers of this AppWebhook.
        :type headers: Dict[str, str]
        """

        self._headers = headers

    @property
    def last_triggered(self) -> datetime:
        """Gets the last_triggered of this AppWebhook.


        :return: The last_triggered of this AppWebhook.
        :rtype: datetime
        """
        return self._last_triggered

    @last_triggered.setter
    def last_triggered(self, last_triggered: datetime):
        """Sets the last_triggered of this AppWebhook.


        :param last_triggered: The last_triggered of this AppWebhook.
        :type last_triggered: datetime
        """

        self._last_triggered = last_triggered

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this AppWebhook.


        :return: The created_at of this AppWebhook.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this AppWebhook.


        :param created_at: The created_at of this AppWebhook.
        :type created_at: datetime
        """

        self._created_at = created_at
