from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.day_of_week import DayOfWeek
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.day_of_week import DayOfWeek  # noqa: E501

class BusinessHours(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, day=DayOfWeek.UNSPECIFIED, open_time=None, close_time=None, closed=None, lead_id=None):  # noqa: E501
        """BusinessHours - a model defined in OpenAPI

        :param id: The id of this BusinessHours.  # noqa: E501
        :type id: str
        :param day: The day of this BusinessHours.  # noqa: E501
        :type day: DayOfWeek
        :param open_time: The open_time of this BusinessHours.  # noqa: E501
        :type open_time: str
        :param close_time: The close_time of this BusinessHours.  # noqa: E501
        :type close_time: str
        :param closed: The closed of this BusinessHours.  # noqa: E501
        :type closed: bool
        :param lead_id: The lead_id of this BusinessHours.  # noqa: E501
        :type lead_id: str
        """
        self.openapi_types = {
            'id': str,
            'day': DayOfWeek,
            'open_time': str,
            'close_time': str,
            'closed': bool,
            'lead_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'day': 'day',
            'open_time': 'openTime',
            'close_time': 'closeTime',
            'closed': 'closed',
            'lead_id': 'leadId'
        }

        self._id = id
        self._day = day
        self._open_time = open_time
        self._close_time = close_time
        self._closed = closed
        self._lead_id = lead_id

    @classmethod
    def from_dict(cls, dikt) -> 'BusinessHours':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BusinessHours of this BusinessHours.  # noqa: E501
        :rtype: BusinessHours
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this BusinessHours.


        :return: The id of this BusinessHours.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this BusinessHours.


        :param id: The id of this BusinessHours.
        :type id: str
        """

        self._id = id

    @property
    def day(self) -> DayOfWeek:
        """Gets the day of this BusinessHours.


        :return: The day of this BusinessHours.
        :rtype: DayOfWeek
        """
        return self._day

    @day.setter
    def day(self, day: DayOfWeek):
        """Sets the day of this BusinessHours.


        :param day: The day of this BusinessHours.
        :type day: DayOfWeek
        """

        self._day = day

    @property
    def open_time(self) -> str:
        """Gets the open_time of this BusinessHours.


        :return: The open_time of this BusinessHours.
        :rtype: str
        """
        return self._open_time

    @open_time.setter
    def open_time(self, open_time: str):
        """Sets the open_time of this BusinessHours.


        :param open_time: The open_time of this BusinessHours.
        :type open_time: str
        """

        self._open_time = open_time

    @property
    def close_time(self) -> str:
        """Gets the close_time of this BusinessHours.


        :return: The close_time of this BusinessHours.
        :rtype: str
        """
        return self._close_time

    @close_time.setter
    def close_time(self, close_time: str):
        """Sets the close_time of this BusinessHours.


        :param close_time: The close_time of this BusinessHours.
        :type close_time: str
        """

        self._close_time = close_time

    @property
    def closed(self) -> bool:
        """Gets the closed of this BusinessHours.


        :return: The closed of this BusinessHours.
        :rtype: bool
        """
        return self._closed

    @closed.setter
    def closed(self, closed: bool):
        """Sets the closed of this BusinessHours.


        :param closed: The closed of this BusinessHours.
        :type closed: bool
        """

        self._closed = closed

    @property
    def lead_id(self) -> str:
        """Gets the lead_id of this BusinessHours.


        :return: The lead_id of this BusinessHours.
        :rtype: str
        """
        return self._lead_id

    @lead_id.setter
    def lead_id(self, lead_id: str):
        """Sets the lead_id of this BusinessHours.


        :param lead_id: The lead_id of this BusinessHours.
        :type lead_id: str
        """

        self._lead_id = lead_id
