from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class CommentThread(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, author_id=None, content=None, start_position=None, end_position=None, resolved=None, created_at=None, updated_at=None):  # noqa: E501
        """CommentThread - a model defined in OpenAPI

        :param id: The id of this CommentThread.  # noqa: E501
        :type id: str
        :param author_id: The author_id of this CommentThread.  # noqa: E501
        :type author_id: str
        :param content: The content of this CommentThread.  # noqa: E501
        :type content: str
        :param start_position: The start_position of this CommentThread.  # noqa: E501
        :type start_position: int
        :param end_position: The end_position of this CommentThread.  # noqa: E501
        :type end_position: int
        :param resolved: The resolved of this CommentThread.  # noqa: E501
        :type resolved: bool
        :param created_at: The created_at of this CommentThread.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this CommentThread.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'author_id': str,
            'content': str,
            'start_position': int,
            'end_position': int,
            'resolved': bool,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'author_id': 'authorId',
            'content': 'content',
            'start_position': 'startPosition',
            'end_position': 'endPosition',
            'resolved': 'resolved',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._author_id = author_id
        self._content = content
        self._start_position = start_position
        self._end_position = end_position
        self._resolved = resolved
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'CommentThread':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommentThread of this CommentThread.  # noqa: E501
        :rtype: CommentThread
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this CommentThread.


        :return: The id of this CommentThread.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CommentThread.


        :param id: The id of this CommentThread.
        :type id: str
        """

        self._id = id

    @property
    def author_id(self) -> str:
        """Gets the author_id of this CommentThread.


        :return: The author_id of this CommentThread.
        :rtype: str
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id: str):
        """Sets the author_id of this CommentThread.


        :param author_id: The author_id of this CommentThread.
        :type author_id: str
        """

        self._author_id = author_id

    @property
    def content(self) -> str:
        """Gets the content of this CommentThread.


        :return: The content of this CommentThread.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this CommentThread.


        :param content: The content of this CommentThread.
        :type content: str
        """

        self._content = content

    @property
    def start_position(self) -> int:
        """Gets the start_position of this CommentThread.


        :return: The start_position of this CommentThread.
        :rtype: int
        """
        return self._start_position

    @start_position.setter
    def start_position(self, start_position: int):
        """Sets the start_position of this CommentThread.


        :param start_position: The start_position of this CommentThread.
        :type start_position: int
        """

        self._start_position = start_position

    @property
    def end_position(self) -> int:
        """Gets the end_position of this CommentThread.


        :return: The end_position of this CommentThread.
        :rtype: int
        """
        return self._end_position

    @end_position.setter
    def end_position(self, end_position: int):
        """Sets the end_position of this CommentThread.


        :param end_position: The end_position of this CommentThread.
        :type end_position: int
        """

        self._end_position = end_position

    @property
    def resolved(self) -> bool:
        """Gets the resolved of this CommentThread.


        :return: The resolved of this CommentThread.
        :rtype: bool
        """
        return self._resolved

    @resolved.setter
    def resolved(self, resolved: bool):
        """Sets the resolved of this CommentThread.


        :param resolved: The resolved of this CommentThread.
        :type resolved: bool
        """

        self._resolved = resolved

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this CommentThread.


        :return: The created_at of this CommentThread.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this CommentThread.


        :param created_at: The created_at of this CommentThread.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this CommentThread.


        :return: The updated_at of this CommentThread.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this CommentThread.


        :param updated_at: The updated_at of this CommentThread.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
