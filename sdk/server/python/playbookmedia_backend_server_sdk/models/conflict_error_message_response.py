from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.conflict_info import ConflictInfo
from playbookmedia_backend_server_sdk.models.error_response import ErrorResponse
from playbookmedia_backend_server_sdk.models.validation_error_code import ValidationErrorCode
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.conflict_info import ConflictInfo  # noqa: E501
from playbookmedia_backend_server_sdk.models.error_response import ErrorResponse  # noqa: E501
from playbookmedia_backend_server_sdk.models.validation_error_code import ValidationErrorCode  # noqa: E501

class ConflictErrorMessageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=ValidationErrorCode.NO_ERROR, message=None, conflict_info=None, error_response=None):  # noqa: E501
        """ConflictErrorMessageResponse - a model defined in OpenAPI

        :param code: The code of this ConflictErrorMessageResponse.  # noqa: E501
        :type code: ValidationErrorCode
        :param message: The message of this ConflictErrorMessageResponse.  # noqa: E501
        :type message: str
        :param conflict_info: The conflict_info of this ConflictErrorMessageResponse.  # noqa: E501
        :type conflict_info: ConflictInfo
        :param error_response: The error_response of this ConflictErrorMessageResponse.  # noqa: E501
        :type error_response: ErrorResponse
        """
        self.openapi_types = {
            'code': ValidationErrorCode,
            'message': str,
            'conflict_info': ConflictInfo,
            'error_response': ErrorResponse
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'conflict_info': 'conflictInfo',
            'error_response': 'errorResponse'
        }

        self._code = code
        self._message = message
        self._conflict_info = conflict_info
        self._error_response = error_response

    @classmethod
    def from_dict(cls, dikt) -> 'ConflictErrorMessageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConflictErrorMessageResponse of this ConflictErrorMessageResponse.  # noqa: E501
        :rtype: ConflictErrorMessageResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> ValidationErrorCode:
        """Gets the code of this ConflictErrorMessageResponse.


        :return: The code of this ConflictErrorMessageResponse.
        :rtype: ValidationErrorCode
        """
        return self._code

    @code.setter
    def code(self, code: ValidationErrorCode):
        """Sets the code of this ConflictErrorMessageResponse.


        :param code: The code of this ConflictErrorMessageResponse.
        :type code: ValidationErrorCode
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this ConflictErrorMessageResponse.


        :return: The message of this ConflictErrorMessageResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ConflictErrorMessageResponse.


        :param message: The message of this ConflictErrorMessageResponse.
        :type message: str
        """

        self._message = message

    @property
    def conflict_info(self) -> ConflictInfo:
        """Gets the conflict_info of this ConflictErrorMessageResponse.


        :return: The conflict_info of this ConflictErrorMessageResponse.
        :rtype: ConflictInfo
        """
        return self._conflict_info

    @conflict_info.setter
    def conflict_info(self, conflict_info: ConflictInfo):
        """Sets the conflict_info of this ConflictErrorMessageResponse.


        :param conflict_info: The conflict_info of this ConflictErrorMessageResponse.
        :type conflict_info: ConflictInfo
        """

        self._conflict_info = conflict_info

    @property
    def error_response(self) -> ErrorResponse:
        """Gets the error_response of this ConflictErrorMessageResponse.


        :return: The error_response of this ConflictErrorMessageResponse.
        :rtype: ErrorResponse
        """
        return self._error_response

    @error_response.setter
    def error_response(self, error_response: ErrorResponse):
        """Sets the error_response of this ConflictErrorMessageResponse.


        :param error_response: The error_response of this ConflictErrorMessageResponse.
        :type error_response: ErrorResponse
        """

        self._error_response = error_response
