from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class ConflictInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type=None, identifier=None, conflict_reason=None, created_at=None, created_by=None):  # noqa: E501
        """ConflictInfo - a model defined in OpenAPI

        :param resource_type: The resource_type of this ConflictInfo.  # noqa: E501
        :type resource_type: str
        :param identifier: The identifier of this ConflictInfo.  # noqa: E501
        :type identifier: str
        :param conflict_reason: The conflict_reason of this ConflictInfo.  # noqa: E501
        :type conflict_reason: str
        :param created_at: The created_at of this ConflictInfo.  # noqa: E501
        :type created_at: datetime
        :param created_by: The created_by of this ConflictInfo.  # noqa: E501
        :type created_by: str
        """
        self.openapi_types = {
            'resource_type': str,
            'identifier': str,
            'conflict_reason': str,
            'created_at': datetime,
            'created_by': str
        }

        self.attribute_map = {
            'resource_type': 'resourceType',
            'identifier': 'identifier',
            'conflict_reason': 'conflictReason',
            'created_at': 'createdAt',
            'created_by': 'createdBy'
        }

        self._resource_type = resource_type
        self._identifier = identifier
        self._conflict_reason = conflict_reason
        self._created_at = created_at
        self._created_by = created_by

    @classmethod
    def from_dict(cls, dikt) -> 'ConflictInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConflictInfo of this ConflictInfo.  # noqa: E501
        :rtype: ConflictInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self) -> str:
        """Gets the resource_type of this ConflictInfo.


        :return: The resource_type of this ConflictInfo.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """Sets the resource_type of this ConflictInfo.


        :param resource_type: The resource_type of this ConflictInfo.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def identifier(self) -> str:
        """Gets the identifier of this ConflictInfo.


        :return: The identifier of this ConflictInfo.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier: str):
        """Sets the identifier of this ConflictInfo.


        :param identifier: The identifier of this ConflictInfo.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def conflict_reason(self) -> str:
        """Gets the conflict_reason of this ConflictInfo.


        :return: The conflict_reason of this ConflictInfo.
        :rtype: str
        """
        return self._conflict_reason

    @conflict_reason.setter
    def conflict_reason(self, conflict_reason: str):
        """Sets the conflict_reason of this ConflictInfo.


        :param conflict_reason: The conflict_reason of this ConflictInfo.
        :type conflict_reason: str
        """

        self._conflict_reason = conflict_reason

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this ConflictInfo.


        :return: The created_at of this ConflictInfo.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this ConflictInfo.


        :param created_at: The created_at of this ConflictInfo.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self) -> str:
        """Gets the created_by of this ConflictInfo.


        :return: The created_by of this ConflictInfo.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: str):
        """Sets the created_by of this ConflictInfo.


        :param created_by: The created_by of this ConflictInfo.
        :type created_by: str
        """

        self._created_by = created_by
