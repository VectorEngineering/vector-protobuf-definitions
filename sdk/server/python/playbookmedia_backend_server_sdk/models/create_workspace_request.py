from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.workspace import Workspace
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.workspace import Workspace  # noqa: E501

class CreateWorkspaceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workspace=None, account_id=None):  # noqa: E501
        """CreateWorkspaceRequest - a model defined in OpenAPI

        :param workspace: The workspace of this CreateWorkspaceRequest.  # noqa: E501
        :type workspace: Workspace
        :param account_id: The account_id of this CreateWorkspaceRequest.  # noqa: E501
        :type account_id: str
        """
        self.openapi_types = {
            'workspace': Workspace,
            'account_id': str
        }

        self.attribute_map = {
            'workspace': 'workspace',
            'account_id': 'accountId'
        }

        self._workspace = workspace
        self._account_id = account_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateWorkspaceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateWorkspaceRequest of this CreateWorkspaceRequest.  # noqa: E501
        :rtype: CreateWorkspaceRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workspace(self) -> Workspace:
        """Gets the workspace of this CreateWorkspaceRequest.


        :return: The workspace of this CreateWorkspaceRequest.
        :rtype: Workspace
        """
        return self._workspace

    @workspace.setter
    def workspace(self, workspace: Workspace):
        """Sets the workspace of this CreateWorkspaceRequest.


        :param workspace: The workspace of this CreateWorkspaceRequest.
        :type workspace: Workspace
        """

        self._workspace = workspace

    @property
    def account_id(self) -> str:
        """Gets the account_id of this CreateWorkspaceRequest.


        :return: The account_id of this CreateWorkspaceRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this CreateWorkspaceRequest.


        :param account_id: The account_id of this CreateWorkspaceRequest.
        :type account_id: str
        """

        self._account_id = account_id
