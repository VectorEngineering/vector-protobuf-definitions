from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class DocumentSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, file_id=None, snapshot_hash=None, content=None, author_id=None, reason=None, created_at=None):  # noqa: E501
        """DocumentSnapshot - a model defined in OpenAPI

        :param id: The id of this DocumentSnapshot.  # noqa: E501
        :type id: str
        :param file_id: The file_id of this DocumentSnapshot.  # noqa: E501
        :type file_id: str
        :param snapshot_hash: The snapshot_hash of this DocumentSnapshot.  # noqa: E501
        :type snapshot_hash: str
        :param content: The content of this DocumentSnapshot.  # noqa: E501
        :type content: str
        :param author_id: The author_id of this DocumentSnapshot.  # noqa: E501
        :type author_id: str
        :param reason: The reason of this DocumentSnapshot.  # noqa: E501
        :type reason: str
        :param created_at: The created_at of this DocumentSnapshot.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'file_id': str,
            'snapshot_hash': str,
            'content': str,
            'author_id': str,
            'reason': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'file_id': 'fileId',
            'snapshot_hash': 'snapshotHash',
            'content': 'content',
            'author_id': 'authorId',
            'reason': 'reason',
            'created_at': 'createdAt'
        }

        self._id = id
        self._file_id = file_id
        self._snapshot_hash = snapshot_hash
        self._content = content
        self._author_id = author_id
        self._reason = reason
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'DocumentSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DocumentSnapshot of this DocumentSnapshot.  # noqa: E501
        :rtype: DocumentSnapshot
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this DocumentSnapshot.


        :return: The id of this DocumentSnapshot.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this DocumentSnapshot.


        :param id: The id of this DocumentSnapshot.
        :type id: str
        """

        self._id = id

    @property
    def file_id(self) -> str:
        """Gets the file_id of this DocumentSnapshot.


        :return: The file_id of this DocumentSnapshot.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id: str):
        """Sets the file_id of this DocumentSnapshot.


        :param file_id: The file_id of this DocumentSnapshot.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def snapshot_hash(self) -> str:
        """Gets the snapshot_hash of this DocumentSnapshot.


        :return: The snapshot_hash of this DocumentSnapshot.
        :rtype: str
        """
        return self._snapshot_hash

    @snapshot_hash.setter
    def snapshot_hash(self, snapshot_hash: str):
        """Sets the snapshot_hash of this DocumentSnapshot.


        :param snapshot_hash: The snapshot_hash of this DocumentSnapshot.
        :type snapshot_hash: str
        """

        self._snapshot_hash = snapshot_hash

    @property
    def content(self) -> str:
        """Gets the content of this DocumentSnapshot.


        :return: The content of this DocumentSnapshot.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this DocumentSnapshot.


        :param content: The content of this DocumentSnapshot.
        :type content: str
        """

        self._content = content

    @property
    def author_id(self) -> str:
        """Gets the author_id of this DocumentSnapshot.


        :return: The author_id of this DocumentSnapshot.
        :rtype: str
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id: str):
        """Sets the author_id of this DocumentSnapshot.


        :param author_id: The author_id of this DocumentSnapshot.
        :type author_id: str
        """

        self._author_id = author_id

    @property
    def reason(self) -> str:
        """Gets the reason of this DocumentSnapshot.


        :return: The reason of this DocumentSnapshot.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this DocumentSnapshot.


        :param reason: The reason of this DocumentSnapshot.
        :type reason: str
        """

        self._reason = reason

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this DocumentSnapshot.


        :return: The created_at of this DocumentSnapshot.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this DocumentSnapshot.


        :param created_at: The created_at of this DocumentSnapshot.
        :type created_at: datetime
        """

        self._created_at = created_at
