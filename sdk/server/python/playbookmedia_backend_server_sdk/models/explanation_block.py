from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class ExplanationBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, template_id=None, section_identifier=None, explanation_text=None, complexity_level=None, related_terms=None, legal_references=None, created_at=None, updated_at=None):  # noqa: E501
        """ExplanationBlock - a model defined in OpenAPI

        :param id: The id of this ExplanationBlock.  # noqa: E501
        :type id: str
        :param template_id: The template_id of this ExplanationBlock.  # noqa: E501
        :type template_id: str
        :param section_identifier: The section_identifier of this ExplanationBlock.  # noqa: E501
        :type section_identifier: str
        :param explanation_text: The explanation_text of this ExplanationBlock.  # noqa: E501
        :type explanation_text: str
        :param complexity_level: The complexity_level of this ExplanationBlock.  # noqa: E501
        :type complexity_level: str
        :param related_terms: The related_terms of this ExplanationBlock.  # noqa: E501
        :type related_terms: List[str]
        :param legal_references: The legal_references of this ExplanationBlock.  # noqa: E501
        :type legal_references: List[str]
        :param created_at: The created_at of this ExplanationBlock.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this ExplanationBlock.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'template_id': str,
            'section_identifier': str,
            'explanation_text': str,
            'complexity_level': str,
            'related_terms': List[str],
            'legal_references': List[str],
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'template_id': 'templateId',
            'section_identifier': 'sectionIdentifier',
            'explanation_text': 'explanationText',
            'complexity_level': 'complexityLevel',
            'related_terms': 'relatedTerms',
            'legal_references': 'legalReferences',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._template_id = template_id
        self._section_identifier = section_identifier
        self._explanation_text = explanation_text
        self._complexity_level = complexity_level
        self._related_terms = related_terms
        self._legal_references = legal_references
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'ExplanationBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExplanationBlock of this ExplanationBlock.  # noqa: E501
        :rtype: ExplanationBlock
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ExplanationBlock.


        :return: The id of this ExplanationBlock.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ExplanationBlock.


        :param id: The id of this ExplanationBlock.
        :type id: str
        """

        self._id = id

    @property
    def template_id(self) -> str:
        """Gets the template_id of this ExplanationBlock.


        :return: The template_id of this ExplanationBlock.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id: str):
        """Sets the template_id of this ExplanationBlock.


        :param template_id: The template_id of this ExplanationBlock.
        :type template_id: str
        """

        self._template_id = template_id

    @property
    def section_identifier(self) -> str:
        """Gets the section_identifier of this ExplanationBlock.


        :return: The section_identifier of this ExplanationBlock.
        :rtype: str
        """
        return self._section_identifier

    @section_identifier.setter
    def section_identifier(self, section_identifier: str):
        """Sets the section_identifier of this ExplanationBlock.


        :param section_identifier: The section_identifier of this ExplanationBlock.
        :type section_identifier: str
        """

        self._section_identifier = section_identifier

    @property
    def explanation_text(self) -> str:
        """Gets the explanation_text of this ExplanationBlock.


        :return: The explanation_text of this ExplanationBlock.
        :rtype: str
        """
        return self._explanation_text

    @explanation_text.setter
    def explanation_text(self, explanation_text: str):
        """Sets the explanation_text of this ExplanationBlock.


        :param explanation_text: The explanation_text of this ExplanationBlock.
        :type explanation_text: str
        """

        self._explanation_text = explanation_text

    @property
    def complexity_level(self) -> str:
        """Gets the complexity_level of this ExplanationBlock.


        :return: The complexity_level of this ExplanationBlock.
        :rtype: str
        """
        return self._complexity_level

    @complexity_level.setter
    def complexity_level(self, complexity_level: str):
        """Sets the complexity_level of this ExplanationBlock.


        :param complexity_level: The complexity_level of this ExplanationBlock.
        :type complexity_level: str
        """

        self._complexity_level = complexity_level

    @property
    def related_terms(self) -> List[str]:
        """Gets the related_terms of this ExplanationBlock.


        :return: The related_terms of this ExplanationBlock.
        :rtype: List[str]
        """
        return self._related_terms

    @related_terms.setter
    def related_terms(self, related_terms: List[str]):
        """Sets the related_terms of this ExplanationBlock.


        :param related_terms: The related_terms of this ExplanationBlock.
        :type related_terms: List[str]
        """

        self._related_terms = related_terms

    @property
    def legal_references(self) -> List[str]:
        """Gets the legal_references of this ExplanationBlock.


        :return: The legal_references of this ExplanationBlock.
        :rtype: List[str]
        """
        return self._legal_references

    @legal_references.setter
    def legal_references(self, legal_references: List[str]):
        """Sets the legal_references of this ExplanationBlock.


        :param legal_references: The legal_references of this ExplanationBlock.
        :type legal_references: List[str]
        """

        self._legal_references = legal_references

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this ExplanationBlock.


        :return: The created_at of this ExplanationBlock.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this ExplanationBlock.


        :param created_at: The created_at of this ExplanationBlock.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this ExplanationBlock.


        :return: The updated_at of this ExplanationBlock.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this ExplanationBlock.


        :param updated_at: The updated_at of this ExplanationBlock.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
