from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class FieldError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field=None, error=None):  # noqa: E501
        """FieldError - a model defined in OpenAPI

        :param _field: The _field of this FieldError.  # noqa: E501
        :type _field: str
        :param error: The error of this FieldError.  # noqa: E501
        :type error: str
        """
        self.openapi_types = {
            '_field': str,
            'error': str
        }

        self.attribute_map = {
            '_field': 'field',
            'error': 'error'
        }

        self.__field = _field
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'FieldError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FieldError of this FieldError.  # noqa: E501
        :rtype: FieldError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self) -> str:
        """Gets the _field of this FieldError.


        :return: The _field of this FieldError.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field: str):
        """Sets the _field of this FieldError.


        :param _field: The _field of this FieldError.
        :type _field: str
        """

        self.__field = _field

    @property
    def error(self) -> str:
        """Gets the error of this FieldError.


        :return: The error of this FieldError.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this FieldError.


        :param error: The error of this FieldError.
        :type error: str
        """

        self._error = error
