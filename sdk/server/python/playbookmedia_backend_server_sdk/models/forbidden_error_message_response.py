from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.error_response import ErrorResponse
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.error_response import ErrorResponse  # noqa: E501

class ForbiddenErrorMessageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, message=None, reason=None, required_permissions=None, error_response=None):  # noqa: E501
        """ForbiddenErrorMessageResponse - a model defined in OpenAPI

        :param code: The code of this ForbiddenErrorMessageResponse.  # noqa: E501
        :type code: int
        :param message: The message of this ForbiddenErrorMessageResponse.  # noqa: E501
        :type message: str
        :param reason: The reason of this ForbiddenErrorMessageResponse.  # noqa: E501
        :type reason: str
        :param required_permissions: The required_permissions of this ForbiddenErrorMessageResponse.  # noqa: E501
        :type required_permissions: List[str]
        :param error_response: The error_response of this ForbiddenErrorMessageResponse.  # noqa: E501
        :type error_response: ErrorResponse
        """
        self.openapi_types = {
            'code': int,
            'message': str,
            'reason': str,
            'required_permissions': List[str],
            'error_response': ErrorResponse
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'reason': 'reason',
            'required_permissions': 'requiredPermissions',
            'error_response': 'errorResponse'
        }

        self._code = code
        self._message = message
        self._reason = reason
        self._required_permissions = required_permissions
        self._error_response = error_response

    @classmethod
    def from_dict(cls, dikt) -> 'ForbiddenErrorMessageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ForbiddenErrorMessageResponse of this ForbiddenErrorMessageResponse.  # noqa: E501
        :rtype: ForbiddenErrorMessageResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self) -> int:
        """Gets the code of this ForbiddenErrorMessageResponse.


        :return: The code of this ForbiddenErrorMessageResponse.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code: int):
        """Sets the code of this ForbiddenErrorMessageResponse.


        :param code: The code of this ForbiddenErrorMessageResponse.
        :type code: int
        """

        self._code = code

    @property
    def message(self) -> str:
        """Gets the message of this ForbiddenErrorMessageResponse.


        :return: The message of this ForbiddenErrorMessageResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ForbiddenErrorMessageResponse.


        :param message: The message of this ForbiddenErrorMessageResponse.
        :type message: str
        """

        self._message = message

    @property
    def reason(self) -> str:
        """Gets the reason of this ForbiddenErrorMessageResponse.


        :return: The reason of this ForbiddenErrorMessageResponse.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this ForbiddenErrorMessageResponse.


        :param reason: The reason of this ForbiddenErrorMessageResponse.
        :type reason: str
        """

        self._reason = reason

    @property
    def required_permissions(self) -> List[str]:
        """Gets the required_permissions of this ForbiddenErrorMessageResponse.


        :return: The required_permissions of this ForbiddenErrorMessageResponse.
        :rtype: List[str]
        """
        return self._required_permissions

    @required_permissions.setter
    def required_permissions(self, required_permissions: List[str]):
        """Sets the required_permissions of this ForbiddenErrorMessageResponse.


        :param required_permissions: The required_permissions of this ForbiddenErrorMessageResponse.
        :type required_permissions: List[str]
        """

        self._required_permissions = required_permissions

    @property
    def error_response(self) -> ErrorResponse:
        """Gets the error_response of this ForbiddenErrorMessageResponse.


        :return: The error_response of this ForbiddenErrorMessageResponse.
        :rtype: ErrorResponse
        """
        return self._error_response

    @error_response.setter
    def error_response(self, error_response: ErrorResponse):
        """Sets the error_response of this ForbiddenErrorMessageResponse.


        :param error_response: The error_response of this ForbiddenErrorMessageResponse.
        :type error_response: ErrorResponse
        """

        self._error_response = error_response
