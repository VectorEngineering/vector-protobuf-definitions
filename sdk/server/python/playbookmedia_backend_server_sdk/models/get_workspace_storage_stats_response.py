from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.storage_breakdown import StorageBreakdown
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.storage_breakdown import StorageBreakdown  # noqa: E501

class GetWorkspaceStorageStatsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_storage_used=None, storage_quota=None, usage_percentage=None, storage_by_type=None, total_files=None, total_folders=None, last_updated=None):  # noqa: E501
        """GetWorkspaceStorageStatsResponse - a model defined in OpenAPI

        :param total_storage_used: The total_storage_used of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type total_storage_used: str
        :param storage_quota: The storage_quota of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type storage_quota: str
        :param usage_percentage: The usage_percentage of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type usage_percentage: float
        :param storage_by_type: The storage_by_type of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type storage_by_type: List[StorageBreakdown]
        :param total_files: The total_files of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type total_files: int
        :param total_folders: The total_folders of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type total_folders: int
        :param last_updated: The last_updated of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :type last_updated: datetime
        """
        self.openapi_types = {
            'total_storage_used': str,
            'storage_quota': str,
            'usage_percentage': float,
            'storage_by_type': List[StorageBreakdown],
            'total_files': int,
            'total_folders': int,
            'last_updated': datetime
        }

        self.attribute_map = {
            'total_storage_used': 'totalStorageUsed',
            'storage_quota': 'storageQuota',
            'usage_percentage': 'usagePercentage',
            'storage_by_type': 'storageByType',
            'total_files': 'totalFiles',
            'total_folders': 'totalFolders',
            'last_updated': 'lastUpdated'
        }

        self._total_storage_used = total_storage_used
        self._storage_quota = storage_quota
        self._usage_percentage = usage_percentage
        self._storage_by_type = storage_by_type
        self._total_files = total_files
        self._total_folders = total_folders
        self._last_updated = last_updated

    @classmethod
    def from_dict(cls, dikt) -> 'GetWorkspaceStorageStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetWorkspaceStorageStatsResponse of this GetWorkspaceStorageStatsResponse.  # noqa: E501
        :rtype: GetWorkspaceStorageStatsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_storage_used(self) -> str:
        """Gets the total_storage_used of this GetWorkspaceStorageStatsResponse.


        :return: The total_storage_used of this GetWorkspaceStorageStatsResponse.
        :rtype: str
        """
        return self._total_storage_used

    @total_storage_used.setter
    def total_storage_used(self, total_storage_used: str):
        """Sets the total_storage_used of this GetWorkspaceStorageStatsResponse.


        :param total_storage_used: The total_storage_used of this GetWorkspaceStorageStatsResponse.
        :type total_storage_used: str
        """

        self._total_storage_used = total_storage_used

    @property
    def storage_quota(self) -> str:
        """Gets the storage_quota of this GetWorkspaceStorageStatsResponse.


        :return: The storage_quota of this GetWorkspaceStorageStatsResponse.
        :rtype: str
        """
        return self._storage_quota

    @storage_quota.setter
    def storage_quota(self, storage_quota: str):
        """Sets the storage_quota of this GetWorkspaceStorageStatsResponse.


        :param storage_quota: The storage_quota of this GetWorkspaceStorageStatsResponse.
        :type storage_quota: str
        """

        self._storage_quota = storage_quota

    @property
    def usage_percentage(self) -> float:
        """Gets the usage_percentage of this GetWorkspaceStorageStatsResponse.


        :return: The usage_percentage of this GetWorkspaceStorageStatsResponse.
        :rtype: float
        """
        return self._usage_percentage

    @usage_percentage.setter
    def usage_percentage(self, usage_percentage: float):
        """Sets the usage_percentage of this GetWorkspaceStorageStatsResponse.


        :param usage_percentage: The usage_percentage of this GetWorkspaceStorageStatsResponse.
        :type usage_percentage: float
        """

        self._usage_percentage = usage_percentage

    @property
    def storage_by_type(self) -> List[StorageBreakdown]:
        """Gets the storage_by_type of this GetWorkspaceStorageStatsResponse.


        :return: The storage_by_type of this GetWorkspaceStorageStatsResponse.
        :rtype: List[StorageBreakdown]
        """
        return self._storage_by_type

    @storage_by_type.setter
    def storage_by_type(self, storage_by_type: List[StorageBreakdown]):
        """Sets the storage_by_type of this GetWorkspaceStorageStatsResponse.


        :param storage_by_type: The storage_by_type of this GetWorkspaceStorageStatsResponse.
        :type storage_by_type: List[StorageBreakdown]
        """

        self._storage_by_type = storage_by_type

    @property
    def total_files(self) -> int:
        """Gets the total_files of this GetWorkspaceStorageStatsResponse.


        :return: The total_files of this GetWorkspaceStorageStatsResponse.
        :rtype: int
        """
        return self._total_files

    @total_files.setter
    def total_files(self, total_files: int):
        """Sets the total_files of this GetWorkspaceStorageStatsResponse.


        :param total_files: The total_files of this GetWorkspaceStorageStatsResponse.
        :type total_files: int
        """

        self._total_files = total_files

    @property
    def total_folders(self) -> int:
        """Gets the total_folders of this GetWorkspaceStorageStatsResponse.


        :return: The total_folders of this GetWorkspaceStorageStatsResponse.
        :rtype: int
        """
        return self._total_folders

    @total_folders.setter
    def total_folders(self, total_folders: int):
        """Sets the total_folders of this GetWorkspaceStorageStatsResponse.


        :param total_folders: The total_folders of this GetWorkspaceStorageStatsResponse.
        :type total_folders: int
        """

        self._total_folders = total_folders

    @property
    def last_updated(self) -> datetime:
        """Gets the last_updated of this GetWorkspaceStorageStatsResponse.


        :return: The last_updated of this GetWorkspaceStorageStatsResponse.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: datetime):
        """Sets the last_updated of this GetWorkspaceStorageStatsResponse.


        :param last_updated: The last_updated of this GetWorkspaceStorageStatsResponse.
        :type last_updated: datetime
        """

        self._last_updated = last_updated
