from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class JobSuccessRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workflow_id=None, success_rate=None, total_runs=None):  # noqa: E501
        """JobSuccessRate - a model defined in OpenAPI

        :param workflow_id: The workflow_id of this JobSuccessRate.  # noqa: E501
        :type workflow_id: str
        :param success_rate: The success_rate of this JobSuccessRate.  # noqa: E501
        :type success_rate: float
        :param total_runs: The total_runs of this JobSuccessRate.  # noqa: E501
        :type total_runs: int
        """
        self.openapi_types = {
            'workflow_id': str,
            'success_rate': float,
            'total_runs': int
        }

        self.attribute_map = {
            'workflow_id': 'workflowId',
            'success_rate': 'successRate',
            'total_runs': 'totalRuns'
        }

        self._workflow_id = workflow_id
        self._success_rate = success_rate
        self._total_runs = total_runs

    @classmethod
    def from_dict(cls, dikt) -> 'JobSuccessRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobSuccessRate of this JobSuccessRate.  # noqa: E501
        :rtype: JobSuccessRate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workflow_id(self) -> str:
        """Gets the workflow_id of this JobSuccessRate.


        :return: The workflow_id of this JobSuccessRate.
        :rtype: str
        """
        return self._workflow_id

    @workflow_id.setter
    def workflow_id(self, workflow_id: str):
        """Sets the workflow_id of this JobSuccessRate.


        :param workflow_id: The workflow_id of this JobSuccessRate.
        :type workflow_id: str
        """

        self._workflow_id = workflow_id

    @property
    def success_rate(self) -> float:
        """Gets the success_rate of this JobSuccessRate.


        :return: The success_rate of this JobSuccessRate.
        :rtype: float
        """
        return self._success_rate

    @success_rate.setter
    def success_rate(self, success_rate: float):
        """Sets the success_rate of this JobSuccessRate.


        :param success_rate: The success_rate of this JobSuccessRate.
        :type success_rate: float
        """

        self._success_rate = success_rate

    @property
    def total_runs(self) -> int:
        """Gets the total_runs of this JobSuccessRate.


        :return: The total_runs of this JobSuccessRate.
        :rtype: int
        """
        return self._total_runs

    @total_runs.setter
    def total_runs(self, total_runs: int):
        """Sets the total_runs of this JobSuccessRate.


        :param total_runs: The total_runs of this JobSuccessRate.
        :type total_runs: int
        """

        self._total_runs = total_runs
