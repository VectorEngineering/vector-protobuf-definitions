from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.api_key import APIKey
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.api_key import APIKey  # noqa: E501

class ListAPIKeysResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_keys=None, next_page_number=None, total_count=None):  # noqa: E501
        """ListAPIKeysResponse - a model defined in OpenAPI

        :param api_keys: The api_keys of this ListAPIKeysResponse.  # noqa: E501
        :type api_keys: List[APIKey]
        :param next_page_number: The next_page_number of this ListAPIKeysResponse.  # noqa: E501
        :type next_page_number: int
        :param total_count: The total_count of this ListAPIKeysResponse.  # noqa: E501
        :type total_count: int
        """
        self.openapi_types = {
            'api_keys': List[APIKey],
            'next_page_number': int,
            'total_count': int
        }

        self.attribute_map = {
            'api_keys': 'apiKeys',
            'next_page_number': 'nextPageNumber',
            'total_count': 'totalCount'
        }

        self._api_keys = api_keys
        self._next_page_number = next_page_number
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt) -> 'ListAPIKeysResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListAPIKeysResponse of this ListAPIKeysResponse.  # noqa: E501
        :rtype: ListAPIKeysResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_keys(self) -> List[APIKey]:
        """Gets the api_keys of this ListAPIKeysResponse.


        :return: The api_keys of this ListAPIKeysResponse.
        :rtype: List[APIKey]
        """
        return self._api_keys

    @api_keys.setter
    def api_keys(self, api_keys: List[APIKey]):
        """Sets the api_keys of this ListAPIKeysResponse.


        :param api_keys: The api_keys of this ListAPIKeysResponse.
        :type api_keys: List[APIKey]
        """

        self._api_keys = api_keys

    @property
    def next_page_number(self) -> int:
        """Gets the next_page_number of this ListAPIKeysResponse.


        :return: The next_page_number of this ListAPIKeysResponse.
        :rtype: int
        """
        return self._next_page_number

    @next_page_number.setter
    def next_page_number(self, next_page_number: int):
        """Sets the next_page_number of this ListAPIKeysResponse.


        :param next_page_number: The next_page_number of this ListAPIKeysResponse.
        :type next_page_number: int
        """

        self._next_page_number = next_page_number

    @property
    def total_count(self) -> int:
        """Gets the total_count of this ListAPIKeysResponse.


        :return: The total_count of this ListAPIKeysResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count: int):
        """Sets the total_count of this ListAPIKeysResponse.


        :param total_count: The total_count of this ListAPIKeysResponse.
        :type total_count: int
        """

        self._total_count = total_count
