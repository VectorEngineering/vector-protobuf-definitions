from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.lead import Lead
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.lead import Lead  # noqa: E501

class ListLeadsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, leads=None, total_count=None, next_page_number=None):  # noqa: E501
        """ListLeadsResponse - a model defined in OpenAPI

        :param leads: The leads of this ListLeadsResponse.  # noqa: E501
        :type leads: List[Lead]
        :param total_count: The total_count of this ListLeadsResponse.  # noqa: E501
        :type total_count: int
        :param next_page_number: The next_page_number of this ListLeadsResponse.  # noqa: E501
        :type next_page_number: int
        """
        self.openapi_types = {
            'leads': List[Lead],
            'total_count': int,
            'next_page_number': int
        }

        self.attribute_map = {
            'leads': 'leads',
            'total_count': 'totalCount',
            'next_page_number': 'nextPageNumber'
        }

        self._leads = leads
        self._total_count = total_count
        self._next_page_number = next_page_number

    @classmethod
    def from_dict(cls, dikt) -> 'ListLeadsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListLeadsResponse of this ListLeadsResponse.  # noqa: E501
        :rtype: ListLeadsResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def leads(self) -> List[Lead]:
        """Gets the leads of this ListLeadsResponse.


        :return: The leads of this ListLeadsResponse.
        :rtype: List[Lead]
        """
        return self._leads

    @leads.setter
    def leads(self, leads: List[Lead]):
        """Sets the leads of this ListLeadsResponse.


        :param leads: The leads of this ListLeadsResponse.
        :type leads: List[Lead]
        """

        self._leads = leads

    @property
    def total_count(self) -> int:
        """Gets the total_count of this ListLeadsResponse.


        :return: The total_count of this ListLeadsResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count: int):
        """Sets the total_count of this ListLeadsResponse.


        :param total_count: The total_count of this ListLeadsResponse.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def next_page_number(self) -> int:
        """Gets the next_page_number of this ListLeadsResponse.


        :return: The next_page_number of this ListLeadsResponse.
        :rtype: int
        """
        return self._next_page_number

    @next_page_number.setter
    def next_page_number(self, next_page_number: int):
        """Sets the next_page_number of this ListLeadsResponse.


        :param next_page_number: The next_page_number of this ListLeadsResponse.
        :type next_page_number: int
        """

        self._next_page_number = next_page_number
