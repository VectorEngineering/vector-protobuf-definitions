from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.app_analytics import AppAnalytics
from playbookmedia_backend_server_sdk.models.app_category import AppCategory
from playbookmedia_backend_server_sdk.models.app_development_info import AppDevelopmentInfo
from playbookmedia_backend_server_sdk.models.app_installation import AppInstallation
from playbookmedia_backend_server_sdk.models.app_permission import AppPermission
from playbookmedia_backend_server_sdk.models.app_review import AppReview
from playbookmedia_backend_server_sdk.models.app_version import AppVersion
from playbookmedia_backend_server_sdk.models.app_webhook import AppWebhook
from playbookmedia_backend_server_sdk.models.pricing_model import PricingModel
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.app_analytics import AppAnalytics  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_category import AppCategory  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_development_info import AppDevelopmentInfo  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_installation import AppInstallation  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_permission import AppPermission  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_review import AppReview  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_version import AppVersion  # noqa: E501
from playbookmedia_backend_server_sdk.models.app_webhook import AppWebhook  # noqa: E501
from playbookmedia_backend_server_sdk.models.pricing_model import PricingModel  # noqa: E501

class MarketplaceApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, description=None, developer_id=None, category=AppCategory.UNSPECIFIED, supported_contract_types=None, features=None, pricing_model=PricingModel.UNSPECIFIED, pricing_tiers=None, supported_integrations=None, is_verified=None, rating=None, installation_count=None, required_permissions=None, metadata=None, documentation_url=None, support_email=None, screenshots=None, privacy_policy_url=None, terms_url=None, published_at=None, last_updated=None, versions=None, installations=None, analytics=None, reviews=None, info=None, webhooks=None, permissions=None):  # noqa: E501
        """MarketplaceApp - a model defined in OpenAPI

        :param id: The id of this MarketplaceApp.  # noqa: E501
        :type id: str
        :param name: The name of this MarketplaceApp.  # noqa: E501
        :type name: str
        :param description: The description of this MarketplaceApp.  # noqa: E501
        :type description: str
        :param developer_id: The developer_id of this MarketplaceApp.  # noqa: E501
        :type developer_id: str
        :param category: The category of this MarketplaceApp.  # noqa: E501
        :type category: AppCategory
        :param supported_contract_types: The supported_contract_types of this MarketplaceApp.  # noqa: E501
        :type supported_contract_types: List[str]
        :param features: The features of this MarketplaceApp.  # noqa: E501
        :type features: List[str]
        :param pricing_model: The pricing_model of this MarketplaceApp.  # noqa: E501
        :type pricing_model: PricingModel
        :param pricing_tiers: The pricing_tiers of this MarketplaceApp.  # noqa: E501
        :type pricing_tiers: Dict[str, float]
        :param supported_integrations: The supported_integrations of this MarketplaceApp.  # noqa: E501
        :type supported_integrations: List[str]
        :param is_verified: The is_verified of this MarketplaceApp.  # noqa: E501
        :type is_verified: bool
        :param rating: The rating of this MarketplaceApp.  # noqa: E501
        :type rating: float
        :param installation_count: The installation_count of this MarketplaceApp.  # noqa: E501
        :type installation_count: int
        :param required_permissions: The required_permissions of this MarketplaceApp.  # noqa: E501
        :type required_permissions: List[str]
        :param metadata: The metadata of this MarketplaceApp.  # noqa: E501
        :type metadata: Dict[str, str]
        :param documentation_url: The documentation_url of this MarketplaceApp.  # noqa: E501
        :type documentation_url: str
        :param support_email: The support_email of this MarketplaceApp.  # noqa: E501
        :type support_email: str
        :param screenshots: The screenshots of this MarketplaceApp.  # noqa: E501
        :type screenshots: List[str]
        :param privacy_policy_url: The privacy_policy_url of this MarketplaceApp.  # noqa: E501
        :type privacy_policy_url: str
        :param terms_url: The terms_url of this MarketplaceApp.  # noqa: E501
        :type terms_url: str
        :param published_at: The published_at of this MarketplaceApp.  # noqa: E501
        :type published_at: datetime
        :param last_updated: The last_updated of this MarketplaceApp.  # noqa: E501
        :type last_updated: datetime
        :param versions: The versions of this MarketplaceApp.  # noqa: E501
        :type versions: List[AppVersion]
        :param installations: The installations of this MarketplaceApp.  # noqa: E501
        :type installations: List[AppInstallation]
        :param analytics: The analytics of this MarketplaceApp.  # noqa: E501
        :type analytics: List[AppAnalytics]
        :param reviews: The reviews of this MarketplaceApp.  # noqa: E501
        :type reviews: List[AppReview]
        :param info: The info of this MarketplaceApp.  # noqa: E501
        :type info: AppDevelopmentInfo
        :param webhooks: The webhooks of this MarketplaceApp.  # noqa: E501
        :type webhooks: List[AppWebhook]
        :param permissions: The permissions of this MarketplaceApp.  # noqa: E501
        :type permissions: List[AppPermission]
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'description': str,
            'developer_id': str,
            'category': AppCategory,
            'supported_contract_types': List[str],
            'features': List[str],
            'pricing_model': PricingModel,
            'pricing_tiers': Dict[str, float],
            'supported_integrations': List[str],
            'is_verified': bool,
            'rating': float,
            'installation_count': int,
            'required_permissions': List[str],
            'metadata': Dict[str, str],
            'documentation_url': str,
            'support_email': str,
            'screenshots': List[str],
            'privacy_policy_url': str,
            'terms_url': str,
            'published_at': datetime,
            'last_updated': datetime,
            'versions': List[AppVersion],
            'installations': List[AppInstallation],
            'analytics': List[AppAnalytics],
            'reviews': List[AppReview],
            'info': AppDevelopmentInfo,
            'webhooks': List[AppWebhook],
            'permissions': List[AppPermission]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'developer_id': 'developerId',
            'category': 'category',
            'supported_contract_types': 'supportedContractTypes',
            'features': 'features',
            'pricing_model': 'pricingModel',
            'pricing_tiers': 'pricingTiers',
            'supported_integrations': 'supportedIntegrations',
            'is_verified': 'isVerified',
            'rating': 'rating',
            'installation_count': 'installationCount',
            'required_permissions': 'requiredPermissions',
            'metadata': 'metadata',
            'documentation_url': 'documentationUrl',
            'support_email': 'supportEmail',
            'screenshots': 'screenshots',
            'privacy_policy_url': 'privacyPolicyUrl',
            'terms_url': 'termsUrl',
            'published_at': 'publishedAt',
            'last_updated': 'lastUpdated',
            'versions': 'versions',
            'installations': 'installations',
            'analytics': 'analytics',
            'reviews': 'reviews',
            'info': 'info',
            'webhooks': 'webhooks',
            'permissions': 'permissions'
        }

        self._id = id
        self._name = name
        self._description = description
        self._developer_id = developer_id
        self._category = category
        self._supported_contract_types = supported_contract_types
        self._features = features
        self._pricing_model = pricing_model
        self._pricing_tiers = pricing_tiers
        self._supported_integrations = supported_integrations
        self._is_verified = is_verified
        self._rating = rating
        self._installation_count = installation_count
        self._required_permissions = required_permissions
        self._metadata = metadata
        self._documentation_url = documentation_url
        self._support_email = support_email
        self._screenshots = screenshots
        self._privacy_policy_url = privacy_policy_url
        self._terms_url = terms_url
        self._published_at = published_at
        self._last_updated = last_updated
        self._versions = versions
        self._installations = installations
        self._analytics = analytics
        self._reviews = reviews
        self._info = info
        self._webhooks = webhooks
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt) -> 'MarketplaceApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MarketplaceApp of this MarketplaceApp.  # noqa: E501
        :rtype: MarketplaceApp
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this MarketplaceApp.


        :return: The id of this MarketplaceApp.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this MarketplaceApp.


        :param id: The id of this MarketplaceApp.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this MarketplaceApp.


        :return: The name of this MarketplaceApp.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this MarketplaceApp.


        :param name: The name of this MarketplaceApp.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this MarketplaceApp.


        :return: The description of this MarketplaceApp.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this MarketplaceApp.


        :param description: The description of this MarketplaceApp.
        :type description: str
        """

        self._description = description

    @property
    def developer_id(self) -> str:
        """Gets the developer_id of this MarketplaceApp.


        :return: The developer_id of this MarketplaceApp.
        :rtype: str
        """
        return self._developer_id

    @developer_id.setter
    def developer_id(self, developer_id: str):
        """Sets the developer_id of this MarketplaceApp.


        :param developer_id: The developer_id of this MarketplaceApp.
        :type developer_id: str
        """

        self._developer_id = developer_id

    @property
    def category(self) -> AppCategory:
        """Gets the category of this MarketplaceApp.


        :return: The category of this MarketplaceApp.
        :rtype: AppCategory
        """
        return self._category

    @category.setter
    def category(self, category: AppCategory):
        """Sets the category of this MarketplaceApp.


        :param category: The category of this MarketplaceApp.
        :type category: AppCategory
        """

        self._category = category

    @property
    def supported_contract_types(self) -> List[str]:
        """Gets the supported_contract_types of this MarketplaceApp.


        :return: The supported_contract_types of this MarketplaceApp.
        :rtype: List[str]
        """
        return self._supported_contract_types

    @supported_contract_types.setter
    def supported_contract_types(self, supported_contract_types: List[str]):
        """Sets the supported_contract_types of this MarketplaceApp.


        :param supported_contract_types: The supported_contract_types of this MarketplaceApp.
        :type supported_contract_types: List[str]
        """

        self._supported_contract_types = supported_contract_types

    @property
    def features(self) -> List[str]:
        """Gets the features of this MarketplaceApp.


        :return: The features of this MarketplaceApp.
        :rtype: List[str]
        """
        return self._features

    @features.setter
    def features(self, features: List[str]):
        """Sets the features of this MarketplaceApp.


        :param features: The features of this MarketplaceApp.
        :type features: List[str]
        """

        self._features = features

    @property
    def pricing_model(self) -> PricingModel:
        """Gets the pricing_model of this MarketplaceApp.


        :return: The pricing_model of this MarketplaceApp.
        :rtype: PricingModel
        """
        return self._pricing_model

    @pricing_model.setter
    def pricing_model(self, pricing_model: PricingModel):
        """Sets the pricing_model of this MarketplaceApp.


        :param pricing_model: The pricing_model of this MarketplaceApp.
        :type pricing_model: PricingModel
        """

        self._pricing_model = pricing_model

    @property
    def pricing_tiers(self) -> Dict[str, float]:
        """Gets the pricing_tiers of this MarketplaceApp.


        :return: The pricing_tiers of this MarketplaceApp.
        :rtype: Dict[str, float]
        """
        return self._pricing_tiers

    @pricing_tiers.setter
    def pricing_tiers(self, pricing_tiers: Dict[str, float]):
        """Sets the pricing_tiers of this MarketplaceApp.


        :param pricing_tiers: The pricing_tiers of this MarketplaceApp.
        :type pricing_tiers: Dict[str, float]
        """

        self._pricing_tiers = pricing_tiers

    @property
    def supported_integrations(self) -> List[str]:
        """Gets the supported_integrations of this MarketplaceApp.


        :return: The supported_integrations of this MarketplaceApp.
        :rtype: List[str]
        """
        return self._supported_integrations

    @supported_integrations.setter
    def supported_integrations(self, supported_integrations: List[str]):
        """Sets the supported_integrations of this MarketplaceApp.


        :param supported_integrations: The supported_integrations of this MarketplaceApp.
        :type supported_integrations: List[str]
        """

        self._supported_integrations = supported_integrations

    @property
    def is_verified(self) -> bool:
        """Gets the is_verified of this MarketplaceApp.


        :return: The is_verified of this MarketplaceApp.
        :rtype: bool
        """
        return self._is_verified

    @is_verified.setter
    def is_verified(self, is_verified: bool):
        """Sets the is_verified of this MarketplaceApp.


        :param is_verified: The is_verified of this MarketplaceApp.
        :type is_verified: bool
        """

        self._is_verified = is_verified

    @property
    def rating(self) -> float:
        """Gets the rating of this MarketplaceApp.


        :return: The rating of this MarketplaceApp.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this MarketplaceApp.


        :param rating: The rating of this MarketplaceApp.
        :type rating: float
        """

        self._rating = rating

    @property
    def installation_count(self) -> int:
        """Gets the installation_count of this MarketplaceApp.


        :return: The installation_count of this MarketplaceApp.
        :rtype: int
        """
        return self._installation_count

    @installation_count.setter
    def installation_count(self, installation_count: int):
        """Sets the installation_count of this MarketplaceApp.


        :param installation_count: The installation_count of this MarketplaceApp.
        :type installation_count: int
        """

        self._installation_count = installation_count

    @property
    def required_permissions(self) -> List[str]:
        """Gets the required_permissions of this MarketplaceApp.


        :return: The required_permissions of this MarketplaceApp.
        :rtype: List[str]
        """
        return self._required_permissions

    @required_permissions.setter
    def required_permissions(self, required_permissions: List[str]):
        """Sets the required_permissions of this MarketplaceApp.


        :param required_permissions: The required_permissions of this MarketplaceApp.
        :type required_permissions: List[str]
        """

        self._required_permissions = required_permissions

    @property
    def metadata(self) -> Dict[str, str]:
        """Gets the metadata of this MarketplaceApp.


        :return: The metadata of this MarketplaceApp.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: Dict[str, str]):
        """Sets the metadata of this MarketplaceApp.


        :param metadata: The metadata of this MarketplaceApp.
        :type metadata: Dict[str, str]
        """

        self._metadata = metadata

    @property
    def documentation_url(self) -> str:
        """Gets the documentation_url of this MarketplaceApp.


        :return: The documentation_url of this MarketplaceApp.
        :rtype: str
        """
        return self._documentation_url

    @documentation_url.setter
    def documentation_url(self, documentation_url: str):
        """Sets the documentation_url of this MarketplaceApp.


        :param documentation_url: The documentation_url of this MarketplaceApp.
        :type documentation_url: str
        """

        self._documentation_url = documentation_url

    @property
    def support_email(self) -> str:
        """Gets the support_email of this MarketplaceApp.


        :return: The support_email of this MarketplaceApp.
        :rtype: str
        """
        return self._support_email

    @support_email.setter
    def support_email(self, support_email: str):
        """Sets the support_email of this MarketplaceApp.


        :param support_email: The support_email of this MarketplaceApp.
        :type support_email: str
        """

        self._support_email = support_email

    @property
    def screenshots(self) -> List[str]:
        """Gets the screenshots of this MarketplaceApp.


        :return: The screenshots of this MarketplaceApp.
        :rtype: List[str]
        """
        return self._screenshots

    @screenshots.setter
    def screenshots(self, screenshots: List[str]):
        """Sets the screenshots of this MarketplaceApp.


        :param screenshots: The screenshots of this MarketplaceApp.
        :type screenshots: List[str]
        """

        self._screenshots = screenshots

    @property
    def privacy_policy_url(self) -> str:
        """Gets the privacy_policy_url of this MarketplaceApp.


        :return: The privacy_policy_url of this MarketplaceApp.
        :rtype: str
        """
        return self._privacy_policy_url

    @privacy_policy_url.setter
    def privacy_policy_url(self, privacy_policy_url: str):
        """Sets the privacy_policy_url of this MarketplaceApp.


        :param privacy_policy_url: The privacy_policy_url of this MarketplaceApp.
        :type privacy_policy_url: str
        """

        self._privacy_policy_url = privacy_policy_url

    @property
    def terms_url(self) -> str:
        """Gets the terms_url of this MarketplaceApp.


        :return: The terms_url of this MarketplaceApp.
        :rtype: str
        """
        return self._terms_url

    @terms_url.setter
    def terms_url(self, terms_url: str):
        """Sets the terms_url of this MarketplaceApp.


        :param terms_url: The terms_url of this MarketplaceApp.
        :type terms_url: str
        """

        self._terms_url = terms_url

    @property
    def published_at(self) -> datetime:
        """Gets the published_at of this MarketplaceApp.


        :return: The published_at of this MarketplaceApp.
        :rtype: datetime
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at: datetime):
        """Sets the published_at of this MarketplaceApp.


        :param published_at: The published_at of this MarketplaceApp.
        :type published_at: datetime
        """

        self._published_at = published_at

    @property
    def last_updated(self) -> datetime:
        """Gets the last_updated of this MarketplaceApp.


        :return: The last_updated of this MarketplaceApp.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: datetime):
        """Sets the last_updated of this MarketplaceApp.


        :param last_updated: The last_updated of this MarketplaceApp.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def versions(self) -> List[AppVersion]:
        """Gets the versions of this MarketplaceApp.


        :return: The versions of this MarketplaceApp.
        :rtype: List[AppVersion]
        """
        return self._versions

    @versions.setter
    def versions(self, versions: List[AppVersion]):
        """Sets the versions of this MarketplaceApp.


        :param versions: The versions of this MarketplaceApp.
        :type versions: List[AppVersion]
        """

        self._versions = versions

    @property
    def installations(self) -> List[AppInstallation]:
        """Gets the installations of this MarketplaceApp.


        :return: The installations of this MarketplaceApp.
        :rtype: List[AppInstallation]
        """
        return self._installations

    @installations.setter
    def installations(self, installations: List[AppInstallation]):
        """Sets the installations of this MarketplaceApp.


        :param installations: The installations of this MarketplaceApp.
        :type installations: List[AppInstallation]
        """

        self._installations = installations

    @property
    def analytics(self) -> List[AppAnalytics]:
        """Gets the analytics of this MarketplaceApp.


        :return: The analytics of this MarketplaceApp.
        :rtype: List[AppAnalytics]
        """
        return self._analytics

    @analytics.setter
    def analytics(self, analytics: List[AppAnalytics]):
        """Sets the analytics of this MarketplaceApp.


        :param analytics: The analytics of this MarketplaceApp.
        :type analytics: List[AppAnalytics]
        """

        self._analytics = analytics

    @property
    def reviews(self) -> List[AppReview]:
        """Gets the reviews of this MarketplaceApp.


        :return: The reviews of this MarketplaceApp.
        :rtype: List[AppReview]
        """
        return self._reviews

    @reviews.setter
    def reviews(self, reviews: List[AppReview]):
        """Sets the reviews of this MarketplaceApp.


        :param reviews: The reviews of this MarketplaceApp.
        :type reviews: List[AppReview]
        """

        self._reviews = reviews

    @property
    def info(self) -> AppDevelopmentInfo:
        """Gets the info of this MarketplaceApp.


        :return: The info of this MarketplaceApp.
        :rtype: AppDevelopmentInfo
        """
        return self._info

    @info.setter
    def info(self, info: AppDevelopmentInfo):
        """Sets the info of this MarketplaceApp.


        :param info: The info of this MarketplaceApp.
        :type info: AppDevelopmentInfo
        """

        self._info = info

    @property
    def webhooks(self) -> List[AppWebhook]:
        """Gets the webhooks of this MarketplaceApp.


        :return: The webhooks of this MarketplaceApp.
        :rtype: List[AppWebhook]
        """
        return self._webhooks

    @webhooks.setter
    def webhooks(self, webhooks: List[AppWebhook]):
        """Sets the webhooks of this MarketplaceApp.


        :param webhooks: The webhooks of this MarketplaceApp.
        :type webhooks: List[AppWebhook]
        """

        self._webhooks = webhooks

    @property
    def permissions(self) -> List[AppPermission]:
        """Gets the permissions of this MarketplaceApp.


        :return: The permissions of this MarketplaceApp.
        :rtype: List[AppPermission]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions: List[AppPermission]):
        """Sets the permissions of this MarketplaceApp.


        :param permissions: The permissions of this MarketplaceApp.
        :type permissions: List[AppPermission]
        """

        self._permissions = permissions
