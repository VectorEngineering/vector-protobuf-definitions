from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class MergeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, source_branch_id=None, target_branch_id=None, title=None, description=None, author_id=None, reviewers=None, status=None, labels=None, has_conflicts=None, automated_check_results=None, created_at=None, updated_at=None):  # noqa: E501
        """MergeRequest - a model defined in OpenAPI

        :param id: The id of this MergeRequest.  # noqa: E501
        :type id: str
        :param source_branch_id: The source_branch_id of this MergeRequest.  # noqa: E501
        :type source_branch_id: str
        :param target_branch_id: The target_branch_id of this MergeRequest.  # noqa: E501
        :type target_branch_id: str
        :param title: The title of this MergeRequest.  # noqa: E501
        :type title: str
        :param description: The description of this MergeRequest.  # noqa: E501
        :type description: str
        :param author_id: The author_id of this MergeRequest.  # noqa: E501
        :type author_id: str
        :param reviewers: The reviewers of this MergeRequest.  # noqa: E501
        :type reviewers: List[str]
        :param status: The status of this MergeRequest.  # noqa: E501
        :type status: str
        :param labels: The labels of this MergeRequest.  # noqa: E501
        :type labels: List[str]
        :param has_conflicts: The has_conflicts of this MergeRequest.  # noqa: E501
        :type has_conflicts: bool
        :param automated_check_results: The automated_check_results of this MergeRequest.  # noqa: E501
        :type automated_check_results: List[str]
        :param created_at: The created_at of this MergeRequest.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this MergeRequest.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'source_branch_id': str,
            'target_branch_id': str,
            'title': str,
            'description': str,
            'author_id': str,
            'reviewers': List[str],
            'status': str,
            'labels': List[str],
            'has_conflicts': bool,
            'automated_check_results': List[str],
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'source_branch_id': 'sourceBranchId',
            'target_branch_id': 'targetBranchId',
            'title': 'title',
            'description': 'description',
            'author_id': 'authorId',
            'reviewers': 'reviewers',
            'status': 'status',
            'labels': 'labels',
            'has_conflicts': 'hasConflicts',
            'automated_check_results': 'automatedCheckResults',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._source_branch_id = source_branch_id
        self._target_branch_id = target_branch_id
        self._title = title
        self._description = description
        self._author_id = author_id
        self._reviewers = reviewers
        self._status = status
        self._labels = labels
        self._has_conflicts = has_conflicts
        self._automated_check_results = automated_check_results
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'MergeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MergeRequest of this MergeRequest.  # noqa: E501
        :rtype: MergeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this MergeRequest.


        :return: The id of this MergeRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this MergeRequest.


        :param id: The id of this MergeRequest.
        :type id: str
        """

        self._id = id

    @property
    def source_branch_id(self) -> str:
        """Gets the source_branch_id of this MergeRequest.


        :return: The source_branch_id of this MergeRequest.
        :rtype: str
        """
        return self._source_branch_id

    @source_branch_id.setter
    def source_branch_id(self, source_branch_id: str):
        """Sets the source_branch_id of this MergeRequest.


        :param source_branch_id: The source_branch_id of this MergeRequest.
        :type source_branch_id: str
        """

        self._source_branch_id = source_branch_id

    @property
    def target_branch_id(self) -> str:
        """Gets the target_branch_id of this MergeRequest.


        :return: The target_branch_id of this MergeRequest.
        :rtype: str
        """
        return self._target_branch_id

    @target_branch_id.setter
    def target_branch_id(self, target_branch_id: str):
        """Sets the target_branch_id of this MergeRequest.


        :param target_branch_id: The target_branch_id of this MergeRequest.
        :type target_branch_id: str
        """

        self._target_branch_id = target_branch_id

    @property
    def title(self) -> str:
        """Gets the title of this MergeRequest.


        :return: The title of this MergeRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this MergeRequest.


        :param title: The title of this MergeRequest.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this MergeRequest.


        :return: The description of this MergeRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this MergeRequest.


        :param description: The description of this MergeRequest.
        :type description: str
        """

        self._description = description

    @property
    def author_id(self) -> str:
        """Gets the author_id of this MergeRequest.


        :return: The author_id of this MergeRequest.
        :rtype: str
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id: str):
        """Sets the author_id of this MergeRequest.


        :param author_id: The author_id of this MergeRequest.
        :type author_id: str
        """

        self._author_id = author_id

    @property
    def reviewers(self) -> List[str]:
        """Gets the reviewers of this MergeRequest.


        :return: The reviewers of this MergeRequest.
        :rtype: List[str]
        """
        return self._reviewers

    @reviewers.setter
    def reviewers(self, reviewers: List[str]):
        """Sets the reviewers of this MergeRequest.


        :param reviewers: The reviewers of this MergeRequest.
        :type reviewers: List[str]
        """

        self._reviewers = reviewers

    @property
    def status(self) -> str:
        """Gets the status of this MergeRequest.


        :return: The status of this MergeRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this MergeRequest.


        :param status: The status of this MergeRequest.
        :type status: str
        """

        self._status = status

    @property
    def labels(self) -> List[str]:
        """Gets the labels of this MergeRequest.


        :return: The labels of this MergeRequest.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: List[str]):
        """Sets the labels of this MergeRequest.


        :param labels: The labels of this MergeRequest.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def has_conflicts(self) -> bool:
        """Gets the has_conflicts of this MergeRequest.


        :return: The has_conflicts of this MergeRequest.
        :rtype: bool
        """
        return self._has_conflicts

    @has_conflicts.setter
    def has_conflicts(self, has_conflicts: bool):
        """Sets the has_conflicts of this MergeRequest.


        :param has_conflicts: The has_conflicts of this MergeRequest.
        :type has_conflicts: bool
        """

        self._has_conflicts = has_conflicts

    @property
    def automated_check_results(self) -> List[str]:
        """Gets the automated_check_results of this MergeRequest.


        :return: The automated_check_results of this MergeRequest.
        :rtype: List[str]
        """
        return self._automated_check_results

    @automated_check_results.setter
    def automated_check_results(self, automated_check_results: List[str]):
        """Sets the automated_check_results of this MergeRequest.


        :param automated_check_results: The automated_check_results of this MergeRequest.
        :type automated_check_results: List[str]
        """

        self._automated_check_results = automated_check_results

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this MergeRequest.


        :return: The created_at of this MergeRequest.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this MergeRequest.


        :param created_at: The created_at of this MergeRequest.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this MergeRequest.


        :return: The updated_at of this MergeRequest.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this MergeRequest.


        :param updated_at: The updated_at of this MergeRequest.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
