from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class NegotiationRound(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, history_id=None, round_number=None, proposer_id=None, proposal_content=None, response_content=None, status=None, created_at=None):  # noqa: E501
        """NegotiationRound - a model defined in OpenAPI

        :param id: The id of this NegotiationRound.  # noqa: E501
        :type id: str
        :param history_id: The history_id of this NegotiationRound.  # noqa: E501
        :type history_id: str
        :param round_number: The round_number of this NegotiationRound.  # noqa: E501
        :type round_number: int
        :param proposer_id: The proposer_id of this NegotiationRound.  # noqa: E501
        :type proposer_id: str
        :param proposal_content: The proposal_content of this NegotiationRound.  # noqa: E501
        :type proposal_content: str
        :param response_content: The response_content of this NegotiationRound.  # noqa: E501
        :type response_content: str
        :param status: The status of this NegotiationRound.  # noqa: E501
        :type status: str
        :param created_at: The created_at of this NegotiationRound.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'history_id': str,
            'round_number': int,
            'proposer_id': str,
            'proposal_content': str,
            'response_content': str,
            'status': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'history_id': 'historyId',
            'round_number': 'roundNumber',
            'proposer_id': 'proposerId',
            'proposal_content': 'proposalContent',
            'response_content': 'responseContent',
            'status': 'status',
            'created_at': 'createdAt'
        }

        self._id = id
        self._history_id = history_id
        self._round_number = round_number
        self._proposer_id = proposer_id
        self._proposal_content = proposal_content
        self._response_content = response_content
        self._status = status
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'NegotiationRound':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NegotiationRound of this NegotiationRound.  # noqa: E501
        :rtype: NegotiationRound
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this NegotiationRound.


        :return: The id of this NegotiationRound.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this NegotiationRound.


        :param id: The id of this NegotiationRound.
        :type id: str
        """

        self._id = id

    @property
    def history_id(self) -> str:
        """Gets the history_id of this NegotiationRound.


        :return: The history_id of this NegotiationRound.
        :rtype: str
        """
        return self._history_id

    @history_id.setter
    def history_id(self, history_id: str):
        """Sets the history_id of this NegotiationRound.


        :param history_id: The history_id of this NegotiationRound.
        :type history_id: str
        """

        self._history_id = history_id

    @property
    def round_number(self) -> int:
        """Gets the round_number of this NegotiationRound.


        :return: The round_number of this NegotiationRound.
        :rtype: int
        """
        return self._round_number

    @round_number.setter
    def round_number(self, round_number: int):
        """Sets the round_number of this NegotiationRound.


        :param round_number: The round_number of this NegotiationRound.
        :type round_number: int
        """

        self._round_number = round_number

    @property
    def proposer_id(self) -> str:
        """Gets the proposer_id of this NegotiationRound.


        :return: The proposer_id of this NegotiationRound.
        :rtype: str
        """
        return self._proposer_id

    @proposer_id.setter
    def proposer_id(self, proposer_id: str):
        """Sets the proposer_id of this NegotiationRound.


        :param proposer_id: The proposer_id of this NegotiationRound.
        :type proposer_id: str
        """

        self._proposer_id = proposer_id

    @property
    def proposal_content(self) -> str:
        """Gets the proposal_content of this NegotiationRound.


        :return: The proposal_content of this NegotiationRound.
        :rtype: str
        """
        return self._proposal_content

    @proposal_content.setter
    def proposal_content(self, proposal_content: str):
        """Sets the proposal_content of this NegotiationRound.


        :param proposal_content: The proposal_content of this NegotiationRound.
        :type proposal_content: str
        """

        self._proposal_content = proposal_content

    @property
    def response_content(self) -> str:
        """Gets the response_content of this NegotiationRound.


        :return: The response_content of this NegotiationRound.
        :rtype: str
        """
        return self._response_content

    @response_content.setter
    def response_content(self, response_content: str):
        """Sets the response_content of this NegotiationRound.


        :param response_content: The response_content of this NegotiationRound.
        :type response_content: str
        """

        self._response_content = response_content

    @property
    def status(self) -> str:
        """Gets the status of this NegotiationRound.


        :return: The status of this NegotiationRound.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this NegotiationRound.


        :param status: The status of this NegotiationRound.
        :type status: str
        """

        self._status = status

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this NegotiationRound.


        :return: The created_at of this NegotiationRound.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this NegotiationRound.


        :param created_at: The created_at of this NegotiationRound.
        :type created_at: datetime
        """

        self._created_at = created_at
