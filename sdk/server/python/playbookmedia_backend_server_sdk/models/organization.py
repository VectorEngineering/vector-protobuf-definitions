from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.billing_plan import BillingPlan
from playbookmedia_backend_server_sdk.models.organization_status import OrganizationStatus
from playbookmedia_backend_server_sdk.models.subscription import Subscription
from playbookmedia_backend_server_sdk.models.tenant import Tenant
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.billing_plan import BillingPlan  # noqa: E501
from playbookmedia_backend_server_sdk.models.organization_status import OrganizationStatus  # noqa: E501
from playbookmedia_backend_server_sdk.models.subscription import Subscription  # noqa: E501
from playbookmedia_backend_server_sdk.models.tenant import Tenant  # noqa: E501

class Organization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, display_name=None, website=None, description=None, billing_email=None, technical_email=None, phone=None, address=None, sso_enabled=None, sso_provider=None, sso_domain=None, allowed_domains=None, enforce2fa=None, billing_plan=BillingPlan.UNSPECIFIED, billing_currency=None, auto_billing=None, tax_id=None, compliance_frameworks=None, data_processing_agreement=None, data_region=None, max_tenants=None, total_storage_limit=None, max_api_keys=None, max_users=None, tenants=None, subscriptions=None, created_at=None, updated_at=None, deleted_at=None, created_by=None, status=OrganizationStatus.UNSPECIFIED):  # noqa: E501
        """Organization - a model defined in OpenAPI

        :param id: The id of this Organization.  # noqa: E501
        :type id: str
        :param name: The name of this Organization.  # noqa: E501
        :type name: str
        :param display_name: The display_name of this Organization.  # noqa: E501
        :type display_name: str
        :param website: The website of this Organization.  # noqa: E501
        :type website: str
        :param description: The description of this Organization.  # noqa: E501
        :type description: str
        :param billing_email: The billing_email of this Organization.  # noqa: E501
        :type billing_email: str
        :param technical_email: The technical_email of this Organization.  # noqa: E501
        :type technical_email: str
        :param phone: The phone of this Organization.  # noqa: E501
        :type phone: str
        :param address: The address of this Organization.  # noqa: E501
        :type address: str
        :param sso_enabled: The sso_enabled of this Organization.  # noqa: E501
        :type sso_enabled: bool
        :param sso_provider: The sso_provider of this Organization.  # noqa: E501
        :type sso_provider: str
        :param sso_domain: The sso_domain of this Organization.  # noqa: E501
        :type sso_domain: str
        :param allowed_domains: The allowed_domains of this Organization.  # noqa: E501
        :type allowed_domains: List[str]
        :param enforce2fa: The enforce2fa of this Organization.  # noqa: E501
        :type enforce2fa: bool
        :param billing_plan: The billing_plan of this Organization.  # noqa: E501
        :type billing_plan: BillingPlan
        :param billing_currency: The billing_currency of this Organization.  # noqa: E501
        :type billing_currency: str
        :param auto_billing: The auto_billing of this Organization.  # noqa: E501
        :type auto_billing: bool
        :param tax_id: The tax_id of this Organization.  # noqa: E501
        :type tax_id: str
        :param compliance_frameworks: The compliance_frameworks of this Organization.  # noqa: E501
        :type compliance_frameworks: List[str]
        :param data_processing_agreement: The data_processing_agreement of this Organization.  # noqa: E501
        :type data_processing_agreement: bool
        :param data_region: The data_region of this Organization.  # noqa: E501
        :type data_region: str
        :param max_tenants: The max_tenants of this Organization.  # noqa: E501
        :type max_tenants: int
        :param total_storage_limit: The total_storage_limit of this Organization.  # noqa: E501
        :type total_storage_limit: str
        :param max_api_keys: The max_api_keys of this Organization.  # noqa: E501
        :type max_api_keys: int
        :param max_users: The max_users of this Organization.  # noqa: E501
        :type max_users: int
        :param tenants: The tenants of this Organization.  # noqa: E501
        :type tenants: List[Tenant]
        :param subscriptions: The subscriptions of this Organization.  # noqa: E501
        :type subscriptions: Subscription
        :param created_at: The created_at of this Organization.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this Organization.  # noqa: E501
        :type updated_at: datetime
        :param deleted_at: The deleted_at of this Organization.  # noqa: E501
        :type deleted_at: datetime
        :param created_by: The created_by of this Organization.  # noqa: E501
        :type created_by: str
        :param status: The status of this Organization.  # noqa: E501
        :type status: OrganizationStatus
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'display_name': str,
            'website': str,
            'description': str,
            'billing_email': str,
            'technical_email': str,
            'phone': str,
            'address': str,
            'sso_enabled': bool,
            'sso_provider': str,
            'sso_domain': str,
            'allowed_domains': List[str],
            'enforce2fa': bool,
            'billing_plan': BillingPlan,
            'billing_currency': str,
            'auto_billing': bool,
            'tax_id': str,
            'compliance_frameworks': List[str],
            'data_processing_agreement': bool,
            'data_region': str,
            'max_tenants': int,
            'total_storage_limit': str,
            'max_api_keys': int,
            'max_users': int,
            'tenants': List[Tenant],
            'subscriptions': Subscription,
            'created_at': datetime,
            'updated_at': datetime,
            'deleted_at': datetime,
            'created_by': str,
            'status': OrganizationStatus
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'display_name': 'displayName',
            'website': 'website',
            'description': 'description',
            'billing_email': 'billingEmail',
            'technical_email': 'technicalEmail',
            'phone': 'phone',
            'address': 'address',
            'sso_enabled': 'ssoEnabled',
            'sso_provider': 'ssoProvider',
            'sso_domain': 'ssoDomain',
            'allowed_domains': 'allowedDomains',
            'enforce2fa': 'enforce2fa',
            'billing_plan': 'billingPlan',
            'billing_currency': 'billingCurrency',
            'auto_billing': 'autoBilling',
            'tax_id': 'taxId',
            'compliance_frameworks': 'complianceFrameworks',
            'data_processing_agreement': 'dataProcessingAgreement',
            'data_region': 'dataRegion',
            'max_tenants': 'maxTenants',
            'total_storage_limit': 'totalStorageLimit',
            'max_api_keys': 'maxApiKeys',
            'max_users': 'maxUsers',
            'tenants': 'tenants',
            'subscriptions': 'subscriptions',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'deleted_at': 'deletedAt',
            'created_by': 'createdBy',
            'status': 'status'
        }

        self._id = id
        self._name = name
        self._display_name = display_name
        self._website = website
        self._description = description
        self._billing_email = billing_email
        self._technical_email = technical_email
        self._phone = phone
        self._address = address
        self._sso_enabled = sso_enabled
        self._sso_provider = sso_provider
        self._sso_domain = sso_domain
        self._allowed_domains = allowed_domains
        self._enforce2fa = enforce2fa
        self._billing_plan = billing_plan
        self._billing_currency = billing_currency
        self._auto_billing = auto_billing
        self._tax_id = tax_id
        self._compliance_frameworks = compliance_frameworks
        self._data_processing_agreement = data_processing_agreement
        self._data_region = data_region
        self._max_tenants = max_tenants
        self._total_storage_limit = total_storage_limit
        self._max_api_keys = max_api_keys
        self._max_users = max_users
        self._tenants = tenants
        self._subscriptions = subscriptions
        self._created_at = created_at
        self._updated_at = updated_at
        self._deleted_at = deleted_at
        self._created_by = created_by
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Organization':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Organization of this Organization.  # noqa: E501
        :rtype: Organization
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Organization.


        :return: The id of this Organization.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Organization.


        :param id: The id of this Organization.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Organization.


        :return: The name of this Organization.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Organization.


        :param name: The name of this Organization.
        :type name: str
        """

        self._name = name

    @property
    def display_name(self) -> str:
        """Gets the display_name of this Organization.


        :return: The display_name of this Organization.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this Organization.


        :param display_name: The display_name of this Organization.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def website(self) -> str:
        """Gets the website of this Organization.


        :return: The website of this Organization.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website: str):
        """Sets the website of this Organization.


        :param website: The website of this Organization.
        :type website: str
        """

        self._website = website

    @property
    def description(self) -> str:
        """Gets the description of this Organization.


        :return: The description of this Organization.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Organization.


        :param description: The description of this Organization.
        :type description: str
        """

        self._description = description

    @property
    def billing_email(self) -> str:
        """Gets the billing_email of this Organization.


        :return: The billing_email of this Organization.
        :rtype: str
        """
        return self._billing_email

    @billing_email.setter
    def billing_email(self, billing_email: str):
        """Sets the billing_email of this Organization.


        :param billing_email: The billing_email of this Organization.
        :type billing_email: str
        """

        self._billing_email = billing_email

    @property
    def technical_email(self) -> str:
        """Gets the technical_email of this Organization.


        :return: The technical_email of this Organization.
        :rtype: str
        """
        return self._technical_email

    @technical_email.setter
    def technical_email(self, technical_email: str):
        """Sets the technical_email of this Organization.


        :param technical_email: The technical_email of this Organization.
        :type technical_email: str
        """

        self._technical_email = technical_email

    @property
    def phone(self) -> str:
        """Gets the phone of this Organization.


        :return: The phone of this Organization.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this Organization.


        :param phone: The phone of this Organization.
        :type phone: str
        """

        self._phone = phone

    @property
    def address(self) -> str:
        """Gets the address of this Organization.


        :return: The address of this Organization.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Organization.


        :param address: The address of this Organization.
        :type address: str
        """

        self._address = address

    @property
    def sso_enabled(self) -> bool:
        """Gets the sso_enabled of this Organization.


        :return: The sso_enabled of this Organization.
        :rtype: bool
        """
        return self._sso_enabled

    @sso_enabled.setter
    def sso_enabled(self, sso_enabled: bool):
        """Sets the sso_enabled of this Organization.


        :param sso_enabled: The sso_enabled of this Organization.
        :type sso_enabled: bool
        """

        self._sso_enabled = sso_enabled

    @property
    def sso_provider(self) -> str:
        """Gets the sso_provider of this Organization.


        :return: The sso_provider of this Organization.
        :rtype: str
        """
        return self._sso_provider

    @sso_provider.setter
    def sso_provider(self, sso_provider: str):
        """Sets the sso_provider of this Organization.


        :param sso_provider: The sso_provider of this Organization.
        :type sso_provider: str
        """

        self._sso_provider = sso_provider

    @property
    def sso_domain(self) -> str:
        """Gets the sso_domain of this Organization.


        :return: The sso_domain of this Organization.
        :rtype: str
        """
        return self._sso_domain

    @sso_domain.setter
    def sso_domain(self, sso_domain: str):
        """Sets the sso_domain of this Organization.


        :param sso_domain: The sso_domain of this Organization.
        :type sso_domain: str
        """

        self._sso_domain = sso_domain

    @property
    def allowed_domains(self) -> List[str]:
        """Gets the allowed_domains of this Organization.


        :return: The allowed_domains of this Organization.
        :rtype: List[str]
        """
        return self._allowed_domains

    @allowed_domains.setter
    def allowed_domains(self, allowed_domains: List[str]):
        """Sets the allowed_domains of this Organization.


        :param allowed_domains: The allowed_domains of this Organization.
        :type allowed_domains: List[str]
        """

        self._allowed_domains = allowed_domains

    @property
    def enforce2fa(self) -> bool:
        """Gets the enforce2fa of this Organization.


        :return: The enforce2fa of this Organization.
        :rtype: bool
        """
        return self._enforce2fa

    @enforce2fa.setter
    def enforce2fa(self, enforce2fa: bool):
        """Sets the enforce2fa of this Organization.


        :param enforce2fa: The enforce2fa of this Organization.
        :type enforce2fa: bool
        """

        self._enforce2fa = enforce2fa

    @property
    def billing_plan(self) -> BillingPlan:
        """Gets the billing_plan of this Organization.


        :return: The billing_plan of this Organization.
        :rtype: BillingPlan
        """
        return self._billing_plan

    @billing_plan.setter
    def billing_plan(self, billing_plan: BillingPlan):
        """Sets the billing_plan of this Organization.


        :param billing_plan: The billing_plan of this Organization.
        :type billing_plan: BillingPlan
        """

        self._billing_plan = billing_plan

    @property
    def billing_currency(self) -> str:
        """Gets the billing_currency of this Organization.


        :return: The billing_currency of this Organization.
        :rtype: str
        """
        return self._billing_currency

    @billing_currency.setter
    def billing_currency(self, billing_currency: str):
        """Sets the billing_currency of this Organization.


        :param billing_currency: The billing_currency of this Organization.
        :type billing_currency: str
        """

        self._billing_currency = billing_currency

    @property
    def auto_billing(self) -> bool:
        """Gets the auto_billing of this Organization.


        :return: The auto_billing of this Organization.
        :rtype: bool
        """
        return self._auto_billing

    @auto_billing.setter
    def auto_billing(self, auto_billing: bool):
        """Sets the auto_billing of this Organization.


        :param auto_billing: The auto_billing of this Organization.
        :type auto_billing: bool
        """

        self._auto_billing = auto_billing

    @property
    def tax_id(self) -> str:
        """Gets the tax_id of this Organization.


        :return: The tax_id of this Organization.
        :rtype: str
        """
        return self._tax_id

    @tax_id.setter
    def tax_id(self, tax_id: str):
        """Sets the tax_id of this Organization.


        :param tax_id: The tax_id of this Organization.
        :type tax_id: str
        """

        self._tax_id = tax_id

    @property
    def compliance_frameworks(self) -> List[str]:
        """Gets the compliance_frameworks of this Organization.

        SOC2, GDPR, etc  # noqa: E501

        :return: The compliance_frameworks of this Organization.
        :rtype: List[str]
        """
        return self._compliance_frameworks

    @compliance_frameworks.setter
    def compliance_frameworks(self, compliance_frameworks: List[str]):
        """Sets the compliance_frameworks of this Organization.

        SOC2, GDPR, etc  # noqa: E501

        :param compliance_frameworks: The compliance_frameworks of this Organization.
        :type compliance_frameworks: List[str]
        """

        self._compliance_frameworks = compliance_frameworks

    @property
    def data_processing_agreement(self) -> bool:
        """Gets the data_processing_agreement of this Organization.


        :return: The data_processing_agreement of this Organization.
        :rtype: bool
        """
        return self._data_processing_agreement

    @data_processing_agreement.setter
    def data_processing_agreement(self, data_processing_agreement: bool):
        """Sets the data_processing_agreement of this Organization.


        :param data_processing_agreement: The data_processing_agreement of this Organization.
        :type data_processing_agreement: bool
        """

        self._data_processing_agreement = data_processing_agreement

    @property
    def data_region(self) -> str:
        """Gets the data_region of this Organization.


        :return: The data_region of this Organization.
        :rtype: str
        """
        return self._data_region

    @data_region.setter
    def data_region(self, data_region: str):
        """Sets the data_region of this Organization.


        :param data_region: The data_region of this Organization.
        :type data_region: str
        """

        self._data_region = data_region

    @property
    def max_tenants(self) -> int:
        """Gets the max_tenants of this Organization.


        :return: The max_tenants of this Organization.
        :rtype: int
        """
        return self._max_tenants

    @max_tenants.setter
    def max_tenants(self, max_tenants: int):
        """Sets the max_tenants of this Organization.


        :param max_tenants: The max_tenants of this Organization.
        :type max_tenants: int
        """

        self._max_tenants = max_tenants

    @property
    def total_storage_limit(self) -> str:
        """Gets the total_storage_limit of this Organization.


        :return: The total_storage_limit of this Organization.
        :rtype: str
        """
        return self._total_storage_limit

    @total_storage_limit.setter
    def total_storage_limit(self, total_storage_limit: str):
        """Sets the total_storage_limit of this Organization.


        :param total_storage_limit: The total_storage_limit of this Organization.
        :type total_storage_limit: str
        """

        self._total_storage_limit = total_storage_limit

    @property
    def max_api_keys(self) -> int:
        """Gets the max_api_keys of this Organization.


        :return: The max_api_keys of this Organization.
        :rtype: int
        """
        return self._max_api_keys

    @max_api_keys.setter
    def max_api_keys(self, max_api_keys: int):
        """Sets the max_api_keys of this Organization.


        :param max_api_keys: The max_api_keys of this Organization.
        :type max_api_keys: int
        """

        self._max_api_keys = max_api_keys

    @property
    def max_users(self) -> int:
        """Gets the max_users of this Organization.


        :return: The max_users of this Organization.
        :rtype: int
        """
        return self._max_users

    @max_users.setter
    def max_users(self, max_users: int):
        """Sets the max_users of this Organization.


        :param max_users: The max_users of this Organization.
        :type max_users: int
        """

        self._max_users = max_users

    @property
    def tenants(self) -> List[Tenant]:
        """Gets the tenants of this Organization.


        :return: The tenants of this Organization.
        :rtype: List[Tenant]
        """
        return self._tenants

    @tenants.setter
    def tenants(self, tenants: List[Tenant]):
        """Sets the tenants of this Organization.


        :param tenants: The tenants of this Organization.
        :type tenants: List[Tenant]
        """

        self._tenants = tenants

    @property
    def subscriptions(self) -> Subscription:
        """Gets the subscriptions of this Organization.


        :return: The subscriptions of this Organization.
        :rtype: Subscription
        """
        return self._subscriptions

    @subscriptions.setter
    def subscriptions(self, subscriptions: Subscription):
        """Sets the subscriptions of this Organization.


        :param subscriptions: The subscriptions of this Organization.
        :type subscriptions: Subscription
        """

        self._subscriptions = subscriptions

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this Organization.


        :return: The created_at of this Organization.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this Organization.


        :param created_at: The created_at of this Organization.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this Organization.


        :return: The updated_at of this Organization.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this Organization.


        :param updated_at: The updated_at of this Organization.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def deleted_at(self) -> datetime:
        """Gets the deleted_at of this Organization.


        :return: The deleted_at of this Organization.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at: datetime):
        """Sets the deleted_at of this Organization.


        :param deleted_at: The deleted_at of this Organization.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at

    @property
    def created_by(self) -> str:
        """Gets the created_by of this Organization.


        :return: The created_by of this Organization.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: str):
        """Sets the created_by of this Organization.


        :param created_by: The created_by of this Organization.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def status(self) -> OrganizationStatus:
        """Gets the status of this Organization.


        :return: The status of this Organization.
        :rtype: OrganizationStatus
        """
        return self._status

    @status.setter
    def status(self, status: OrganizationStatus):
        """Sets the status of this Organization.


        :param status: The status of this Organization.
        :type status: OrganizationStatus
        """

        self._status = status
