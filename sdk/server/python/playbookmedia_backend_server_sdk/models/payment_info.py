from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class PaymentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_due=None, currency=None, due_date=None, payment_url=None):  # noqa: E501
        """PaymentInfo - a model defined in OpenAPI

        :param amount_due: The amount_due of this PaymentInfo.  # noqa: E501
        :type amount_due: float
        :param currency: The currency of this PaymentInfo.  # noqa: E501
        :type currency: str
        :param due_date: The due_date of this PaymentInfo.  # noqa: E501
        :type due_date: datetime
        :param payment_url: The payment_url of this PaymentInfo.  # noqa: E501
        :type payment_url: str
        """
        self.openapi_types = {
            'amount_due': float,
            'currency': str,
            'due_date': datetime,
            'payment_url': str
        }

        self.attribute_map = {
            'amount_due': 'amountDue',
            'currency': 'currency',
            'due_date': 'dueDate',
            'payment_url': 'paymentUrl'
        }

        self._amount_due = amount_due
        self._currency = currency
        self._due_date = due_date
        self._payment_url = payment_url

    @classmethod
    def from_dict(cls, dikt) -> 'PaymentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaymentInfo of this PaymentInfo.  # noqa: E501
        :rtype: PaymentInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_due(self) -> float:
        """Gets the amount_due of this PaymentInfo.


        :return: The amount_due of this PaymentInfo.
        :rtype: float
        """
        return self._amount_due

    @amount_due.setter
    def amount_due(self, amount_due: float):
        """Sets the amount_due of this PaymentInfo.


        :param amount_due: The amount_due of this PaymentInfo.
        :type amount_due: float
        """

        self._amount_due = amount_due

    @property
    def currency(self) -> str:
        """Gets the currency of this PaymentInfo.


        :return: The currency of this PaymentInfo.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this PaymentInfo.


        :param currency: The currency of this PaymentInfo.
        :type currency: str
        """

        self._currency = currency

    @property
    def due_date(self) -> datetime:
        """Gets the due_date of this PaymentInfo.


        :return: The due_date of this PaymentInfo.
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date: datetime):
        """Sets the due_date of this PaymentInfo.


        :param due_date: The due_date of this PaymentInfo.
        :type due_date: datetime
        """

        self._due_date = due_date

    @property
    def payment_url(self) -> str:
        """Gets the payment_url of this PaymentInfo.


        :return: The payment_url of this PaymentInfo.
        :rtype: str
        """
        return self._payment_url

    @payment_url.setter
    def payment_url(self, payment_url: str):
        """Sets the payment_url of this PaymentInfo.


        :param payment_url: The payment_url of this PaymentInfo.
        :type payment_url: str
        """

        self._payment_url = payment_url
