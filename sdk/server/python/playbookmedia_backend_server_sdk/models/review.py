from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class Review(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, author=None, rating=None, text=None, time=None, language=None, profile_photo_url=None, review_count=None):  # noqa: E501
        """Review - a model defined in OpenAPI

        :param id: The id of this Review.  # noqa: E501
        :type id: str
        :param author: The author of this Review.  # noqa: E501
        :type author: str
        :param rating: The rating of this Review.  # noqa: E501
        :type rating: float
        :param text: The text of this Review.  # noqa: E501
        :type text: str
        :param time: The time of this Review.  # noqa: E501
        :type time: datetime
        :param language: The language of this Review.  # noqa: E501
        :type language: str
        :param profile_photo_url: The profile_photo_url of this Review.  # noqa: E501
        :type profile_photo_url: str
        :param review_count: The review_count of this Review.  # noqa: E501
        :type review_count: int
        """
        self.openapi_types = {
            'id': str,
            'author': str,
            'rating': float,
            'text': str,
            'time': datetime,
            'language': str,
            'profile_photo_url': str,
            'review_count': int
        }

        self.attribute_map = {
            'id': 'id',
            'author': 'author',
            'rating': 'rating',
            'text': 'text',
            'time': 'time',
            'language': 'language',
            'profile_photo_url': 'profilePhotoUrl',
            'review_count': 'reviewCount'
        }

        self._id = id
        self._author = author
        self._rating = rating
        self._text = text
        self._time = time
        self._language = language
        self._profile_photo_url = profile_photo_url
        self._review_count = review_count

    @classmethod
    def from_dict(cls, dikt) -> 'Review':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Review of this Review.  # noqa: E501
        :rtype: Review
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Review.


        :return: The id of this Review.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Review.


        :param id: The id of this Review.
        :type id: str
        """

        self._id = id

    @property
    def author(self) -> str:
        """Gets the author of this Review.


        :return: The author of this Review.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this Review.


        :param author: The author of this Review.
        :type author: str
        """

        self._author = author

    @property
    def rating(self) -> float:
        """Gets the rating of this Review.


        :return: The rating of this Review.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this Review.


        :param rating: The rating of this Review.
        :type rating: float
        """

        self._rating = rating

    @property
    def text(self) -> str:
        """Gets the text of this Review.


        :return: The text of this Review.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Review.


        :param text: The text of this Review.
        :type text: str
        """

        self._text = text

    @property
    def time(self) -> datetime:
        """Gets the time of this Review.


        :return: The time of this Review.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this Review.


        :param time: The time of this Review.
        :type time: datetime
        """

        self._time = time

    @property
    def language(self) -> str:
        """Gets the language of this Review.


        :return: The language of this Review.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language: str):
        """Sets the language of this Review.


        :param language: The language of this Review.
        :type language: str
        """

        self._language = language

    @property
    def profile_photo_url(self) -> str:
        """Gets the profile_photo_url of this Review.


        :return: The profile_photo_url of this Review.
        :rtype: str
        """
        return self._profile_photo_url

    @profile_photo_url.setter
    def profile_photo_url(self, profile_photo_url: str):
        """Sets the profile_photo_url of this Review.


        :param profile_photo_url: The profile_photo_url of this Review.
        :type profile_photo_url: str
        """

        self._profile_photo_url = profile_photo_url

    @property
    def review_count(self) -> int:
        """Gets the review_count of this Review.


        :return: The review_count of this Review.
        :rtype: int
        """
        return self._review_count

    @review_count.setter
    def review_count(self, review_count: int):
        """Sets the review_count of this Review.


        :param review_count: The review_count of this Review.
        :type review_count: int
        """

        self._review_count = review_count
