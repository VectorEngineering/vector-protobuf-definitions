from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class RiskAssessment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, intelligence_id=None, risk_type=None, risk_score=None, assessment_details=None, mitigation_suggestions=None, assessor_id=None, created_at=None):  # noqa: E501
        """RiskAssessment - a model defined in OpenAPI

        :param id: The id of this RiskAssessment.  # noqa: E501
        :type id: str
        :param intelligence_id: The intelligence_id of this RiskAssessment.  # noqa: E501
        :type intelligence_id: str
        :param risk_type: The risk_type of this RiskAssessment.  # noqa: E501
        :type risk_type: str
        :param risk_score: The risk_score of this RiskAssessment.  # noqa: E501
        :type risk_score: float
        :param assessment_details: The assessment_details of this RiskAssessment.  # noqa: E501
        :type assessment_details: str
        :param mitigation_suggestions: The mitigation_suggestions of this RiskAssessment.  # noqa: E501
        :type mitigation_suggestions: List[str]
        :param assessor_id: The assessor_id of this RiskAssessment.  # noqa: E501
        :type assessor_id: str
        :param created_at: The created_at of this RiskAssessment.  # noqa: E501
        :type created_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'intelligence_id': str,
            'risk_type': str,
            'risk_score': float,
            'assessment_details': str,
            'mitigation_suggestions': List[str],
            'assessor_id': str,
            'created_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'intelligence_id': 'intelligenceId',
            'risk_type': 'riskType',
            'risk_score': 'riskScore',
            'assessment_details': 'assessmentDetails',
            'mitigation_suggestions': 'mitigationSuggestions',
            'assessor_id': 'assessorId',
            'created_at': 'createdAt'
        }

        self._id = id
        self._intelligence_id = intelligence_id
        self._risk_type = risk_type
        self._risk_score = risk_score
        self._assessment_details = assessment_details
        self._mitigation_suggestions = mitigation_suggestions
        self._assessor_id = assessor_id
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'RiskAssessment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RiskAssessment of this RiskAssessment.  # noqa: E501
        :rtype: RiskAssessment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this RiskAssessment.


        :return: The id of this RiskAssessment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this RiskAssessment.


        :param id: The id of this RiskAssessment.
        :type id: str
        """

        self._id = id

    @property
    def intelligence_id(self) -> str:
        """Gets the intelligence_id of this RiskAssessment.


        :return: The intelligence_id of this RiskAssessment.
        :rtype: str
        """
        return self._intelligence_id

    @intelligence_id.setter
    def intelligence_id(self, intelligence_id: str):
        """Sets the intelligence_id of this RiskAssessment.


        :param intelligence_id: The intelligence_id of this RiskAssessment.
        :type intelligence_id: str
        """

        self._intelligence_id = intelligence_id

    @property
    def risk_type(self) -> str:
        """Gets the risk_type of this RiskAssessment.


        :return: The risk_type of this RiskAssessment.
        :rtype: str
        """
        return self._risk_type

    @risk_type.setter
    def risk_type(self, risk_type: str):
        """Sets the risk_type of this RiskAssessment.


        :param risk_type: The risk_type of this RiskAssessment.
        :type risk_type: str
        """

        self._risk_type = risk_type

    @property
    def risk_score(self) -> float:
        """Gets the risk_score of this RiskAssessment.


        :return: The risk_score of this RiskAssessment.
        :rtype: float
        """
        return self._risk_score

    @risk_score.setter
    def risk_score(self, risk_score: float):
        """Sets the risk_score of this RiskAssessment.


        :param risk_score: The risk_score of this RiskAssessment.
        :type risk_score: float
        """

        self._risk_score = risk_score

    @property
    def assessment_details(self) -> str:
        """Gets the assessment_details of this RiskAssessment.


        :return: The assessment_details of this RiskAssessment.
        :rtype: str
        """
        return self._assessment_details

    @assessment_details.setter
    def assessment_details(self, assessment_details: str):
        """Sets the assessment_details of this RiskAssessment.


        :param assessment_details: The assessment_details of this RiskAssessment.
        :type assessment_details: str
        """

        self._assessment_details = assessment_details

    @property
    def mitigation_suggestions(self) -> List[str]:
        """Gets the mitigation_suggestions of this RiskAssessment.


        :return: The mitigation_suggestions of this RiskAssessment.
        :rtype: List[str]
        """
        return self._mitigation_suggestions

    @mitigation_suggestions.setter
    def mitigation_suggestions(self, mitigation_suggestions: List[str]):
        """Sets the mitigation_suggestions of this RiskAssessment.


        :param mitigation_suggestions: The mitigation_suggestions of this RiskAssessment.
        :type mitigation_suggestions: List[str]
        """

        self._mitigation_suggestions = mitigation_suggestions

    @property
    def assessor_id(self) -> str:
        """Gets the assessor_id of this RiskAssessment.


        :return: The assessor_id of this RiskAssessment.
        :rtype: str
        """
        return self._assessor_id

    @assessor_id.setter
    def assessor_id(self, assessor_id: str):
        """Sets the assessor_id of this RiskAssessment.


        :param assessor_id: The assessor_id of this RiskAssessment.
        :type assessor_id: str
        """

        self._assessor_id = assessor_id

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this RiskAssessment.


        :return: The created_at of this RiskAssessment.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this RiskAssessment.


        :param created_at: The created_at of this RiskAssessment.
        :type created_at: datetime
        """

        self._created_at = created_at
