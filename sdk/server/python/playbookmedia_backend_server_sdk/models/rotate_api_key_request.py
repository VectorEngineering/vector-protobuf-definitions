from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class RotateAPIKeyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization_id=None, tenant_id=None, account_id=None, workspace_id=None, key_id=None):  # noqa: E501
        """RotateAPIKeyRequest - a model defined in OpenAPI

        :param organization_id: The organization_id of this RotateAPIKeyRequest.  # noqa: E501
        :type organization_id: str
        :param tenant_id: The tenant_id of this RotateAPIKeyRequest.  # noqa: E501
        :type tenant_id: str
        :param account_id: The account_id of this RotateAPIKeyRequest.  # noqa: E501
        :type account_id: str
        :param workspace_id: The workspace_id of this RotateAPIKeyRequest.  # noqa: E501
        :type workspace_id: str
        :param key_id: The key_id of this RotateAPIKeyRequest.  # noqa: E501
        :type key_id: str
        """
        self.openapi_types = {
            'organization_id': str,
            'tenant_id': str,
            'account_id': str,
            'workspace_id': str,
            'key_id': str
        }

        self.attribute_map = {
            'organization_id': 'organizationId',
            'tenant_id': 'tenantId',
            'account_id': 'accountId',
            'workspace_id': 'workspaceId',
            'key_id': 'keyId'
        }

        self._organization_id = organization_id
        self._tenant_id = tenant_id
        self._account_id = account_id
        self._workspace_id = workspace_id
        self._key_id = key_id

    @classmethod
    def from_dict(cls, dikt) -> 'RotateAPIKeyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RotateAPIKeyRequest of this RotateAPIKeyRequest.  # noqa: E501
        :rtype: RotateAPIKeyRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization_id(self) -> str:
        """Gets the organization_id of this RotateAPIKeyRequest.


        :return: The organization_id of this RotateAPIKeyRequest.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id: str):
        """Sets the organization_id of this RotateAPIKeyRequest.


        :param organization_id: The organization_id of this RotateAPIKeyRequest.
        :type organization_id: str
        """

        self._organization_id = organization_id

    @property
    def tenant_id(self) -> str:
        """Gets the tenant_id of this RotateAPIKeyRequest.


        :return: The tenant_id of this RotateAPIKeyRequest.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id: str):
        """Sets the tenant_id of this RotateAPIKeyRequest.


        :param tenant_id: The tenant_id of this RotateAPIKeyRequest.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def account_id(self) -> str:
        """Gets the account_id of this RotateAPIKeyRequest.


        :return: The account_id of this RotateAPIKeyRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id: str):
        """Sets the account_id of this RotateAPIKeyRequest.


        :param account_id: The account_id of this RotateAPIKeyRequest.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this RotateAPIKeyRequest.


        :return: The workspace_id of this RotateAPIKeyRequest.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this RotateAPIKeyRequest.


        :param workspace_id: The workspace_id of this RotateAPIKeyRequest.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def key_id(self) -> str:
        """Gets the key_id of this RotateAPIKeyRequest.


        :return: The key_id of this RotateAPIKeyRequest.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id: str):
        """Sets the key_id of this RotateAPIKeyRequest.


        :param key_id: The key_id of this RotateAPIKeyRequest.
        :type key_id: str
        """

        self._key_id = key_id
