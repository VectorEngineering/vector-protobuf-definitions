from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.api_key import APIKey
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.api_key import APIKey  # noqa: E501

class RotateAPIKeyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_api_key=None, new_key_value=None, old_key_expiry=None):  # noqa: E501
        """RotateAPIKeyResponse - a model defined in OpenAPI

        :param new_api_key: The new_api_key of this RotateAPIKeyResponse.  # noqa: E501
        :type new_api_key: APIKey
        :param new_key_value: The new_key_value of this RotateAPIKeyResponse.  # noqa: E501
        :type new_key_value: str
        :param old_key_expiry: The old_key_expiry of this RotateAPIKeyResponse.  # noqa: E501
        :type old_key_expiry: datetime
        """
        self.openapi_types = {
            'new_api_key': APIKey,
            'new_key_value': str,
            'old_key_expiry': datetime
        }

        self.attribute_map = {
            'new_api_key': 'newApiKey',
            'new_key_value': 'newKeyValue',
            'old_key_expiry': 'oldKeyExpiry'
        }

        self._new_api_key = new_api_key
        self._new_key_value = new_key_value
        self._old_key_expiry = old_key_expiry

    @classmethod
    def from_dict(cls, dikt) -> 'RotateAPIKeyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RotateAPIKeyResponse of this RotateAPIKeyResponse.  # noqa: E501
        :rtype: RotateAPIKeyResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_api_key(self) -> APIKey:
        """Gets the new_api_key of this RotateAPIKeyResponse.


        :return: The new_api_key of this RotateAPIKeyResponse.
        :rtype: APIKey
        """
        return self._new_api_key

    @new_api_key.setter
    def new_api_key(self, new_api_key: APIKey):
        """Sets the new_api_key of this RotateAPIKeyResponse.


        :param new_api_key: The new_api_key of this RotateAPIKeyResponse.
        :type new_api_key: APIKey
        """

        self._new_api_key = new_api_key

    @property
    def new_key_value(self) -> str:
        """Gets the new_key_value of this RotateAPIKeyResponse.


        :return: The new_key_value of this RotateAPIKeyResponse.
        :rtype: str
        """
        return self._new_key_value

    @new_key_value.setter
    def new_key_value(self, new_key_value: str):
        """Sets the new_key_value of this RotateAPIKeyResponse.


        :param new_key_value: The new_key_value of this RotateAPIKeyResponse.
        :type new_key_value: str
        """

        self._new_key_value = new_key_value

    @property
    def old_key_expiry(self) -> datetime:
        """Gets the old_key_expiry of this RotateAPIKeyResponse.


        :return: The old_key_expiry of this RotateAPIKeyResponse.
        :rtype: datetime
        """
        return self._old_key_expiry

    @old_key_expiry.setter
    def old_key_expiry(self, old_key_expiry: datetime):
        """Sets the old_key_expiry of this RotateAPIKeyResponse.


        :param old_key_expiry: The old_key_expiry of this RotateAPIKeyResponse.
        :type old_key_expiry: datetime
        """

        self._old_key_expiry = old_key_expiry
