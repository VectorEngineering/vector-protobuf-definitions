from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.workspace_sharing import WorkspaceSharing
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.workspace_sharing import WorkspaceSharing  # noqa: E501

class ShareWorkspaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sharing=None):  # noqa: E501
        """ShareWorkspaceResponse - a model defined in OpenAPI

        :param sharing: The sharing of this ShareWorkspaceResponse.  # noqa: E501
        :type sharing: WorkspaceSharing
        """
        self.openapi_types = {
            'sharing': WorkspaceSharing
        }

        self.attribute_map = {
            'sharing': 'sharing'
        }

        self._sharing = sharing

    @classmethod
    def from_dict(cls, dikt) -> 'ShareWorkspaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ShareWorkspaceResponse of this ShareWorkspaceResponse.  # noqa: E501
        :rtype: ShareWorkspaceResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sharing(self) -> WorkspaceSharing:
        """Gets the sharing of this ShareWorkspaceResponse.


        :return: The sharing of this ShareWorkspaceResponse.
        :rtype: WorkspaceSharing
        """
        return self._sharing

    @sharing.setter
    def sharing(self, sharing: WorkspaceSharing):
        """Sets the sharing of this ShareWorkspaceResponse.


        :param sharing: The sharing of this ShareWorkspaceResponse.
        :type sharing: WorkspaceSharing
        """

        self._sharing = sharing
