from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.signature_block import SignatureBlock
from playbookmedia_backend_server_sdk.models.signature_status import SignatureStatus
from playbookmedia_backend_server_sdk.models.signature_workflow import SignatureWorkflow
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.signature_block import SignatureBlock  # noqa: E501
from playbookmedia_backend_server_sdk.models.signature_status import SignatureStatus  # noqa: E501
from playbookmedia_backend_server_sdk.models.signature_workflow import SignatureWorkflow  # noqa: E501

class SignatureRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, status=SignatureStatus.UNSPECIFIED, signer_email=None, signer_name=None, role=None, authentication_method=None, expires_at=None, requires_mfa=None, signature_type=None, reminder_schedule=None, document_id=None, signature_blocks=None, workflow=None):  # noqa: E501
        """SignatureRequest - a model defined in OpenAPI

        :param id: The id of this SignatureRequest.  # noqa: E501
        :type id: str
        :param status: The status of this SignatureRequest.  # noqa: E501
        :type status: SignatureStatus
        :param signer_email: The signer_email of this SignatureRequest.  # noqa: E501
        :type signer_email: str
        :param signer_name: The signer_name of this SignatureRequest.  # noqa: E501
        :type signer_name: str
        :param role: The role of this SignatureRequest.  # noqa: E501
        :type role: str
        :param authentication_method: The authentication_method of this SignatureRequest.  # noqa: E501
        :type authentication_method: str
        :param expires_at: The expires_at of this SignatureRequest.  # noqa: E501
        :type expires_at: datetime
        :param requires_mfa: The requires_mfa of this SignatureRequest.  # noqa: E501
        :type requires_mfa: bool
        :param signature_type: The signature_type of this SignatureRequest.  # noqa: E501
        :type signature_type: str
        :param reminder_schedule: The reminder_schedule of this SignatureRequest.  # noqa: E501
        :type reminder_schedule: List[str]
        :param document_id: The document_id of this SignatureRequest.  # noqa: E501
        :type document_id: str
        :param signature_blocks: The signature_blocks of this SignatureRequest.  # noqa: E501
        :type signature_blocks: List[SignatureBlock]
        :param workflow: The workflow of this SignatureRequest.  # noqa: E501
        :type workflow: SignatureWorkflow
        """
        self.openapi_types = {
            'id': str,
            'status': SignatureStatus,
            'signer_email': str,
            'signer_name': str,
            'role': str,
            'authentication_method': str,
            'expires_at': datetime,
            'requires_mfa': bool,
            'signature_type': str,
            'reminder_schedule': List[str],
            'document_id': str,
            'signature_blocks': List[SignatureBlock],
            'workflow': SignatureWorkflow
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'signer_email': 'signerEmail',
            'signer_name': 'signerName',
            'role': 'role',
            'authentication_method': 'authenticationMethod',
            'expires_at': 'expiresAt',
            'requires_mfa': 'requiresMfa',
            'signature_type': 'signatureType',
            'reminder_schedule': 'reminderSchedule',
            'document_id': 'documentId',
            'signature_blocks': 'signatureBlocks',
            'workflow': 'workflow'
        }

        self._id = id
        self._status = status
        self._signer_email = signer_email
        self._signer_name = signer_name
        self._role = role
        self._authentication_method = authentication_method
        self._expires_at = expires_at
        self._requires_mfa = requires_mfa
        self._signature_type = signature_type
        self._reminder_schedule = reminder_schedule
        self._document_id = document_id
        self._signature_blocks = signature_blocks
        self._workflow = workflow

    @classmethod
    def from_dict(cls, dikt) -> 'SignatureRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SignatureRequest of this SignatureRequest.  # noqa: E501
        :rtype: SignatureRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this SignatureRequest.


        :return: The id of this SignatureRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this SignatureRequest.


        :param id: The id of this SignatureRequest.
        :type id: str
        """

        self._id = id

    @property
    def status(self) -> SignatureStatus:
        """Gets the status of this SignatureRequest.


        :return: The status of this SignatureRequest.
        :rtype: SignatureStatus
        """
        return self._status

    @status.setter
    def status(self, status: SignatureStatus):
        """Sets the status of this SignatureRequest.


        :param status: The status of this SignatureRequest.
        :type status: SignatureStatus
        """

        self._status = status

    @property
    def signer_email(self) -> str:
        """Gets the signer_email of this SignatureRequest.


        :return: The signer_email of this SignatureRequest.
        :rtype: str
        """
        return self._signer_email

    @signer_email.setter
    def signer_email(self, signer_email: str):
        """Sets the signer_email of this SignatureRequest.


        :param signer_email: The signer_email of this SignatureRequest.
        :type signer_email: str
        """

        self._signer_email = signer_email

    @property
    def signer_name(self) -> str:
        """Gets the signer_name of this SignatureRequest.


        :return: The signer_name of this SignatureRequest.
        :rtype: str
        """
        return self._signer_name

    @signer_name.setter
    def signer_name(self, signer_name: str):
        """Sets the signer_name of this SignatureRequest.


        :param signer_name: The signer_name of this SignatureRequest.
        :type signer_name: str
        """

        self._signer_name = signer_name

    @property
    def role(self) -> str:
        """Gets the role of this SignatureRequest.


        :return: The role of this SignatureRequest.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this SignatureRequest.


        :param role: The role of this SignatureRequest.
        :type role: str
        """

        self._role = role

    @property
    def authentication_method(self) -> str:
        """Gets the authentication_method of this SignatureRequest.


        :return: The authentication_method of this SignatureRequest.
        :rtype: str
        """
        return self._authentication_method

    @authentication_method.setter
    def authentication_method(self, authentication_method: str):
        """Sets the authentication_method of this SignatureRequest.


        :param authentication_method: The authentication_method of this SignatureRequest.
        :type authentication_method: str
        """

        self._authentication_method = authentication_method

    @property
    def expires_at(self) -> datetime:
        """Gets the expires_at of this SignatureRequest.


        :return: The expires_at of this SignatureRequest.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at: datetime):
        """Sets the expires_at of this SignatureRequest.


        :param expires_at: The expires_at of this SignatureRequest.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def requires_mfa(self) -> bool:
        """Gets the requires_mfa of this SignatureRequest.


        :return: The requires_mfa of this SignatureRequest.
        :rtype: bool
        """
        return self._requires_mfa

    @requires_mfa.setter
    def requires_mfa(self, requires_mfa: bool):
        """Sets the requires_mfa of this SignatureRequest.


        :param requires_mfa: The requires_mfa of this SignatureRequest.
        :type requires_mfa: bool
        """

        self._requires_mfa = requires_mfa

    @property
    def signature_type(self) -> str:
        """Gets the signature_type of this SignatureRequest.


        :return: The signature_type of this SignatureRequest.
        :rtype: str
        """
        return self._signature_type

    @signature_type.setter
    def signature_type(self, signature_type: str):
        """Sets the signature_type of this SignatureRequest.


        :param signature_type: The signature_type of this SignatureRequest.
        :type signature_type: str
        """

        self._signature_type = signature_type

    @property
    def reminder_schedule(self) -> List[str]:
        """Gets the reminder_schedule of this SignatureRequest.


        :return: The reminder_schedule of this SignatureRequest.
        :rtype: List[str]
        """
        return self._reminder_schedule

    @reminder_schedule.setter
    def reminder_schedule(self, reminder_schedule: List[str]):
        """Sets the reminder_schedule of this SignatureRequest.


        :param reminder_schedule: The reminder_schedule of this SignatureRequest.
        :type reminder_schedule: List[str]
        """

        self._reminder_schedule = reminder_schedule

    @property
    def document_id(self) -> str:
        """Gets the document_id of this SignatureRequest.


        :return: The document_id of this SignatureRequest.
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id: str):
        """Sets the document_id of this SignatureRequest.


        :param document_id: The document_id of this SignatureRequest.
        :type document_id: str
        """

        self._document_id = document_id

    @property
    def signature_blocks(self) -> List[SignatureBlock]:
        """Gets the signature_blocks of this SignatureRequest.


        :return: The signature_blocks of this SignatureRequest.
        :rtype: List[SignatureBlock]
        """
        return self._signature_blocks

    @signature_blocks.setter
    def signature_blocks(self, signature_blocks: List[SignatureBlock]):
        """Sets the signature_blocks of this SignatureRequest.


        :param signature_blocks: The signature_blocks of this SignatureRequest.
        :type signature_blocks: List[SignatureBlock]
        """

        self._signature_blocks = signature_blocks

    @property
    def workflow(self) -> SignatureWorkflow:
        """Gets the workflow of this SignatureRequest.


        :return: The workflow of this SignatureRequest.
        :rtype: SignatureWorkflow
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow: SignatureWorkflow):
        """Sets the workflow of this SignatureRequest.


        :param workflow: The workflow of this SignatureRequest.
        :type workflow: SignatureWorkflow
        """

        self._workflow = workflow
