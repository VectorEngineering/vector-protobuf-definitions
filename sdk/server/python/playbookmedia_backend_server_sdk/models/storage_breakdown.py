from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class StorageBreakdown(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_type=None, size=None, file_count=None):  # noqa: E501
        """StorageBreakdown - a model defined in OpenAPI

        :param file_type: The file_type of this StorageBreakdown.  # noqa: E501
        :type file_type: str
        :param size: The size of this StorageBreakdown.  # noqa: E501
        :type size: str
        :param file_count: The file_count of this StorageBreakdown.  # noqa: E501
        :type file_count: int
        """
        self.openapi_types = {
            'file_type': str,
            'size': str,
            'file_count': int
        }

        self.attribute_map = {
            'file_type': 'fileType',
            'size': 'size',
            'file_count': 'fileCount'
        }

        self._file_type = file_type
        self._size = size
        self._file_count = file_count

    @classmethod
    def from_dict(cls, dikt) -> 'StorageBreakdown':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StorageBreakdown of this StorageBreakdown.  # noqa: E501
        :rtype: StorageBreakdown
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_type(self) -> str:
        """Gets the file_type of this StorageBreakdown.


        :return: The file_type of this StorageBreakdown.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type: str):
        """Sets the file_type of this StorageBreakdown.


        :param file_type: The file_type of this StorageBreakdown.
        :type file_type: str
        """

        self._file_type = file_type

    @property
    def size(self) -> str:
        """Gets the size of this StorageBreakdown.


        :return: The size of this StorageBreakdown.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size: str):
        """Sets the size of this StorageBreakdown.


        :param size: The size of this StorageBreakdown.
        :type size: str
        """

        self._size = size

    @property
    def file_count(self) -> int:
        """Gets the file_count of this StorageBreakdown.


        :return: The file_count of this StorageBreakdown.
        :rtype: int
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count: int):
        """Sets the file_count of this StorageBreakdown.


        :param file_count: The file_count of this StorageBreakdown.
        :type file_count: int
        """

        self._file_count = file_count
