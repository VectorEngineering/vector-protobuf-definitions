from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.tenant_api_key_scope import TenantAPIKeyScope
from playbookmedia_backend_server_sdk.models.v1_status import V1Status
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.tenant_api_key_scope import TenantAPIKeyScope  # noqa: E501
from playbookmedia_backend_server_sdk.models.v1_status import V1Status  # noqa: E501

class TenantAPIKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, key_hash=None, key_prefix=None, name=None, description=None, status=V1Status.UNSPECIFIED, scopes=None, max_uses=None, allowed_ips=None, use_count=None, expires_at=None, created_at=None, updated_at=None, deleted_at=None):  # noqa: E501
        """TenantAPIKey - a model defined in OpenAPI

        :param id: The id of this TenantAPIKey.  # noqa: E501
        :type id: str
        :param key_hash: The key_hash of this TenantAPIKey.  # noqa: E501
        :type key_hash: str
        :param key_prefix: The key_prefix of this TenantAPIKey.  # noqa: E501
        :type key_prefix: str
        :param name: The name of this TenantAPIKey.  # noqa: E501
        :type name: str
        :param description: The description of this TenantAPIKey.  # noqa: E501
        :type description: str
        :param status: The status of this TenantAPIKey.  # noqa: E501
        :type status: V1Status
        :param scopes: The scopes of this TenantAPIKey.  # noqa: E501
        :type scopes: List[TenantAPIKeyScope]
        :param max_uses: The max_uses of this TenantAPIKey.  # noqa: E501
        :type max_uses: int
        :param allowed_ips: The allowed_ips of this TenantAPIKey.  # noqa: E501
        :type allowed_ips: List[str]
        :param use_count: The use_count of this TenantAPIKey.  # noqa: E501
        :type use_count: int
        :param expires_at: The expires_at of this TenantAPIKey.  # noqa: E501
        :type expires_at: datetime
        :param created_at: The created_at of this TenantAPIKey.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this TenantAPIKey.  # noqa: E501
        :type updated_at: datetime
        :param deleted_at: The deleted_at of this TenantAPIKey.  # noqa: E501
        :type deleted_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'key_hash': str,
            'key_prefix': str,
            'name': str,
            'description': str,
            'status': V1Status,
            'scopes': List[TenantAPIKeyScope],
            'max_uses': int,
            'allowed_ips': List[str],
            'use_count': int,
            'expires_at': datetime,
            'created_at': datetime,
            'updated_at': datetime,
            'deleted_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'key_hash': 'keyHash',
            'key_prefix': 'keyPrefix',
            'name': 'name',
            'description': 'description',
            'status': 'status',
            'scopes': 'scopes',
            'max_uses': 'maxUses',
            'allowed_ips': 'allowedIps',
            'use_count': 'useCount',
            'expires_at': 'expiresAt',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'deleted_at': 'deletedAt'
        }

        self._id = id
        self._key_hash = key_hash
        self._key_prefix = key_prefix
        self._name = name
        self._description = description
        self._status = status
        self._scopes = scopes
        self._max_uses = max_uses
        self._allowed_ips = allowed_ips
        self._use_count = use_count
        self._expires_at = expires_at
        self._created_at = created_at
        self._updated_at = updated_at
        self._deleted_at = deleted_at

    @classmethod
    def from_dict(cls, dikt) -> 'TenantAPIKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TenantAPIKey of this TenantAPIKey.  # noqa: E501
        :rtype: TenantAPIKey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this TenantAPIKey.


        :return: The id of this TenantAPIKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this TenantAPIKey.


        :param id: The id of this TenantAPIKey.
        :type id: str
        """

        self._id = id

    @property
    def key_hash(self) -> str:
        """Gets the key_hash of this TenantAPIKey.


        :return: The key_hash of this TenantAPIKey.
        :rtype: str
        """
        return self._key_hash

    @key_hash.setter
    def key_hash(self, key_hash: str):
        """Sets the key_hash of this TenantAPIKey.


        :param key_hash: The key_hash of this TenantAPIKey.
        :type key_hash: str
        """

        self._key_hash = key_hash

    @property
    def key_prefix(self) -> str:
        """Gets the key_prefix of this TenantAPIKey.


        :return: The key_prefix of this TenantAPIKey.
        :rtype: str
        """
        return self._key_prefix

    @key_prefix.setter
    def key_prefix(self, key_prefix: str):
        """Sets the key_prefix of this TenantAPIKey.


        :param key_prefix: The key_prefix of this TenantAPIKey.
        :type key_prefix: str
        """

        self._key_prefix = key_prefix

    @property
    def name(self) -> str:
        """Gets the name of this TenantAPIKey.


        :return: The name of this TenantAPIKey.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this TenantAPIKey.


        :param name: The name of this TenantAPIKey.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this TenantAPIKey.


        :return: The description of this TenantAPIKey.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this TenantAPIKey.


        :param description: The description of this TenantAPIKey.
        :type description: str
        """

        self._description = description

    @property
    def status(self) -> V1Status:
        """Gets the status of this TenantAPIKey.


        :return: The status of this TenantAPIKey.
        :rtype: V1Status
        """
        return self._status

    @status.setter
    def status(self, status: V1Status):
        """Sets the status of this TenantAPIKey.


        :param status: The status of this TenantAPIKey.
        :type status: V1Status
        """

        self._status = status

    @property
    def scopes(self) -> List[TenantAPIKeyScope]:
        """Gets the scopes of this TenantAPIKey.


        :return: The scopes of this TenantAPIKey.
        :rtype: List[TenantAPIKeyScope]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes: List[TenantAPIKeyScope]):
        """Sets the scopes of this TenantAPIKey.


        :param scopes: The scopes of this TenantAPIKey.
        :type scopes: List[TenantAPIKeyScope]
        """

        self._scopes = scopes

    @property
    def max_uses(self) -> int:
        """Gets the max_uses of this TenantAPIKey.


        :return: The max_uses of this TenantAPIKey.
        :rtype: int
        """
        return self._max_uses

    @max_uses.setter
    def max_uses(self, max_uses: int):
        """Sets the max_uses of this TenantAPIKey.


        :param max_uses: The max_uses of this TenantAPIKey.
        :type max_uses: int
        """

        self._max_uses = max_uses

    @property
    def allowed_ips(self) -> List[str]:
        """Gets the allowed_ips of this TenantAPIKey.


        :return: The allowed_ips of this TenantAPIKey.
        :rtype: List[str]
        """
        return self._allowed_ips

    @allowed_ips.setter
    def allowed_ips(self, allowed_ips: List[str]):
        """Sets the allowed_ips of this TenantAPIKey.


        :param allowed_ips: The allowed_ips of this TenantAPIKey.
        :type allowed_ips: List[str]
        """

        self._allowed_ips = allowed_ips

    @property
    def use_count(self) -> int:
        """Gets the use_count of this TenantAPIKey.


        :return: The use_count of this TenantAPIKey.
        :rtype: int
        """
        return self._use_count

    @use_count.setter
    def use_count(self, use_count: int):
        """Sets the use_count of this TenantAPIKey.


        :param use_count: The use_count of this TenantAPIKey.
        :type use_count: int
        """

        self._use_count = use_count

    @property
    def expires_at(self) -> datetime:
        """Gets the expires_at of this TenantAPIKey.


        :return: The expires_at of this TenantAPIKey.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at: datetime):
        """Sets the expires_at of this TenantAPIKey.


        :param expires_at: The expires_at of this TenantAPIKey.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this TenantAPIKey.


        :return: The created_at of this TenantAPIKey.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this TenantAPIKey.


        :param created_at: The created_at of this TenantAPIKey.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this TenantAPIKey.


        :return: The updated_at of this TenantAPIKey.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this TenantAPIKey.


        :param updated_at: The updated_at of this TenantAPIKey.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def deleted_at(self) -> datetime:
        """Gets the deleted_at of this TenantAPIKey.


        :return: The deleted_at of this TenantAPIKey.
        :rtype: datetime
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at: datetime):
        """Sets the deleted_at of this TenantAPIKey.


        :param deleted_at: The deleted_at of this TenantAPIKey.
        :type deleted_at: datetime
        """

        self._deleted_at = deleted_at
