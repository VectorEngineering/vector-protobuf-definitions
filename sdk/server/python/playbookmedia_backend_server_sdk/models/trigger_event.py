from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class TriggerEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    TRIGGER_EVENT_UNSPECIFIED = 'TRIGGER_EVENT_UNSPECIFIED'
    TRIGGER_EVENT_JOB_STARTED = 'TRIGGER_EVENT_JOB_STARTED'
    TRIGGER_EVENT_JOB_COMPLETED = 'TRIGGER_EVENT_JOB_COMPLETED'
    TRIGGER_EVENT_JOB_FAILED = 'TRIGGER_EVENT_JOB_FAILED'
    TRIGGER_EVENT_LEAD_FOUND = 'TRIGGER_EVENT_LEAD_FOUND'
    TRIGGER_EVENT_QUOTA_EXCEEDED = 'TRIGGER_EVENT_QUOTA_EXCEEDED'
    TRIGGER_EVENT_ERROR_THRESHOLD_REACHED = 'TRIGGER_EVENT_ERROR_THRESHOLD_REACHED'
    TRIGGER_EVENT_RATE_LIMIT_REACHED = 'TRIGGER_EVENT_RATE_LIMIT_REACHED'
    TRIGGER_EVENT_DATA_VALIDATION_FAILED = 'TRIGGER_EVENT_DATA_VALIDATION_FAILED'
    TRIGGER_EVENT_NEW_PROXY_NEEDED = 'TRIGGER_EVENT_NEW_PROXY_NEEDED'
    TRIGGER_EVENT_SCHEDULED_MAINTENANCE = 'TRIGGER_EVENT_SCHEDULED_MAINTENANCE'
    def __init__(self):  # noqa: E501
        """TriggerEvent - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'TriggerEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TriggerEvent of this TriggerEvent.  # noqa: E501
        :rtype: TriggerEvent
        """
        return util.deserialize_model(dikt, cls)
