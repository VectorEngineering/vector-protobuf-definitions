from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.account import Account
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.account import Account  # noqa: E501

class UpdateAccountRequestPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account=None, organization_id=None, tenant_id=None):  # noqa: E501
        """UpdateAccountRequestPayload - a model defined in OpenAPI

        :param account: The account of this UpdateAccountRequestPayload.  # noqa: E501
        :type account: Account
        :param organization_id: The organization_id of this UpdateAccountRequestPayload.  # noqa: E501
        :type organization_id: str
        :param tenant_id: The tenant_id of this UpdateAccountRequestPayload.  # noqa: E501
        :type tenant_id: str
        """
        self.openapi_types = {
            'account': Account,
            'organization_id': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'account': 'account',
            'organization_id': 'organizationId',
            'tenant_id': 'tenantId'
        }

        self._account = account
        self._organization_id = organization_id
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateAccountRequestPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateAccountRequestPayload of this UpdateAccountRequestPayload.  # noqa: E501
        :rtype: UpdateAccountRequestPayload
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self) -> Account:
        """Gets the account of this UpdateAccountRequestPayload.


        :return: The account of this UpdateAccountRequestPayload.
        :rtype: Account
        """
        return self._account

    @account.setter
    def account(self, account: Account):
        """Sets the account of this UpdateAccountRequestPayload.


        :param account: The account of this UpdateAccountRequestPayload.
        :type account: Account
        """

        self._account = account

    @property
    def organization_id(self) -> str:
        """Gets the organization_id of this UpdateAccountRequestPayload.


        :return: The organization_id of this UpdateAccountRequestPayload.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id: str):
        """Sets the organization_id of this UpdateAccountRequestPayload.


        :param organization_id: The organization_id of this UpdateAccountRequestPayload.
        :type organization_id: str
        """

        self._organization_id = organization_id

    @property
    def tenant_id(self) -> str:
        """Gets the tenant_id of this UpdateAccountRequestPayload.


        :return: The tenant_id of this UpdateAccountRequestPayload.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id: str):
        """Sets the tenant_id of this UpdateAccountRequestPayload.


        :param tenant_id: The tenant_id of this UpdateAccountRequestPayload.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
