from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk import util


class UserActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_id=None, email=None, file_operations=None, comments_made=None, documents_processed=None):  # noqa: E501
        """UserActivity - a model defined in OpenAPI

        :param user_id: The user_id of this UserActivity.  # noqa: E501
        :type user_id: str
        :param email: The email of this UserActivity.  # noqa: E501
        :type email: str
        :param file_operations: The file_operations of this UserActivity.  # noqa: E501
        :type file_operations: int
        :param comments_made: The comments_made of this UserActivity.  # noqa: E501
        :type comments_made: int
        :param documents_processed: The documents_processed of this UserActivity.  # noqa: E501
        :type documents_processed: int
        """
        self.openapi_types = {
            'user_id': str,
            'email': str,
            'file_operations': int,
            'comments_made': int,
            'documents_processed': int
        }

        self.attribute_map = {
            'user_id': 'userId',
            'email': 'email',
            'file_operations': 'fileOperations',
            'comments_made': 'commentsMade',
            'documents_processed': 'documentsProcessed'
        }

        self._user_id = user_id
        self._email = email
        self._file_operations = file_operations
        self._comments_made = comments_made
        self._documents_processed = documents_processed

    @classmethod
    def from_dict(cls, dikt) -> 'UserActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserActivity of this UserActivity.  # noqa: E501
        :rtype: UserActivity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this UserActivity.


        :return: The user_id of this UserActivity.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this UserActivity.


        :param user_id: The user_id of this UserActivity.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def email(self) -> str:
        """Gets the email of this UserActivity.


        :return: The email of this UserActivity.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this UserActivity.


        :param email: The email of this UserActivity.
        :type email: str
        """

        self._email = email

    @property
    def file_operations(self) -> int:
        """Gets the file_operations of this UserActivity.


        :return: The file_operations of this UserActivity.
        :rtype: int
        """
        return self._file_operations

    @file_operations.setter
    def file_operations(self, file_operations: int):
        """Sets the file_operations of this UserActivity.


        :param file_operations: The file_operations of this UserActivity.
        :type file_operations: int
        """

        self._file_operations = file_operations

    @property
    def comments_made(self) -> int:
        """Gets the comments_made of this UserActivity.


        :return: The comments_made of this UserActivity.
        :rtype: int
        """
        return self._comments_made

    @comments_made.setter
    def comments_made(self, comments_made: int):
        """Sets the comments_made of this UserActivity.


        :param comments_made: The comments_made of this UserActivity.
        :type comments_made: int
        """

        self._comments_made = comments_made

    @property
    def documents_processed(self) -> int:
        """Gets the documents_processed of this UserActivity.


        :return: The documents_processed of this UserActivity.
        :rtype: int
        """
        return self._documents_processed

    @documents_processed.setter
    def documents_processed(self, documents_processed: int):
        """Sets the documents_processed of this UserActivity.


        :param documents_processed: The documents_processed of this UserActivity.
        :type documents_processed: int
        """

        self._documents_processed = documents_processed
