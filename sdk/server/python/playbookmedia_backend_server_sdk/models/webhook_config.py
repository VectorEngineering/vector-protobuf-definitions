from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playbookmedia_backend_server_sdk.models.base_model import Model
from playbookmedia_backend_server_sdk.models.included_field import IncludedField
from playbookmedia_backend_server_sdk.models.payload_format import PayloadFormat
from playbookmedia_backend_server_sdk.models.trigger_event import TriggerEvent
from playbookmedia_backend_server_sdk import util

from playbookmedia_backend_server_sdk.models.included_field import IncludedField  # noqa: E501
from playbookmedia_backend_server_sdk.models.payload_format import PayloadFormat  # noqa: E501
from playbookmedia_backend_server_sdk.models.trigger_event import TriggerEvent  # noqa: E501

class WebhookConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, url=None, auth_type=None, auth_token=None, custom_headers=None, max_retries=None, retry_interval=None, trigger_events=None, included_fields=None, include_full_results=None, payload_format=PayloadFormat.UNSPECIFIED, verify_ssl=None, signing_secret=None, rate_limit=None, rate_limit_interval=None, created_at=None, updated_at=None, last_triggered_at=None, successful_calls=None, failed_calls=None, metadata=None, webhook_name=None):  # noqa: E501
        """WebhookConfig - a model defined in OpenAPI

        :param id: The id of this WebhookConfig.  # noqa: E501
        :type id: str
        :param url: The url of this WebhookConfig.  # noqa: E501
        :type url: str
        :param auth_type: The auth_type of this WebhookConfig.  # noqa: E501
        :type auth_type: str
        :param auth_token: The auth_token of this WebhookConfig.  # noqa: E501
        :type auth_token: str
        :param custom_headers: The custom_headers of this WebhookConfig.  # noqa: E501
        :type custom_headers: Dict[str, str]
        :param max_retries: The max_retries of this WebhookConfig.  # noqa: E501
        :type max_retries: int
        :param retry_interval: The retry_interval of this WebhookConfig.  # noqa: E501
        :type retry_interval: str
        :param trigger_events: The trigger_events of this WebhookConfig.  # noqa: E501
        :type trigger_events: List[TriggerEvent]
        :param included_fields: The included_fields of this WebhookConfig.  # noqa: E501
        :type included_fields: List[IncludedField]
        :param include_full_results: The include_full_results of this WebhookConfig.  # noqa: E501
        :type include_full_results: bool
        :param payload_format: The payload_format of this WebhookConfig.  # noqa: E501
        :type payload_format: PayloadFormat
        :param verify_ssl: The verify_ssl of this WebhookConfig.  # noqa: E501
        :type verify_ssl: bool
        :param signing_secret: The signing_secret of this WebhookConfig.  # noqa: E501
        :type signing_secret: str
        :param rate_limit: The rate_limit of this WebhookConfig.  # noqa: E501
        :type rate_limit: int
        :param rate_limit_interval: The rate_limit_interval of this WebhookConfig.  # noqa: E501
        :type rate_limit_interval: str
        :param created_at: The created_at of this WebhookConfig.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this WebhookConfig.  # noqa: E501
        :type updated_at: datetime
        :param last_triggered_at: The last_triggered_at of this WebhookConfig.  # noqa: E501
        :type last_triggered_at: datetime
        :param successful_calls: The successful_calls of this WebhookConfig.  # noqa: E501
        :type successful_calls: int
        :param failed_calls: The failed_calls of this WebhookConfig.  # noqa: E501
        :type failed_calls: int
        :param metadata: The metadata of this WebhookConfig.  # noqa: E501
        :type metadata: object
        :param webhook_name: The webhook_name of this WebhookConfig.  # noqa: E501
        :type webhook_name: str
        """
        self.openapi_types = {
            'id': str,
            'url': str,
            'auth_type': str,
            'auth_token': str,
            'custom_headers': Dict[str, str],
            'max_retries': int,
            'retry_interval': str,
            'trigger_events': List[TriggerEvent],
            'included_fields': List[IncludedField],
            'include_full_results': bool,
            'payload_format': PayloadFormat,
            'verify_ssl': bool,
            'signing_secret': str,
            'rate_limit': int,
            'rate_limit_interval': str,
            'created_at': datetime,
            'updated_at': datetime,
            'last_triggered_at': datetime,
            'successful_calls': int,
            'failed_calls': int,
            'metadata': object,
            'webhook_name': str
        }

        self.attribute_map = {
            'id': 'id',
            'url': 'url',
            'auth_type': 'authType',
            'auth_token': 'authToken',
            'custom_headers': 'customHeaders',
            'max_retries': 'maxRetries',
            'retry_interval': 'retryInterval',
            'trigger_events': 'triggerEvents',
            'included_fields': 'includedFields',
            'include_full_results': 'includeFullResults',
            'payload_format': 'payloadFormat',
            'verify_ssl': 'verifySsl',
            'signing_secret': 'signingSecret',
            'rate_limit': 'rateLimit',
            'rate_limit_interval': 'rateLimitInterval',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'last_triggered_at': 'lastTriggeredAt',
            'successful_calls': 'successfulCalls',
            'failed_calls': 'failedCalls',
            'metadata': 'metadata',
            'webhook_name': 'webhookName'
        }

        self._id = id
        self._url = url
        self._auth_type = auth_type
        self._auth_token = auth_token
        self._custom_headers = custom_headers
        self._max_retries = max_retries
        self._retry_interval = retry_interval
        self._trigger_events = trigger_events
        self._included_fields = included_fields
        self._include_full_results = include_full_results
        self._payload_format = payload_format
        self._verify_ssl = verify_ssl
        self._signing_secret = signing_secret
        self._rate_limit = rate_limit
        self._rate_limit_interval = rate_limit_interval
        self._created_at = created_at
        self._updated_at = updated_at
        self._last_triggered_at = last_triggered_at
        self._successful_calls = successful_calls
        self._failed_calls = failed_calls
        self._metadata = metadata
        self._webhook_name = webhook_name

    @classmethod
    def from_dict(cls, dikt) -> 'WebhookConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WebhookConfig of this WebhookConfig.  # noqa: E501
        :rtype: WebhookConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this WebhookConfig.


        :return: The id of this WebhookConfig.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this WebhookConfig.


        :param id: The id of this WebhookConfig.
        :type id: str
        """

        self._id = id

    @property
    def url(self) -> str:
        """Gets the url of this WebhookConfig.


        :return: The url of this WebhookConfig.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this WebhookConfig.


        :param url: The url of this WebhookConfig.
        :type url: str
        """

        self._url = url

    @property
    def auth_type(self) -> str:
        """Gets the auth_type of this WebhookConfig.

        e.g., \"basic\", \"bearer\", \"custom\"  # noqa: E501

        :return: The auth_type of this WebhookConfig.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type: str):
        """Sets the auth_type of this WebhookConfig.

        e.g., \"basic\", \"bearer\", \"custom\"  # noqa: E501

        :param auth_type: The auth_type of this WebhookConfig.
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def auth_token(self) -> str:
        """Gets the auth_token of this WebhookConfig.


        :return: The auth_token of this WebhookConfig.
        :rtype: str
        """
        return self._auth_token

    @auth_token.setter
    def auth_token(self, auth_token: str):
        """Sets the auth_token of this WebhookConfig.


        :param auth_token: The auth_token of this WebhookConfig.
        :type auth_token: str
        """

        self._auth_token = auth_token

    @property
    def custom_headers(self) -> Dict[str, str]:
        """Gets the custom_headers of this WebhookConfig.


        :return: The custom_headers of this WebhookConfig.
        :rtype: Dict[str, str]
        """
        return self._custom_headers

    @custom_headers.setter
    def custom_headers(self, custom_headers: Dict[str, str]):
        """Sets the custom_headers of this WebhookConfig.


        :param custom_headers: The custom_headers of this WebhookConfig.
        :type custom_headers: Dict[str, str]
        """

        self._custom_headers = custom_headers

    @property
    def max_retries(self) -> int:
        """Gets the max_retries of this WebhookConfig.


        :return: The max_retries of this WebhookConfig.
        :rtype: int
        """
        return self._max_retries

    @max_retries.setter
    def max_retries(self, max_retries: int):
        """Sets the max_retries of this WebhookConfig.


        :param max_retries: The max_retries of this WebhookConfig.
        :type max_retries: int
        """

        self._max_retries = max_retries

    @property
    def retry_interval(self) -> str:
        """Gets the retry_interval of this WebhookConfig.


        :return: The retry_interval of this WebhookConfig.
        :rtype: str
        """
        return self._retry_interval

    @retry_interval.setter
    def retry_interval(self, retry_interval: str):
        """Sets the retry_interval of this WebhookConfig.


        :param retry_interval: The retry_interval of this WebhookConfig.
        :type retry_interval: str
        """

        self._retry_interval = retry_interval

    @property
    def trigger_events(self) -> List[TriggerEvent]:
        """Gets the trigger_events of this WebhookConfig.


        :return: The trigger_events of this WebhookConfig.
        :rtype: List[TriggerEvent]
        """
        return self._trigger_events

    @trigger_events.setter
    def trigger_events(self, trigger_events: List[TriggerEvent]):
        """Sets the trigger_events of this WebhookConfig.


        :param trigger_events: The trigger_events of this WebhookConfig.
        :type trigger_events: List[TriggerEvent]
        """

        self._trigger_events = trigger_events

    @property
    def included_fields(self) -> List[IncludedField]:
        """Gets the included_fields of this WebhookConfig.


        :return: The included_fields of this WebhookConfig.
        :rtype: List[IncludedField]
        """
        return self._included_fields

    @included_fields.setter
    def included_fields(self, included_fields: List[IncludedField]):
        """Sets the included_fields of this WebhookConfig.


        :param included_fields: The included_fields of this WebhookConfig.
        :type included_fields: List[IncludedField]
        """

        self._included_fields = included_fields

    @property
    def include_full_results(self) -> bool:
        """Gets the include_full_results of this WebhookConfig.


        :return: The include_full_results of this WebhookConfig.
        :rtype: bool
        """
        return self._include_full_results

    @include_full_results.setter
    def include_full_results(self, include_full_results: bool):
        """Sets the include_full_results of this WebhookConfig.


        :param include_full_results: The include_full_results of this WebhookConfig.
        :type include_full_results: bool
        """

        self._include_full_results = include_full_results

    @property
    def payload_format(self) -> PayloadFormat:
        """Gets the payload_format of this WebhookConfig.


        :return: The payload_format of this WebhookConfig.
        :rtype: PayloadFormat
        """
        return self._payload_format

    @payload_format.setter
    def payload_format(self, payload_format: PayloadFormat):
        """Sets the payload_format of this WebhookConfig.


        :param payload_format: The payload_format of this WebhookConfig.
        :type payload_format: PayloadFormat
        """

        self._payload_format = payload_format

    @property
    def verify_ssl(self) -> bool:
        """Gets the verify_ssl of this WebhookConfig.


        :return: The verify_ssl of this WebhookConfig.
        :rtype: bool
        """
        return self._verify_ssl

    @verify_ssl.setter
    def verify_ssl(self, verify_ssl: bool):
        """Sets the verify_ssl of this WebhookConfig.


        :param verify_ssl: The verify_ssl of this WebhookConfig.
        :type verify_ssl: bool
        """

        self._verify_ssl = verify_ssl

    @property
    def signing_secret(self) -> str:
        """Gets the signing_secret of this WebhookConfig.


        :return: The signing_secret of this WebhookConfig.
        :rtype: str
        """
        return self._signing_secret

    @signing_secret.setter
    def signing_secret(self, signing_secret: str):
        """Sets the signing_secret of this WebhookConfig.


        :param signing_secret: The signing_secret of this WebhookConfig.
        :type signing_secret: str
        """

        self._signing_secret = signing_secret

    @property
    def rate_limit(self) -> int:
        """Gets the rate_limit of this WebhookConfig.


        :return: The rate_limit of this WebhookConfig.
        :rtype: int
        """
        return self._rate_limit

    @rate_limit.setter
    def rate_limit(self, rate_limit: int):
        """Sets the rate_limit of this WebhookConfig.


        :param rate_limit: The rate_limit of this WebhookConfig.
        :type rate_limit: int
        """

        self._rate_limit = rate_limit

    @property
    def rate_limit_interval(self) -> str:
        """Gets the rate_limit_interval of this WebhookConfig.


        :return: The rate_limit_interval of this WebhookConfig.
        :rtype: str
        """
        return self._rate_limit_interval

    @rate_limit_interval.setter
    def rate_limit_interval(self, rate_limit_interval: str):
        """Sets the rate_limit_interval of this WebhookConfig.


        :param rate_limit_interval: The rate_limit_interval of this WebhookConfig.
        :type rate_limit_interval: str
        """

        self._rate_limit_interval = rate_limit_interval

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this WebhookConfig.


        :return: The created_at of this WebhookConfig.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this WebhookConfig.


        :param created_at: The created_at of this WebhookConfig.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this WebhookConfig.


        :return: The updated_at of this WebhookConfig.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this WebhookConfig.


        :param updated_at: The updated_at of this WebhookConfig.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def last_triggered_at(self) -> datetime:
        """Gets the last_triggered_at of this WebhookConfig.


        :return: The last_triggered_at of this WebhookConfig.
        :rtype: datetime
        """
        return self._last_triggered_at

    @last_triggered_at.setter
    def last_triggered_at(self, last_triggered_at: datetime):
        """Sets the last_triggered_at of this WebhookConfig.


        :param last_triggered_at: The last_triggered_at of this WebhookConfig.
        :type last_triggered_at: datetime
        """

        self._last_triggered_at = last_triggered_at

    @property
    def successful_calls(self) -> int:
        """Gets the successful_calls of this WebhookConfig.


        :return: The successful_calls of this WebhookConfig.
        :rtype: int
        """
        return self._successful_calls

    @successful_calls.setter
    def successful_calls(self, successful_calls: int):
        """Sets the successful_calls of this WebhookConfig.


        :param successful_calls: The successful_calls of this WebhookConfig.
        :type successful_calls: int
        """

        self._successful_calls = successful_calls

    @property
    def failed_calls(self) -> int:
        """Gets the failed_calls of this WebhookConfig.


        :return: The failed_calls of this WebhookConfig.
        :rtype: int
        """
        return self._failed_calls

    @failed_calls.setter
    def failed_calls(self, failed_calls: int):
        """Sets the failed_calls of this WebhookConfig.


        :param failed_calls: The failed_calls of this WebhookConfig.
        :type failed_calls: int
        """

        self._failed_calls = failed_calls

    @property
    def metadata(self) -> object:
        """Gets the metadata of this WebhookConfig.


        :return: The metadata of this WebhookConfig.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this WebhookConfig.


        :param metadata: The metadata of this WebhookConfig.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def webhook_name(self) -> str:
        """Gets the webhook_name of this WebhookConfig.


        :return: The webhook_name of this WebhookConfig.
        :rtype: str
        """
        return self._webhook_name

    @webhook_name.setter
    def webhook_name(self, webhook_name: str):
        """Sets the webhook_name of this WebhookConfig.


        :param webhook_name: The webhook_name of this WebhookConfig.
        :type webhook_name: str
        """

        self._webhook_name = webhook_name
