{{define "authorization_v2"}}
{{$host := .}}
{
    "endpoint":"/v2/gateway/user/registration",
    "@comment": "purpose: endpoint used to register a user profile against our backend",
    "method":"POST",
    "output_encoding": "no-op",
    "extra_config":{
    {{ include "rate_limit_endpoint.tmpl" }}
    },
    "backend":[
    {
        "url_pattern":"/api/v2/user",
        "host":[
            {{ include "user_service_host.tmpl" }}
        ],
        "encoding": "no-op",
        "method":"POST",
        "extra_config":{
            {{ include "modifier_backend.tmpl" }},
            {{ include "circuit_breaker_backend.tmpl" }},
            {{ include "error_detail_backend.tmpl" }}
        }
    }
    ]
},
{
    "endpoint":"/v2/gateway/user/login/{email}/{password}/type/{profileType}",
    "@comment": "purpose: authenticates a user with our backend given we are provided with a set of credentials. returned is an object { account: {} profile: {} jwt: xxxxxx }",
    "method":"POST",
    "extra_config":{
        {{ include "rate_limit_endpoint.tmpl" }},
        {{ include "sequential_endpoint.tmpl" }}
    },
    "backend":[
        {
            "@comment": "we query for the userID based on the provided user email",
            "url_pattern":"/api/v2/user/account?email={email}&profileType={profileType}",
            "host":[
                {{ include "user_service_host.tmpl" }}
            ],
            "group": "user_account",
            "target": "userAccount",
            "method":"GET",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
            "mapping": {
                "id": "userAccountID",
                "authnAccountId": "userAuthnAccountID"
            }
        },
        {
            "@comment": "we call the social service to obtain the social profile of the user",
            "url_pattern":"/v1/social/user/{resp0_user_account.userAuthnAccountID}",
            "host":[
                {{ include "social_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_profile",
            "target": "profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "Id": "userProfileID"
            },
            "deny": [
                "NewsFeedTimelineID",
                "NotificationTimelineID",
                "PersonalFeedTimelineID"
            ]
        },
        {
            "@comment": "we call the financial service to obtain the financial profile of the user",
            "url_pattern":"/api/v1/profile/{resp0_user_account.userAuthnAccountID}",
            "host":[
                {{ include "financial_integration_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_financial_profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "id": "userFinancialProfileID"
            }
        },
        {
            "@comment": "we call the authentication service with the user credentials in hopes of obtaining a jwt token",
            "url_pattern":"/api/v1/user/login?email={email}&password={password}",
            "host":[
                {{ include "headless_authentication_service_host.tmpl" }}
            ],
            "method":"POST",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            }
        }
    ]
},
{
    "endpoint":"/v3/gateway/user/login/{email}/{password}/type/{profileType}/finances/{financialProfileType}",
    "@comment": "purpose: authenticates a user with our backend given we are provided with a set of credentials. returned is an object { account: {} profile: {} jwt: xxxxxx }",
    "method":"POST",
    "extra_config":{
        {{ include "rate_limit_endpoint.tmpl" }},
        {{ include "sequential_endpoint.tmpl" }}
    },
    "backend":[
        {
            "@comment": "we query for the userID based on the provided user email",
            "url_pattern":"/api/v2/user/account?email={email}&profileType={profileType}",
            "host":[
                {{ include "user_service_host.tmpl" }}
            ],
            "group": "user_account",
            "target": "userAccount",
            "method":"GET",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
            "mapping": {
                "id": "userAccountID",
                "authnAccountId": "userAuthnAccountID"
            }
        },
        {
            "@comment": "we call the social service to obtain the social profile of the user",
            "url_pattern":"/v1/social/user/{resp0_user_account.userAuthnAccountID}",
            "host":[
                {{ include "social_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_profile",
            "target": "profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "Id": "userProfileID"
            },
            "deny": [
                "NewsFeedTimelineID",
                "NotificationTimelineID",
                "PersonalFeedTimelineID"
            ]
        },
        {
            "@comment": "we call the financial service to obtain the financial profile of the user",
            "url_pattern":"/api/v1/profile/{resp0_user_account.userAuthnAccountID}?profileType={financialProfileType}",
            "host":[
                {{ include "financial_integration_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_financial_profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "id": "userFinancialProfileID"
            }
        },
        {
            "@comment": "we call the authentication service with the user credentials in hopes of obtaining a jwt token",
            "url_pattern":"/api/v1/user/login?email={email}&password={password}",
            "host":[
                {{ include "headless_authentication_service_host.tmpl" }}
            ],
            "method":"POST",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            }
        }
    ]
},
{
    "endpoint":"/v2/gateway/webhook/password-reset",
    "@comment": "purpose: endpoint used to change a users password after an account reset request. ex - https://production.solomon-ai.dev/api/v2/user/webhook/password-reset?accountId=<string>&token=<string>",
    "method":"POST",
    "output_encoding": "no-op",
    "extra_config":{
        {{ include "rate_limit_endpoint.tmpl" }}
    },
    "backend":[
    {
        "url_pattern":"/api/v2/user/webhook/password-reset",
        "host":[
            {{ include "user_service_host.tmpl" }}
        ],
        "encoding": "no-op",
        "method":"POST",
        "extra_config":{
            {{ include "modifier_backend.tmpl" }},
            {{ include "circuit_breaker_backend.tmpl" }},
            {{ include "error_detail_backend.tmpl" }}
        }
    }
    ]
},
{
    "endpoint":"/v3/gateway/authorization-authzero/{email}/auth/{authZeroId}/type/{profileType}/finances/{financialProfileType}",
    "@comment": "purpose: authenticates a user with our backend given we are provided with a set of credentials. returned is an object { account: {} profile: {} jwt: xxxxxx }",
    "method":"POST",
    "extra_config":{
        {{ include "rate_limit_endpoint.tmpl" }},
        {{ include "sequential_endpoint.tmpl" }}
    },
    "backend":[
        {
            "@comment": "we query for the account based on the provided authzero user id and the profile type",
            "url_pattern":"/api/v2/user/auth-zero/{authZeroId}?profileType={profileType}",
            "host":[
                {{ include "user_service_host.tmpl" }}
            ],
            "group": "user_account",
            "target": "userAccount",
            "method":"GET",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
            "mapping": {
                "id": "userAccountID",
                "authnAccountId": "userAuthnAccountID",
                "auth0UserId": "authZeroUserId"
            }
        },
        {
            "@comment": "we call the social service to obtain the social profile of the user",
            "url_pattern":"/v1/social/user/{resp0_user_account.userAccountID}",
            "host":[
                {{ include "social_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_profile",
            "target": "profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "Id": "userProfileID"
            },
            "deny": [
                "NewsFeedTimelineID",
                "NotificationTimelineID",
                "PersonalFeedTimelineID"
            ]
        },
        {
            "@comment": "we call the financial service to obtain the financial profile of the user",
            "url_pattern":"/api/v1/profile/{resp0_user_account.userAccountID}?profileType={financialProfileType}",
            "host":[
                {{ include "financial_integration_service_host.tmpl" }}
            ],
            "method":"GET",
            "group": "user_financial_profile",
            "extra_config":{
                {{ include "modifier_backend.tmpl" }},
                {{ include "circuit_breaker_backend.tmpl" }},
                {{ include "error_detail_backend.tmpl" }}
            },
             "mapping": {
                "id": "userFinancialProfileID"
            }
        }
    ]
}
{{end}}