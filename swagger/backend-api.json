{
    "openapi": "3.0.3",
    "info": {
        "title": "Lead Scraping Service API",
        "description": "Vector Lead Scraping Service API - Manages Lead Scraping Jobs",
        "version": "1.0",
        "contact": {
            "name": "Vector AI Engineering",
            "url": "https://vector.ai",
            "email": "yoanyomba@vector.ai"
        },
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://github.com/SolomonAIEngineering/backend-monorepo/blob/main/LICENSE"
        },
        "x-api-version": "v1"
    },
    "servers": [
        {
            "url": "http://lead-scraping-microservice.vector.svc.cluster.local:9896"
        },
        {
            "url": "https://lead-scraping-microservice.vector.svc.cluster.local:9896"
        },
        {
            "url": "wss://lead-scraping-microservice.vector.svc.cluster.local:9896"
        }
    ],
    "externalDocs": {
        "description": "Vector User Service Documentation",
        "url": "https://internal-docs.solomon-ai.io/user-service"
    },
    "tags": [
        {
            "name": "Workspace Management",
            "description": "APIs for managing workspaces, workspace settings, and configurations",
            "externalDocs": {
                "description": "Learn more about workspace management",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/management"
            }
        },
        {
            "name": "Workspace Collaboration",
            "description": "APIs for managing workspace sharing, permissions, and team collaboration"
        },
        {
            "name": "Workspace Analytics",
            "description": "APIs for workspace usage analytics and reporting"
        },
        {
            "name": "LeadScraperService"
        },
        {
            "name": "Account Management",
            "description": "APIs for managing user accounts and account settings",
            "externalDocs": {
                "description": "Learn more about account management",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/accounts"
            }
        },
        {
            "name": "Workspace Sharing",
            "description": "APIs for managing workspace sharing, permissions, and team collaboration",
            "externalDocs": {
                "description": "Learn more about workspace sharing",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/sharing"
            }
        },
        {
            "name": "Analytics",
            "description": "APIs for workspace usage analytics and reporting",
            "externalDocs": {
                "description": "Learn more about analytics",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/analytics"
            }
        },
        {
            "name": "Compliance",
            "description": "APIs for compliance reporting and auditing",
            "externalDocs": {
                "description": "Learn more about compliance",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/compliance"
            }
        },
        {
            "name": "Storage",
            "description": "APIs for storage management and statistics",
            "externalDocs": {
                "description": "Learn more about storage",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/storage"
            }
        },
        {
            "name": "WorkspaceService"
        }
    ],
    "paths": {
        "/lead-scraper-microservice/api/v1/accounts": {
            "post": {
                "summary": "Create a new account",
                "description": "Creates a new user account in the workspace service",
                "operationId": "CreateAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/accounts/list": {
            "get": {
                "summary": "List all accounts",
                "description": "Retrieves a list of accounts",
                "operationId": "ListAccounts",
                "responses": {
                    "200": {
                        "description": "Accounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAccountsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/accounts/settings": {
            "put": {
                "summary": "Update account settings",
                "description": "Updates the settings for a given account",
                "operationId": "UpdateAccountSettings",
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccountSettingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountSettingsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/accounts/update": {
            "put": {
                "summary": "Update account details",
                "description": "Updates specified fields of an existing account",
                "operationId": "UpdateAccount",
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/accounts/{id}": {
            "get": {
                "summary": "Get account details",
                "description": "Retrieves details of a specific account",
                "operationId": "GetAccount",
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete account",
                "description": "Permanently deletes an account and associated resources",
                "operationId": "DeleteAccount",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/accounts/{id}/usage": {
            "get": {
                "summary": "Get account usage",
                "description": "Retrieves usage details for a given account",
                "operationId": "GetAccountUsage",
                "responses": {
                    "200": {
                        "description": "Usage details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountUsageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/api-keys": {
            "post": {
                "summary": "Create a new API key",
                "description": "Creates a new API key with specified permissions and settings",
                "operationId": "CreateAPIKey",
                "responses": {
                    "200": {
                        "description": "API key created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ]
            },
            "put": {
                "summary": "Update API key",
                "description": "Updates an existing API key's configuration",
                "operationId": "UpdateAPIKey",
                "responses": {
                    "200": {
                        "description": "API key updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/api-keys/list": {
            "get": {
                "summary": "List API keys",
                "description": "Retrieves a list of API keys with optional filtering",
                "operationId": "ListAPIKeys",
                "responses": {
                    "200": {
                        "description": "API keys retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAPIKeysResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/api-keys/rotate": {
            "post": {
                "summary": "Rotate API key",
                "description": "Rotates an API key while maintaining its configuration",
                "operationId": "RotateAPIKey",
                "responses": {
                    "200": {
                        "description": "API key rotated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RotateAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RotateAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RotateAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/api-keys/{keyId}": {
            "get": {
                "summary": "Get API key details",
                "description": "Retrieves details of a specific API key",
                "operationId": "GetAPIKey",
                "responses": {
                    "200": {
                        "description": "API key retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete API key",
                "description": "Permanently deletes an API key",
                "operationId": "DeleteAPIKey",
                "responses": {
                    "200": {
                        "description": "API key deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/jobs": {
            "get": {
                "summary": "Get all jobs",
                "description": "This endpoint retrieves all Google Maps scraping jobs",
                "operationId": "ListScrapingJobs",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListScrapingJobsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "authPlatformUserId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workflowId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new job scraping task",
                "description": "This endpoint creates a new Google Maps scraping job",
                "operationId": "CreateScrapingJob",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateScrapingJobResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateScrapingJobResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateScrapingJobRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateScrapingJobRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/jobs/{jobId}": {
            "get": {
                "summary": "Get a specific job",
                "description": "This endpoint retrieves a specific Google Maps scraping job",
                "operationId": "GetScrapingJob",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetScrapingJobResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a specific job",
                "description": "This endpoint deletes a specific Google Maps scraping job",
                "operationId": "DeleteScrapingJob",
                "responses": {
                    "200": {
                        "description": "Job deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteScrapingJobResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/jobs/{jobId}/download": {
            "get": {
                "summary": "Download job results as CSV",
                "description": "This endpoint downloads the results of a Google Maps scraping job as CSV",
                "operationId": "DownloadScrapingResults",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadScrapingResultsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/leads": {
            "get": {
                "summary": "List leads",
                "description": "Retrieves a paginated list of leads with comprehensive filtering options",
                "operationId": "ListLeads",
                "responses": {
                    "200": {
                        "description": "Leads retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListLeadsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "description": "Context identifiers",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Pagination",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/leads/{leadId}": {
            "get": {
                "summary": "Get lead details",
                "description": "Retrieves detailed information about a specific lead",
                "operationId": "GetLead",
                "responses": {
                    "200": {
                        "description": "Lead retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLeadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organization": {
            "get": {
                "summary": "List all organizations",
                "description": "Retrieves a list of all organizations in a tenant",
                "operationId": "ListOrganizations",
                "responses": {
                    "200": {
                        "description": "Organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOrganizationsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new organization",
                "description": "Creates a new organization within a tenant",
                "operationId": "CreateOrganization",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateOrganizationResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Organization created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateOrganizationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ]
            },
            "put": {
                "summary": "Update organization details",
                "description": "Updates the configuration of a specific organization",
                "operationId": "UpdateOrganization",
                "responses": {
                    "200": {
                        "description": "Organization updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOrganizationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrganizationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrganizationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organization/tenants/{organizationId}": {
            "get": {
                "summary": "List all tenants",
                "description": "Retrieves a list of all tenants in the system",
                "operationId": "ListTenants",
                "responses": {
                    "200": {
                        "description": "Tenants retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTenantsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organization/tenants/{organizationId}/{tenantId}": {
            "delete": {
                "summary": "Delete a tenant",
                "description": "Permanently deletes a tenant and all associated resources",
                "operationId": "DeleteTenant",
                "responses": {
                    "200": {
                        "description": "Tenant deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organization/{id}": {
            "get": {
                "summary": "Get organization details",
                "description": "Retrieves details of a specific organization",
                "operationId": "GetOrganization",
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrganizationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete an organization",
                "description": "Permanently deletes an organization and all associated resources",
                "operationId": "DeleteOrganization",
                "responses": {
                    "200": {
                        "description": "Organization deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteOrganizationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants": {
            "put": {
                "summary": "Update tenant details",
                "description": "Updates the configuration of a specific tenant",
                "operationId": "UpdateTenant",
                "responses": {
                    "200": {
                        "description": "Tenant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants/api-keys": {
            "post": {
                "summary": "Create a new tenant API key",
                "description": "Creates a new API key for a tenant with specified permissions",
                "operationId": "CreateTenantAPIKey",
                "responses": {
                    "200": {
                        "description": "Organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTenantAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ]
            },
            "put": {
                "summary": "Update tenant API key",
                "description": "Updates an existing tenant API key's configuration",
                "operationId": "UpdateTenantAPIKey",
                "responses": {
                    "200": {
                        "description": "Tenant API key updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateTenantAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants/api-keys/list": {
            "get": {
                "summary": "List tenant API keys",
                "description": "Retrieves all API keys for a specific tenant",
                "operationId": "ListTenantAPIKeys",
                "responses": {
                    "200": {
                        "description": "Tenant API keys retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListTenantAPIKeysResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants/api-keys/rotate": {
            "post": {
                "summary": "Rotate tenant API key",
                "description": "Rotates a tenant API key while maintaining its configuration",
                "operationId": "RotateTenantAPIKey",
                "responses": {
                    "200": {
                        "description": "Tenant API key rotated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RotateTenantAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RotateTenantAPIKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RotateTenantAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants/api-keys/{keyId}": {
            "get": {
                "summary": "Get tenant API key details",
                "description": "Retrieves details of a specific tenant API key",
                "operationId": "GetTenantAPIKey",
                "responses": {
                    "200": {
                        "description": "Tenant API key retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTenantAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete tenant API key",
                "description": "Permanently deletes a tenant API key",
                "operationId": "DeleteTenantAPIKey",
                "responses": {
                    "200": {
                        "description": "Tenant API key deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteTenantAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/tenants/{organizationId}/{tenantId}": {
            "get": {
                "summary": "Get tenant details",
                "description": "Retrieves details of a specific tenant",
                "operationId": "GetTenant",
                "responses": {
                    "200": {
                        "description": "Tenant retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/organizations/{organizationId}/tenants": {
            "post": {
                "summary": "Create a new tenant",
                "description": "Creates a new tenant in the system",
                "operationId": "CreateTenant",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTenantResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Tenant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTenantResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/webhooks": {
            "get": {
                "summary": "List webhooks",
                "description": "Lists all webhook configurations with pagination",
                "operationId": "ListWebhooks",
                "responses": {
                    "200": {
                        "description": "Webhooks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWebhooksResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create webhook",
                "description": "Creates a new webhook configuration for event notifications",
                "operationId": "CreateWebhook",
                "responses": {
                    "200": {
                        "description": "Webhook created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWebhookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWebhookRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWebhookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update webhook",
                "description": "Updates an existing webhook configuration",
                "operationId": "UpdateWebhook",
                "responses": {
                    "200": {
                        "description": "Webhook updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWebhookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebhookRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebhookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/webhooks/{webhookId}": {
            "get": {
                "summary": "Get webhook",
                "description": "Retrieves details of a specific webhook configuration",
                "operationId": "GetWebhook",
                "responses": {
                    "200": {
                        "description": "Webhook retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWebhookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete webhook",
                "description": "Deletes a webhook configuration",
                "operationId": "DeleteWebhook",
                "responses": {
                    "200": {
                        "description": "Webhook deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWebhookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "workspaceId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspace": {
            "put": {
                "summary": "Update workspace details",
                "description": "Updates the details of a specific workspace",
                "operationId": "UpdateWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspace/{id}": {
            "get": {
                "summary": "Get workspace details",
                "description": "Retrieves details of a specific workspace",
                "operationId": "GetWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete a workspace",
                "description": "Deletes a specific workspace",
                "operationId": "DeleteWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces": {
            "get": {
                "summary": "List workspaces",
                "description": "Retrieves a list of workspaces for a given account",
                "operationId": "ListWorkspaces",
                "responses": {
                    "200": {
                        "description": "Workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspacesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new workspace",
                "description": "Creates a new workspace for a given account",
                "operationId": "CreateWorkspace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/workflow": {
            "put": {
                "summary": "Update workflow details",
                "description": "Updates the details of a specific workflow",
                "operationId": "UpdateWorkflow",
                "responses": {
                    "200": {
                        "description": "Workflow updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkflowRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkflowRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/{workspaceId}/analytics": {
            "get": {
                "summary": "Get workspace analytics",
                "description": "Retrieves analytics data for a specific workspace",
                "operationId": "GetWorkspaceAnalytics",
                "responses": {
                    "200": {
                        "description": "Analytics data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceAnalyticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/{workspaceId}/workflows": {
            "get": {
                "summary": "List workflows",
                "description": "Retrieves a list of workflows for a given workspace",
                "operationId": "ListWorkflows",
                "responses": {
                    "200": {
                        "description": "Workflows retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkflowsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organizationId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new workflow",
                "description": "Creates a new workflow for a specific workspace",
                "operationId": "CreateWorkflow",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkflowResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Workflow created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkflowBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkflowBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/{workspaceId}/workflows/{id}": {
            "get": {
                "summary": "Get workflow details",
                "description": "Retrieves details of a specific workflow",
                "operationId": "GetWorkflow",
                "responses": {
                    "200": {
                        "description": "Workflow retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete workflow",
                "description": "Deletes a specific workflow",
                "operationId": "DeleteWorkflow",
                "responses": {
                    "200": {
                        "description": "Workflow deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/{workspaceId}/workflows/{id}/pause": {
            "post": {
                "summary": "Pause workflow execution",
                "description": "Pauses the execution of a specific workflow",
                "operationId": "PauseWorkflow",
                "responses": {
                    "200": {
                        "description": "Workflow paused successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PauseWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PauseWorkflowBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PauseWorkflowBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/lead-scraper-microservice/api/v1/workspaces/{workspaceId}/workflows/{id}/trigger": {
            "post": {
                "summary": "Trigger workflow execution",
                "description": "Triggers the execution of a specific workflow",
                "operationId": "TriggerWorkflow",
                "responses": {
                    "200": {
                        "description": "Workflow triggered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TriggerWorkflowResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\",\"constraint\":\"email\",\"value\":\"invalid-email\"}],\"schema_validation\":{\"schema_version\":\"v1\",\"invalid_patterns\":[\"email_format\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\",\"token_info\":{\"token_type\":\"Bearer\"},\"auth_context\":{\"required_scopes\":[\"read:user\"]},\"oauth2_info\":{\"authorization_url\":\"https://solomon-ai.io/oauth/authorize\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Payment Required - Payment is necessary to proceed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentRequiredErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":402,\"message\":\"Payment Required\",\"payment_info\":{\"amount_due\":29.99,\"currency\":\"USD\",\"due_date\":\"2024-01-01T00:00:00Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":403,\"message\":\"Forbidden\",\"reason\":\"Insufficient permissions\",\"required_permissions\":[\"admin\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\",\"resource_info\":{\"type\":\"user\",\"id\":\"123\",\"path\":\"/user-microservice/api/v2/users/123\"},\"suggestions\":{\"alternative_paths\":[\"/user-microservice/api/v2/users\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed - HTTP method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MethodNotAllowedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":405,\"message\":\"Method Not Allowed\",\"allowed_methods\":[\"GET\",\"POST\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\",\"conflict_info\":{\"resource_type\":\"user\",\"identifier\":\"user@example.com\",\"conflict_reason\":\"Email already registered\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Gone - Resource is no longer available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GoneErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":410,\"message\":\"Gone\",\"resource\":\"/api/v1/users\"}"
                                    }
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Precondition Failed - Preconditions in headers did not match",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreconditionFailedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":412,\"message\":\"Precondition Failed\",\"failed_conditions\":[\"If-Match header does not match\"]}"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Semantic errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableEntityErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":422,\"message\":\"Unprocessable Entity\",\"errors\":[{\"field\":\"email\",\"error\":\"Invalid format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "425": {
                        "description": "Too Early - Request is being replayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TooEarlyErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":425,\"message\":\"Too Early\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\",\"limit_info\":{\"current\":150,\"limit\":100,\"window_size\":\"1m\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\",\"incident_id\":\"inc-123\",\"service_status\":{\"name\":\"user-service\",\"status\":\"degraded\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Not Implemented - Functionality not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotImplementedErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":501,\"message\":\"Not Implemented\",\"feature\":\"User Deletion\"}"
                                    }
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway - Invalid response from upstream server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadGatewayErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":502,\"message\":\"Bad Gateway\",\"upstream_service\":\"Auth Service\"}"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable - Try again later",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceUnavailableErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":503,\"message\":\"Service Unavailable\"},\"error_code\":4300,\"message\":\"Service is temporarily unavailable\",\"availability_info\":{\"retry_after\":60,\"affected_services\":[\"user-service\"]}}"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout - Upstream server timed out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayTimeoutErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"code\":504,\"message\":\"Gateway Timeout\",\"upstream_service\":\"Database\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpc.Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerWorkflowBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TriggerWorkflowBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "lead-scraper-service"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ]
            }
        },
        "/workspace-service/v1/accounts": {
            "post": {
                "summary": "Create a new account",
                "description": "Creates a new user account with initial workspace",
                "operationId": "CreateAccount1",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse1"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"user@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\"],\"permissions\":[\"read:workspace\",\"write:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_BASIC\"},\"initial_workspace_name\":\"My Workspace\"}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest1"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest1"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            },
            "put": {
                "summary": "Update account details",
                "operationId": "UpdateAccount1",
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"updated@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\",\"admin\"],\"permissions\":[\"read:workspace\",\"write:workspace\",\"manage:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_ADVANCED\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest1"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest1"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/accounts/{id}": {
            "get": {
                "summary": "Get account details",
                "operationId": "GetAccount1",
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"user@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\"],\"permissions\":[\"read:workspace\",\"write:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_BASIC\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            },
            "delete": {
                "summary": "Delete account",
                "operationId": "DeleteAccount1",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspace-sharings": {
            "put": {
                "summary": "Update workspace sharing",
                "operationId": "UpdateWorkspaceSharing",
                "responses": {
                    "200": {
                        "description": "Workspace sharing updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceSharingResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharing\":{\"id\":\"456\",\"shared_with_email\":\"collaborator@example.com\",\"permission_level\":\"admin\",\"expires_at\":\"2025-12-31T23:59:59Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceSharingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceSharingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspace-sharings/{sharingId}": {
            "delete": {
                "summary": "Remove workspace sharing",
                "operationId": "RemoveWorkspaceSharing",
                "responses": {
                    "200": {
                        "description": "Workspace sharing removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveWorkspaceSharingResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "sharingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces": {
            "post": {
                "summary": "Create workspace",
                "operationId": "CreateWorkspace1",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse1"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X\",\"storage_quota\":1073741824,\"allow_public_sharing\":false,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":false}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest1"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest1"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            },
            "put": {
                "summary": "Update workspace",
                "operationId": "UpdateWorkspace1",
                "responses": {
                    "200": {
                        "description": "Workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X - Updated\",\"storage_quota\":2147483648,\"allow_public_sharing\":true,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":true}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/analytics/{workspaceId}": {
            "get": {
                "summary": "Get workspace analytics",
                "operationId": "GetWorkspaceAnalytics1",
                "responses": {
                    "200": {
                        "description": "Analytics data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceAnalyticsResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"activity\":{\"total_files\":150,\"total_folders\":25,\"active_users\":10,\"storage_used\":524288000,\"storage_usage_percentage\":48.8},\"user_activities\":[{\"user_id\":\"123\",\"email\":\"user@example.com\",\"file_operations\":45,\"comments_made\":12,\"documents_processed\":8}],\"compliance\":{\"gdpr_compliance_score\":0.95,\"hipaa_compliance_score\":0.88,\"pending_approvals\":3,\"compliance_violations\":1}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/compliance-report/{workspaceId}": {
            "get": {
                "summary": "Get compliance report",
                "operationId": "GetWorkspaceComplianceReport",
                "responses": {
                    "200": {
                        "description": "Compliance report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceComplianceReportResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"overall_score\":0.92,\"compliance_status\":\"compliant\",\"violations\":[{\"rule_id\":\"GDPR-001\",\"severity\":\"medium\",\"description\":\"Missing data retention policy\",\"affected_resources\":[\"doc-123\",\"doc-456\"],\"remediation_steps\":\"Set up data retention policy\"}],\"category_scores\":[{\"category\":\"Data Protection\",\"score\":0.95,\"status\":\"passed\",\"improvements\":[\"Enable encryption at rest\"]}]}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "complianceType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/list": {
            "get": {
                "summary": "List workspaces",
                "operationId": "ListWorkspaces1",
                "responses": {
                    "200": {
                        "description": "Workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspacesResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspaces\":[{\"id\":\"789\",\"name\":\"Project X\"},{\"id\":\"790\",\"name\":\"Project Y\"}],\"next_page_token\":\"token456\",\"total_size\":25}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/sharings/{workspaceId}": {
            "get": {
                "summary": "List workspace sharings",
                "operationId": "ListWorkspaceSharings",
                "responses": {
                    "200": {
                        "description": "Workspace sharings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspaceSharingsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharings\":[{\"id\":\"456\",\"shared_with_email\":\"user1@example.com\",\"permission_level\":\"editor\"},{\"id\":\"457\",\"shared_with_email\":\"user2@example.com\",\"permission_level\":\"viewer\"}],\"next_page_token\":\"token789\",\"total_size\":10}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/storage-stats/{workspaceId}": {
            "get": {
                "summary": "Get storage statistics",
                "operationId": "GetWorkspaceStorageStats",
                "responses": {
                    "200": {
                        "description": "Storage statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceStorageStatsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"total_storage_used\":524288000,\"storage_quota\":1073741824,\"usage_percentage\":48.8,\"storage_by_type\":[{\"file_type\":\"pdf\",\"size\":262144000,\"file_count\":75},{\"file_type\":\"docx\",\"size\":131072000,\"file_count\":45}],\"total_files\":150,\"total_folders\":25}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/{id}": {
            "get": {
                "summary": "Get workspace details",
                "operationId": "GetWorkspace1",
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X\",\"storage_quota\":1073741824,\"used_storage\":52428800,\"allow_public_sharing\":false,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":false}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            },
            "delete": {
                "summary": "Delete workspace",
                "operationId": "DeleteWorkspace1",
                "responses": {
                    "200": {
                        "description": "Workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/{workspaceId}/share": {
            "post": {
                "summary": "Share workspace",
                "operationId": "ShareWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace shared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShareWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharing\":{\"id\":\"456\",\"shared_with_email\":\"collaborator@example.com\",\"permission_level\":\"editor\",\"expires_at\":\"2024-12-31T23:59:59Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse1"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareWorkspaceBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareWorkspaceBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "APIInfo": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "title": "API version used"
                    },
                    "supportedVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Supported API versions"
                    },
                    "isDeprecated": {
                        "type": "boolean",
                        "title": "Whether endpoint is deprecated"
                    },
                    "sunsetDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When endpoint will be removed"
                    }
                }
            },
            "APIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Unique identifier"
                    },
                    "name": {
                        "type": "string",
                        "title": "Human-readable name for the key"
                    },
                    "keyHash": {
                        "type": "string",
                        "title": "The actual API key value (hashed in storage)"
                    },
                    "keyPrefix": {
                        "type": "string",
                        "title": "Key prefix for display/reference (first 8 chars)"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Access control and permissions"
                    },
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedEnvironments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "e.g., dev, staging, prod"
                    },
                    "isTestKey": {
                        "type": "boolean",
                        "title": "Indicates if this is a test API key"
                    },
                    "requestsPerSecond": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Rate limiting and quotas"
                    },
                    "requestsPerDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "concurrentRequests": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "monthlyRequestQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "costPerRequest": {
                        "type": "number",
                        "format": "float",
                        "title": "For usage-based billing"
                    },
                    "billingTier": {
                        "type": "string",
                        "title": "e.g., free, basic, premium"
                    },
                    "totalRequests": {
                        "type": "string",
                        "format": "int64",
                        "title": "Usage tracking and analytics"
                    },
                    "totalErrors": {
                        "type": "string",
                        "format": "int64"
                    },
                    "lastUsedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "averageResponseTime": {
                        "type": "number",
                        "format": "float"
                    },
                    "endpointUsageJson": {
                        "type": "string",
                        "format": "byte",
                        "description": "Tracks usage per endpoint",
                        "title": "Store maps as JSONB in PostgreSQL"
                    },
                    "errorRatesJson": {
                        "type": "string",
                        "format": "byte",
                        "title": "Error rates by error type"
                    },
                    "recentErrors": {
                        "type": "string",
                        "format": "byte",
                        "title": "Recent error details with timestamps"
                    },
                    "successfulRequestsCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "successRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v1.Status"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamps"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastRotatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastSecurityReviewAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requiresClientSecret": {
                        "type": "boolean",
                        "title": "Security features"
                    },
                    "clientSecretHash": {
                        "type": "string"
                    },
                    "enforceHttps": {
                        "type": "boolean"
                    },
                    "enforceSigning": {
                        "type": "boolean"
                    },
                    "allowedSignatureAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enforceMutualTls": {
                        "type": "boolean"
                    },
                    "clientCertificateHash": {
                        "type": "string"
                    },
                    "requireRequestSigning": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of key usage",
                        "title": "Developer experience"
                    },
                    "metadataJson": {
                        "type": "string",
                        "format": "byte",
                        "title": "Custom metadata stored as JSONB"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiVersion": {
                        "type": "string",
                        "title": "API version this key is valid for"
                    },
                    "supportedFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "documentationUrl": {
                        "type": "string"
                    },
                    "supportContact": {
                        "type": "string"
                    },
                    "logAllRequests": {
                        "type": "boolean",
                        "title": "Compliance and auditing"
                    },
                    "lastRotationReason": {
                        "type": "string"
                    },
                    "lastRotationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "rotationFrequencyDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "complianceStandards": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "e.g., SOC2, GDPR"
                    },
                    "requiresAuditLogging": {
                        "type": "boolean"
                    },
                    "dataResidency": {
                        "type": "string",
                        "title": "Geographic location of data storage"
                    },
                    "approvedIntegrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alertEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Monitoring and alerts"
                    },
                    "webhookUrl": {
                        "type": "string"
                    },
                    "alertOnQuotaThreshold": {
                        "type": "boolean"
                    },
                    "quotaAlertThreshold": {
                        "type": "number",
                        "format": "float"
                    },
                    "alertOnErrorSpike": {
                        "type": "boolean"
                    },
                    "errorAlertThreshold": {
                        "type": "number",
                        "format": "float"
                    },
                    "monitoringIntegrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "encrypted": {
                        "type": "boolean"
                    },
                    "dataClassification": {
                        "type": "string"
                    },
                    "maxUses": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rateLimit": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "APIKey represents an authentication token for accessing the API.\nIt includes features for rate limiting, permissions, and usage tracking.\n\nKey features:\n- Unique key identification\n- Scope-based access control\n- Rate limiting\n- Usage tracking\n- Expiration management\n- Multi-tenant support\n\nDatabase considerations:\n- Uses GORM for ORM mapping\n- Includes indexes for efficient querying\n- Supports soft deletes\n\nUsage example:\n```go\napiKey := &APIKey{\n    Name: \"Production API Key\",\n    Scopes: []string{\"leads:read\", \"leads:write\"},\n    ExpiresAt: timestamppb.New(time.Now().AddDate(1, 0, 0)),\n}\n```"
            },
            "Account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Unique identifier for the account"
                    },
                    "authPlatformUserId": {
                        "type": "string",
                        "title": "Auth0 user identifier for authentication"
                    },
                    "email": {
                        "type": "string",
                        "title": "User's email address"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Soft delete timestamp"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Account creation timestamp"
                    },
                    "accountStatus": {
                        "$ref": "#/components/schemas/AccountStatus"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "mfaEnabled": {
                        "type": "boolean",
                        "title": "Security settings"
                    },
                    "lastLoginAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/Timezone"
                    },
                    "totalJobsRun": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Usage tracking"
                    },
                    "monthlyJobLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "concurrentJobLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace"
                        },
                        "title": "Relationships"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/AccountSettings"
                    }
                },
                "description": "Account represents a user account within the workspace service.\nIt serves as the top-level container for all user-specific workspaces and settings.\n\nKey features:\n- Unique identification via Auth0\n- Organization and tenant context\n- Audit timestamps\n- Associated scraping jobs\n\nDatabase considerations:\n- Uses GORM for ORM mapping\n- Includes indexes for efficient querying\n- Supports soft deletes via deleted_at\n\nUsage example:\n```go\naccount := &Account{\n    AuthPlatformUserId: \"auth0|123\",\n    OrgId: \"org_123\",\n    TenantId: \"tenant_456\",\n}\n```"
            },
            "AccountSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "emailNotifications": {
                        "type": "boolean",
                        "title": "Notification preferences"
                    },
                    "slackNotifications": {
                        "type": "boolean"
                    },
                    "defaultDataRetention": {
                        "type": "string",
                        "title": "Data retention"
                    },
                    "autoPurgeEnabled": {
                        "type": "boolean"
                    },
                    "require2fa": {
                        "type": "boolean",
                        "title": "Security"
                    },
                    "sessionTimeout": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Account-wide settings"
            },
            "AccountStatus": {
                "type": "string",
                "enum": [
                    "ACCOUNT_STATUS_UNSPECIFIED",
                    "ACCOUNT_STATUS_ACTIVE",
                    "ACCOUNT_STATUS_SUSPENDED",
                    "ACCOUNT_STATUS_PENDING_VERIFICATION"
                ],
                "default": "ACCOUNT_STATUS_UNSPECIFIED",
                "title": "Account status and permissions"
            },
            "Any": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "AuthContext": {
                "type": "object",
                "properties": {
                    "requiredScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Scopes required for the operation"
                    },
                    "providedScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Scopes present in the token"
                    },
                    "missingPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Permissions that were missing"
                    },
                    "tenantId": {
                        "type": "string",
                        "title": "Tenant context if applicable"
                    }
                }
            },
            "AuthErrorCode": {
                "type": "string",
                "enum": [
                    "NO_AUTH_ERROR",
                    "AUTH_FAILED_INVALID_BEARER_TOKEN",
                    "AUTH_FAILED_INVALID_SUBJECT",
                    "AUTH_FAILED_INVALID_AUDIENCE",
                    "AUTH_FAILED_INVALID_ISSUER",
                    "BEARER_TOKEN_MISSING",
                    "TOKEN_EXPIRED",
                    "TOKEN_NOT_ACTIVE",
                    "TOKEN_REVOKED",
                    "INVALID_CLAIMS",
                    "MISSING_REQUIRED_CLAIMS",
                    "INVALID_SCOPE",
                    "INVALID_PERMISSIONS",
                    "SESSION_EXPIRED",
                    "SESSION_INVALID",
                    "SESSION_REVOKED",
                    "UNAUTHENTICATED",
                    "MULTI_FACTOR_REQUIRED",
                    "MULTI_FACTOR_FAILED",
                    "ACCOUNT_LOCKED",
                    "ACCOUNT_DISABLED",
                    "PASSWORD_EXPIRED",
                    "PASSWORD_RESET_REQUIRED",
                    "UNRECOGNIZED_DEVICE"
                ],
                "default": "NO_AUTH_ERROR",
                "description": "- AUTH_FAILED_INVALID_BEARER_TOKEN: Authentication errors\n - SESSION_EXPIRED: Session errors\n - UNAUTHENTICATED: Other authentication errors\n - ACCOUNT_LOCKED: New authentication error codes\n\nAccount is locked due to too many failed login attempts\n - ACCOUNT_DISABLED: Account has been disabled by admin\n - PASSWORD_EXPIRED: Password has expired and must be changed\n - PASSWORD_RESET_REQUIRED: Password reset is required\n - UNRECOGNIZED_DEVICE: Login attempt from an unrecognized device",
                "title": "Enhanced AuthErrorCode represents authentication-related error codes"
            },
            "AuthenticationErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 1001,
                    "message": "Authentication failed",
                    "token_info": {
                        "token_id": "t-123",
                        "expiry": "2024-01-01T00:00:00.000Z"
                    },
                    "auth_context": {
                        "required_scopes": [
                            "read",
                            "write"
                        ],
                        "provided_scopes": [
                            "read"
                        ]
                    },
                    "session_info": {
                        "session_id": "s-456",
                        "last_active": "2024-01-01T00:00:00.000Z"
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/AuthErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "tokenInfo": {
                        "$ref": "#/components/schemas/TokenInfo"
                    },
                    "authContext": {
                        "$ref": "#/components/schemas/AuthContext"
                    },
                    "sessionInfo": {
                        "$ref": "#/components/schemas/SessionInfo"
                    },
                    "mfaInfo": {
                        "$ref": "#/components/schemas/MFAInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents authentication and authorization failures",
                "title": "Authentication Error Response"
            },
            "AvailabilityInfo": {
                "type": "object",
                "properties": {
                    "retryAfter": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Seconds to wait before retrying"
                    },
                    "maintenanceWindow": {
                        "type": "string",
                        "title": "Scheduled maintenance information"
                    },
                    "affectedServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of affected services"
                    },
                    "statusPageUrl": {
                        "type": "string",
                        "title": "URL to service status page"
                    }
                }
            },
            "BackgroundJobStatus": {
                "type": "string",
                "enum": [
                    "BACKGROUND_JOB_STATUS_UNSPECIFIED",
                    "BACKGROUND_JOB_STATUS_QUEUED",
                    "BACKGROUND_JOB_STATUS_IN_PROGRESS",
                    "BACKGROUND_JOB_STATUS_COMPLETED",
                    "BACKGROUND_JOB_STATUS_FAILED",
                    "BACKGROUND_JOB_STATUS_CANCELLED",
                    "BACKGROUND_JOB_STATUS_TIMED_OUT"
                ],
                "default": "BACKGROUND_JOB_STATUS_UNSPECIFIED",
                "description": "BackgroundJobStatus represents the possible states of a background job.\nThis enum is used to track the lifecycle of asynchronous tasks like scraping jobs.\n\nState transitions:\n1. QUEUED -> IN_PROGRESS\n2. IN_PROGRESS -> COMPLETED/FAILED/CANCELLED/TIMED_OUT\n\nUsage example:\n```go\njob := &ScrapingJob{\n    Status: BackgroundJobStatus_BACKGROUND_JOB_STATUS_IN_PROGRESS,\n}\n```\n\n - BACKGROUND_JOB_STATUS_UNSPECIFIED: Default state, should not be used explicitly\n - BACKGROUND_JOB_STATUS_QUEUED: Job is queued and waiting to be processed\n - BACKGROUND_JOB_STATUS_IN_PROGRESS: Job is currently being processed\n - BACKGROUND_JOB_STATUS_COMPLETED: Job has completed successfully\n - BACKGROUND_JOB_STATUS_FAILED: Job encountered an error and failed\n - BACKGROUND_JOB_STATUS_CANCELLED: Job was manually cancelled by user\n - BACKGROUND_JOB_STATUS_TIMED_OUT: Job exceeded its maximum execution time"
            },
            "BadGatewayErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 502,
                    "message": "Bad Gateway",
                    "upstream_service": "Auth Service"
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (502)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "upstreamService": {
                        "type": "string",
                        "title": "Name of the upstream service"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when the server received an invalid response from an upstream server",
                "title": "Bad Gateway Error Response"
            },
            "BillingMode": {
                "type": "string",
                "enum": [
                    "BILLING_MODE_UNSPECIFIED",
                    "BILLING_MODE_LICENSED",
                    "BILLING_MODE_METERED",
                    "BILLING_MODE_HYBRID"
                ],
                "default": "BILLING_MODE_UNSPECIFIED",
                "description": "- BILLING_MODE_LICENSED: Fixed price per seat\n - BILLING_MODE_METERED: Usage-based\n - BILLING_MODE_HYBRID: Base price + usage",
                "title": "Billing Mode"
            },
            "BillingPlan": {
                "type": "string",
                "enum": [
                    "BILLING_PLAN_UNSPECIFIED",
                    "BILLING_PLAN_STARTUP",
                    "BILLING_PLAN_BUSINESS",
                    "BILLING_PLAN_ENTERPRISE"
                ],
                "default": "BILLING_PLAN_UNSPECIFIED",
                "title": "Billing"
            },
            "BusinessHours": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "day": {
                        "$ref": "#/components/schemas/DayOfWeek"
                    },
                    "openTime": {
                        "type": "string"
                    },
                    "closeTime": {
                        "type": "string"
                    },
                    "closed": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Temporal data"
            },
            "ConflictErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 2300,
                    "message": "Resource already exists",
                    "conflict_info": {
                        "resource_type": "user",
                        "identifier": "email@example.com"
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ValidationErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "conflictInfo": {
                        "$ref": "#/components/schemas/ConflictInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents resource conflict errors",
                "title": "Conflict Error Response"
            },
            "ConflictInfo": {
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "conflictReason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string"
                    }
                }
            },
            "CreateAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "maxUses": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rateLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enforceSigning": {
                        "type": "boolean"
                    },
                    "allowedSignatureAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enforceMutualTls": {
                        "type": "boolean"
                    },
                    "alertEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "alertOnQuotaThreshold": {
                        "type": "boolean"
                    },
                    "quotaAlertThreshold": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "CreateAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/APIKey"
                    },
                    "keyValue": {
                        "type": "string",
                        "title": "The actual API key value - only returned on creation"
                    }
                }
            },
            "CreateAccountRequest": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "initialWorkspaceName": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    }
                },
                "title": "Account Management Messages"
            },
            "CreateAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "initialWorkspaceId": {
                        "type": "string"
                    }
                }
            },
            "CreateOrganizationRequest": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                },
                "title": "Organization Management Messages"
            },
            "CreateOrganizationResponse": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                }
            },
            "CreateScrapingJobRequest": {
                "type": "object",
                "properties": {
                    "authPlatformUserId": {
                        "type": "string",
                        "title": "User and context identification"
                    },
                    "orgId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string",
                        "title": "Job configuration"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lang": {
                        "type": "string",
                        "title": "ISO 639-1 language code"
                    },
                    "zoom": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lat": {
                        "type": "string"
                    },
                    "lon": {
                        "type": "string"
                    },
                    "fastMode": {
                        "type": "boolean"
                    },
                    "radius": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "depth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "type": "boolean"
                    },
                    "maxTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "title": "CreateScrapingJobRequest represents a request to create a new Google Maps scraping job",
                "required": [
                    "authPlatformUserId",
                    "orgId",
                    "tenantId"
                ]
            },
            "CreateScrapingJobResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BackgroundJobStatus"
                    }
                },
                "title": "CreateScrapingJobResponse represents the response after creating a scraping job"
            },
            "CreateTenantAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "apiKey": {
                        "$ref": "#/components/schemas/TenantAPIKey"
                    }
                }
            },
            "CreateTenantAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "keyId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "keyValue": {
                        "type": "string",
                        "title": "The actual API key value - only returned on creation"
                    }
                }
            },
            "CreateTenantBody": {
                "type": "object",
                "properties": {
                    "tenant": {
                        "$ref": "#/components/schemas/Tenant"
                    }
                },
                "title": "Tenant Management Messages"
            },
            "CreateTenantResponse": {
                "type": "object",
                "properties": {
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "CreateWebhookRequest": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "webhook": {
                        "$ref": "#/components/schemas/WebhookConfig"
                    }
                }
            },
            "CreateWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/WebhookConfig"
                    }
                }
            },
            "CreateWorkflowBody": {
                "type": "object",
                "properties": {
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                },
                "title": "Workflow Management Messages"
            },
            "CreateWorkflowResponse": {
                "type": "object",
                "properties": {
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                }
            },
            "CreateWorkspaceRequest": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    }
                },
                "title": "Workspace Management Messages"
            },
            "CreateWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    }
                }
            },
            "DayOfWeek": {
                "type": "string",
                "enum": [
                    "DAY_OF_WEEK_UNSPECIFIED",
                    "DAY_OF_WEEK_MONDAY",
                    "DAY_OF_WEEK_TUESDAY",
                    "DAY_OF_WEEK_WEDNESDAY",
                    "DAY_OF_WEEK_THURSDAY",
                    "DAY_OF_WEEK_FRIDAY",
                    "DAY_OF_WEEK_SATURDAY",
                    "DAY_OF_WEEK_SUNDAY"
                ],
                "default": "DAY_OF_WEEK_UNSPECIFIED"
            },
            "DeleteAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteAccountResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteOrganizationResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteScrapingJobResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                },
                "title": "DeleteScrapingJobResponse represents the response after deleting a scraping job"
            },
            "DeleteTenantAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteTenantResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteWebhookResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteWorkflowResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "Dependency": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Dependency name"
                    },
                    "status": {
                        "type": "string",
                        "title": "Dependency status"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error if any"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Current latency in ms"
                    }
                }
            },
            "DownloadScrapingResultsResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "format": "byte"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    }
                },
                "title": "DownloadScrapingResultsResponse represents the response containing job results"
            },
            "EmployeeBenefit": {
                "type": "string",
                "enum": [
                    "EMPLOYEE_BENEFIT_UNSPECIFIED",
                    "EMPLOYEE_BENEFIT_HEALTH_INSURANCE",
                    "EMPLOYEE_BENEFIT_RETIREMENT_PLAN",
                    "EMPLOYEE_BENEFIT_PAID_TIME_OFF",
                    "EMPLOYEE_BENEFIT_REMOTE_WORK"
                ],
                "default": "EMPLOYEE_BENEFIT_UNSPECIFIED",
                "title": "Employee & HR Data"
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    }
                },
                "title": "Base error message response, extending google.rpc.Status"
            },
            "FieldError": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "title": "Field with error"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error description"
                    }
                }
            },
            "FieldViolation": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "title": "Field that failed validation"
                    },
                    "validation": {
                        "type": "string",
                        "title": "Type of validation that failed"
                    },
                    "message": {
                        "type": "string",
                        "title": "Specific error message"
                    },
                    "expected": {
                        "type": "string",
                        "title": "Expected value or format"
                    },
                    "actual": {
                        "type": "string",
                        "title": "Actual value provided"
                    }
                }
            },
            "ForbiddenErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 403,
                    "message": "Forbidden",
                    "reason": "Insufficient permissions",
                    "required_permissions": [
                        "admin"
                    ]
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (403)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "reason": {
                        "type": "string",
                        "title": "Reason for the forbidden access"
                    },
                    "requiredPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Permissions required to access the resource"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Indicates that the server understood the request but refuses to authorize it",
                "title": "Forbidden Error Response"
            },
            "GatewayTimeoutErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 504,
                    "message": "Gateway Timeout",
                    "upstream_service": "Database"
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (504)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "upstreamService": {
                        "type": "string",
                        "title": "Name of the upstream service"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when the server did not receive a timely response from an upstream server",
                "title": "Gateway Timeout Error Response"
            },
            "GetAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/APIKey"
                    }
                }
            },
            "GetAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "GetAccountUsageResponse": {
                "type": "object",
                "properties": {
                    "totalJobsRun": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "monthlyJobLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "remainingJobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resetTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "AccountUsage represents the usage details of an account"
            },
            "GetLeadResponse": {
                "type": "object",
                "properties": {
                    "lead": {
                        "$ref": "#/components/schemas/Lead"
                    }
                }
            },
            "GetOrganizationResponse": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                }
            },
            "GetScrapingJobResponse": {
                "type": "object",
                "properties": {
                    "job": {
                        "$ref": "#/components/schemas/ScrapingJob"
                    }
                },
                "title": "GetScrapingJobResponse represents the response containing scraping job details"
            },
            "GetTenantAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/TenantAPIKey"
                    }
                }
            },
            "GetTenantResponse": {
                "type": "object",
                "properties": {
                    "tenant": {
                        "$ref": "#/components/schemas/Tenant"
                    }
                }
            },
            "GetWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/WebhookConfig"
                    }
                }
            },
            "GetWorkflowResponse": {
                "type": "object",
                "properties": {
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                }
            },
            "GetWorkspaceAnalyticsResponse": {
                "type": "object",
                "properties": {
                    "totalLeads": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "activeWorkflows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobsLast30Days": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "successRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobSuccessRate"
                        }
                    }
                }
            },
            "GetWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace1"
                    }
                }
            },
            "GoneErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 410,
                    "message": "Gone",
                    "resource": "/api/v1/users"
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (410)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "resource": {
                        "type": "string",
                        "title": "Resource that is gone"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Indicates that the resource requested is no longer available and will not be available again",
                "title": "Gone Error Response"
            },
            "IncludedField": {
                "type": "string",
                "enum": [
                    "INCLUDED_FIELD_UNSPECIFIED",
                    "INCLUDED_FIELD_NAME",
                    "INCLUDED_FIELD_WEBSITE",
                    "INCLUDED_FIELD_PHONE",
                    "INCLUDED_FIELD_ADDRESS",
                    "INCLUDED_FIELD_LOCATION",
                    "INCLUDED_FIELD_COORDINATES",
                    "INCLUDED_FIELD_GOOGLE_RATING",
                    "INCLUDED_FIELD_REVIEW_COUNT",
                    "INCLUDED_FIELD_REVIEWS",
                    "INCLUDED_FIELD_BUSINESS_HOURS",
                    "INCLUDED_FIELD_BUSINESS_STATUS",
                    "INCLUDED_FIELD_PLACE_ID",
                    "INCLUDED_FIELD_GOOGLE_MAPS_URL",
                    "INCLUDED_FIELD_PHOTOS",
                    "INCLUDED_FIELD_MAIN_PHOTO",
                    "INCLUDED_FIELD_BUSINESS_TYPES",
                    "INCLUDED_FIELD_AMENITIES",
                    "INCLUDED_FIELD_PAYMENT_METHODS",
                    "INCLUDED_FIELD_SOCIAL_PROFILES",
                    "INCLUDED_FIELD_EMPLOYEE_COUNT",
                    "INCLUDED_FIELD_REVENUE_INFO",
                    "INCLUDED_FIELD_FOUNDED_YEAR",
                    "INCLUDED_FIELD_CERTIFICATIONS",
                    "INCLUDED_FIELD_NAICS_CODE",
                    "INCLUDED_FIELD_SIC_CODE",
                    "INCLUDED_FIELD_SCRAPING_METADATA",
                    "INCLUDED_FIELD_COMPLIANCE_INFO",
                    "INCLUDED_FIELD_ALTERNATE_PHONES",
                    "INCLUDED_FIELD_CONTACT_PERSON",
                    "INCLUDED_FIELD_CONTACT_EMAIL"
                ],
                "default": "INCLUDED_FIELD_UNSPECIFIED",
                "description": "- INCLUDED_FIELD_NAME: Core business information\n - INCLUDED_FIELD_LOCATION: city, state, country\n - INCLUDED_FIELD_COORDINATES: Geographic data\n\nlatitude, longitude\n - INCLUDED_FIELD_GOOGLE_RATING: Ratings and reviews\n - INCLUDED_FIELD_BUSINESS_HOURS: Business details\n - INCLUDED_FIELD_PHOTOS: Rich media\n - INCLUDED_FIELD_BUSINESS_TYPES: Categories and attributes\n - INCLUDED_FIELD_SOCIAL_PROFILES: Social media\n - INCLUDED_FIELD_EMPLOYEE_COUNT: Enhanced business data\n - INCLUDED_FIELD_NAICS_CODE: Industry classification\n - INCLUDED_FIELD_SCRAPING_METADATA: Metadata\n\ntimestamps, session info\n - INCLUDED_FIELD_COMPLIANCE_INFO: sustainability, certifications\n - INCLUDED_FIELD_ALTERNATE_PHONES: Contact information",
                "title": "Payload customization with enum - aligned with Lead message fields"
            },
            "InternalErrorCode": {
                "type": "string",
                "enum": [
                    "NO_INTERNAL_ERROR",
                    "INTERNAL_ERROR",
                    "DATA_CORRUPTION",
                    "DATABASE_ERROR",
                    "CACHE_ERROR",
                    "RESOURCE_EXHAUSTED",
                    "QUOTA_EXCEEDED",
                    "RATE_LIMIT_EXCEEDED",
                    "CANCELLED",
                    "DEADLINE_EXCEEDED",
                    "ALREADY_EXISTS",
                    "FAILED_PRECONDITION",
                    "ABORTED",
                    "OUT_OF_RANGE",
                    "UNAVAILABLE",
                    "DATA_LOSS",
                    "SERVICE_DEGRADED",
                    "DEPENDENCY_FAILURE",
                    "CONFIGURATION_ERROR",
                    "SECURITY_BREACH_DETECTED"
                ],
                "default": "NO_INTERNAL_ERROR",
                "description": "- INTERNAL_ERROR: General internal errors\n - RESOURCE_EXHAUSTED: Resource exhaustion errors\n - CANCELLED: Operation errors\n - UNAVAILABLE: Availability errors\n - DEPENDENCY_FAILURE: New internal error codes\n\nFailure in external dependency\n - CONFIGURATION_ERROR: Service configuration error\n - SECURITY_BREACH_DETECTED: Potential security breach detected",
                "title": "Enhanced InternalErrorCode represents server-side error codes"
            },
            "InternalErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 4000,
                    "message": "Internal server error",
                    "incident_id": "inc-789",
                    "service_status": {
                        "name": "user-service",
                        "status": "degraded",
                        "dependencies": [
                            {
                                "name": "db",
                                "status": "down"
                            }
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "incidentId": {
                        "type": "string",
                        "title": "Unique error tracking ID"
                    },
                    "serviceStatus": {
                        "$ref": "#/components/schemas/ServiceStatus"
                    },
                    "resourceUtilization": {
                        "$ref": "#/components/schemas/ResourceUtilization"
                    },
                    "operationDetails": {
                        "$ref": "#/components/schemas/OperationDetails"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents internal server and system-level errors",
                "title": "Internal Error Response"
            },
            "Interval": {
                "type": "string",
                "enum": [
                    "INTERVAL_UNSPECIFIED",
                    "INTERVAL_MONTHLY",
                    "INTERVAL_YEARLY"
                ],
                "default": "INTERVAL_UNSPECIFIED"
            },
            "JobSuccessRate": {
                "type": "object",
                "properties": {
                    "workflowId": {
                        "type": "string"
                    },
                    "successRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "totalRuns": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Language": {
                "type": "string",
                "enum": [
                    "LANGUAGE_UNSPECIFIED",
                    "LANGUAGE_ENGLISH",
                    "LANGUAGE_SPANISH",
                    "LANGUAGE_FRENCH",
                    "LANGUAGE_GERMAN",
                    "LANGUAGE_ITALIAN",
                    "LANGUAGE_PORTUGUESE",
                    "LANGUAGE_DUTCH",
                    "LANGUAGE_RUSSIAN",
                    "LANGUAGE_CHINESE",
                    "LANGUAGE_JAPANESE",
                    "LANGUAGE_KOREAN",
                    "LANGUAGE_ARABIC",
                    "LANGUAGE_HINDI",
                    "LANGUAGE_GREEK",
                    "LANGUAGE_TURKISH"
                ],
                "default": "LANGUAGE_UNSPECIFIED",
                "description": "- LANGUAGE_ENGLISH: en\n - LANGUAGE_SPANISH: es\n - LANGUAGE_FRENCH: fr\n - LANGUAGE_GERMAN: de\n - LANGUAGE_ITALIAN: it\n - LANGUAGE_PORTUGUESE: pt\n - LANGUAGE_DUTCH: nl\n - LANGUAGE_RUSSIAN: ru\n - LANGUAGE_CHINESE: zh\n - LANGUAGE_JAPANESE: ja\n - LANGUAGE_KOREAN: ko\n - LANGUAGE_ARABIC: ar\n - LANGUAGE_HINDI: hi\n - LANGUAGE_GREEK: el\n - LANGUAGE_TURKISH: tr",
                "title": "ISO 639-1 language code (e.g., \"en\", \"el\")"
            },
            "Lead": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string",
                        "title": "Business details"
                    },
                    "website": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "title": "Scraped data"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "googleRating": {
                        "type": "number",
                        "format": "float"
                    },
                    "reviewCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "industry": {
                        "type": "string",
                        "title": "Enrichment data"
                    },
                    "employeeCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "estimatedRevenue": {
                        "type": "string",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit fields"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "placeId": {
                        "type": "string",
                        "title": "Detailed Google Maps metadata"
                    },
                    "googleMapsUrl": {
                        "type": "string"
                    },
                    "businessStatus": {
                        "type": "string",
                        "title": "OPERATIONAL, CLOSED_TEMPORARILY, etc"
                    },
                    "regularHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BusinessHours"
                        }
                    },
                    "specialHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BusinessHours"
                        }
                    },
                    "photoReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Google Places photo IDs",
                        "title": "Rich media"
                    },
                    "mainPhotoUrl": {
                        "type": "string"
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Review"
                        }
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Google Places types",
                        "title": "Categories and attributes"
                    },
                    "amenities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "wheelchair_accessible, restroom, etc"
                    },
                    "servesVegetarianFood": {
                        "type": "boolean"
                    },
                    "outdoorSeating": {
                        "type": "boolean"
                    },
                    "paymentMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "visa, amex, cash, etc",
                        "title": "Payment and accessibility"
                    },
                    "wheelchairAccessible": {
                        "type": "boolean"
                    },
                    "parkingAvailable": {
                        "type": "boolean"
                    },
                    "socialMedia": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "platform -> url",
                        "title": "Social media links"
                    },
                    "ratingCategory": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Metadata"
                    },
                    "dataSourceVersion": {
                        "type": "string"
                    },
                    "scrapingSessionId": {
                        "type": "string"
                    },
                    "alternatePhones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Contact Information"
                    },
                    "contactPersonName": {
                        "type": "string"
                    },
                    "contactPersonTitle": {
                        "type": "string"
                    },
                    "contactEmail": {
                        "type": "string"
                    },
                    "foundedYear": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Business Operations"
                    },
                    "businessType": {
                        "type": "string"
                    },
                    "certifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "ISO, LEED, etc"
                    },
                    "licenseNumber": {
                        "type": "string"
                    },
                    "revenueRange": {
                        "$ref": "#/components/schemas/RevenueRange"
                    },
                    "fundingStage": {
                        "type": "string",
                        "title": "Seed, Series A, etc"
                    },
                    "isPublicCompany": {
                        "type": "boolean"
                    },
                    "websiteLoadSpeed": {
                        "type": "number",
                        "format": "float",
                        "description": "In seconds",
                        "title": "Online Presence Metrics"
                    },
                    "hasSslCertificate": {
                        "type": "boolean"
                    },
                    "cmsUsed": {
                        "type": "string",
                        "title": "e.g., WordPress, Shopify"
                    },
                    "ecommercePlatforms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "title": "Location Enhancements"
                    },
                    "neighborhood": {
                        "type": "string"
                    },
                    "nearbyLandmarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "transportationAccess": {
                        "type": "string",
                        "title": "Near subway, parking, etc"
                    },
                    "employeeBenefits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmployeeBenefit"
                        }
                    },
                    "parentCompany": {
                        "type": "string",
                        "title": "Partnerships & Affiliations"
                    },
                    "subsidiaries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isFranchise": {
                        "type": "boolean"
                    },
                    "seoKeywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Marketing & SEO"
                    },
                    "usesGoogleAds": {
                        "type": "boolean"
                    },
                    "googleMyBusinessCategory": {
                        "type": "string"
                    },
                    "naicsCode": {
                        "type": "string",
                        "title": "Industry Classification"
                    },
                    "sicCode": {
                        "type": "string"
                    },
                    "unspscCode": {
                        "type": "string"
                    },
                    "isGreenCertified": {
                        "type": "boolean",
                        "title": "Sustainability"
                    },
                    "energySources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Solar, Wind, etc"
                    },
                    "sustainabilityRating": {
                        "type": "string"
                    },
                    "recentAnnouncements": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Recent Activity"
                    },
                    "lastProductLaunch": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "hasLitigationHistory": {
                        "type": "boolean",
                        "title": "Legal & Compliance"
                    },
                    "exportControlStatus": {
                        "type": "string",
                        "title": "EAR, ITAR, etc"
                    }
                },
                "title": "Lead represents a scraped business entity"
            },
            "LimitInfo": {
                "type": "object",
                "properties": {
                    "current": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Current request count"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Rate limit threshold"
                    },
                    "resetTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the limit resets"
                    },
                    "windowSize": {
                        "type": "string",
                        "title": "Time window for the limit"
                    }
                }
            },
            "ListAPIKeysResponse": {
                "type": "object",
                "properties": {
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIKey"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListAccountsResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListLeadsResponse": {
                "type": "object",
                "properties": {
                    "leads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lead"
                        }
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListOrganizationsResponse": {
                "type": "object",
                "properties": {
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListScrapingJobsResponse": {
                "type": "object",
                "properties": {
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScrapingJob"
                        }
                    }
                },
                "title": "ListScrapingJobsResponse represents the response containing a list of scraping jobs"
            },
            "ListTenantAPIKeysResponse": {
                "type": "object",
                "properties": {
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenantAPIKey"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListTenantsResponse": {
                "type": "object",
                "properties": {
                    "tenants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWebhooksResponse": {
                "type": "object",
                "properties": {
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookConfig"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkflowsResponse": {
                "type": "object",
                "properties": {
                    "workflows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScrapingWorkflow"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkspacesResponse": {
                "type": "object",
                "properties": {
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace"
                        }
                    },
                    "nextPageNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MFAInfo": {
                "type": "object",
                "properties": {
                    "mfaRequired": {
                        "type": "boolean",
                        "title": "Whether MFA was required"
                    },
                    "allowedMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Allowed MFA methods"
                    },
                    "failedReason": {
                        "type": "string",
                        "title": "Why MFA failed if applicable"
                    }
                }
            },
            "MethodNotAllowedErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 405,
                    "message": "Method Not Allowed",
                    "allowed_methods": [
                        "GET",
                        "POST"
                    ]
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (405)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "allowedMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of allowed HTTP methods"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when HTTP method is not allowed on the endpoint",
                "title": "Method Not Allowed Error Response"
            },
            "NotFoundErrorCode": {
                "type": "string",
                "enum": [
                    "NO_NOT_FOUND_ERROR",
                    "UNDEFINED_ENDPOINT",
                    "UNIMPLEMENTED",
                    "STORE_ID_NOT_FOUND",
                    "USER_NOT_FOUND",
                    "RESOURCE_NOT_FOUND",
                    "TENANT_NOT_FOUND"
                ],
                "default": "NO_NOT_FOUND_ERROR",
                "description": "- NO_NOT_FOUND_ERROR: Default value as per proto3 convention\n - UNDEFINED_ENDPOINT: Endpoint errors\n\nRequested endpoint doesn't exist\n - UNIMPLEMENTED: Endpoint not implemented\n - STORE_ID_NOT_FOUND: Resource errors\n\nRequested store ID doesn't exist\n - USER_NOT_FOUND: Requested user doesn't exist\n - RESOURCE_NOT_FOUND: Generic resource not found\n - TENANT_NOT_FOUND: Requested tenant doesn't exist",
                "title": "Enhanced NotFoundErrorCode represents resource not found error codes"
            },
            "NotFoundErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 5000,
                    "message": "Resource not found",
                    "resource_info": {
                        "type": "user",
                        "id": "123",
                        "path": "/api/users/123"
                    },
                    "suggestions": {
                        "similar_resources": [
                            "124",
                            "125"
                        ],
                        "alternative_paths": [
                            "/api/v2/users/123"
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/NotFoundErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "resourceInfo": {
                        "$ref": "#/components/schemas/ResourceInfo"
                    },
                    "suggestions": {
                        "$ref": "#/components/schemas/Suggestions"
                    },
                    "apiInfo": {
                        "$ref": "#/components/schemas/APIInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents resource not found errors",
                "title": "Not Found Error Response"
            },
            "NotImplementedErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 501,
                    "message": "Not Implemented",
                    "feature": "User Deletion"
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (501)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "feature": {
                        "type": "string",
                        "title": "Feature or functionality not implemented"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when the requested functionality is not implemented",
                "title": "Not Implemented Error Response"
            },
            "NullValue": {
                "type": "string",
                "enum": [
                    "NULL_VALUE"
                ],
                "default": "NULL_VALUE",
                "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
            },
            "OperationDetails": {
                "type": "object",
                "properties": {
                    "operationId": {
                        "type": "string",
                        "title": "ID of failed operation"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When operation started"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When operation failed"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Stack trace if available"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Operation parameters"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string",
                        "title": "Basic Information"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "billingEmail": {
                        "type": "string",
                        "title": "Contact Information"
                    },
                    "technicalEmail": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "ssoEnabled": {
                        "type": "boolean",
                        "title": "Enterprise Features"
                    },
                    "ssoProvider": {
                        "type": "string",
                        "title": "e.g., \"okta\", \"azure_ad\""
                    },
                    "ssoDomain": {
                        "type": "string"
                    },
                    "allowedDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enforce2fa": {
                        "type": "boolean"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/BillingPlan"
                    },
                    "billingCurrency": {
                        "type": "string"
                    },
                    "autoBilling": {
                        "type": "boolean"
                    },
                    "taxId": {
                        "type": "string"
                    },
                    "complianceFrameworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "SOC2, GDPR, etc",
                        "title": "Compliance"
                    },
                    "dataProcessingAgreement": {
                        "type": "boolean"
                    },
                    "dataRegion": {
                        "type": "string",
                        "title": "Primary data storage region"
                    },
                    "maxTenants": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Resource Limits"
                    },
                    "totalStorageLimit": {
                        "type": "string",
                        "format": "int64"
                    },
                    "maxApiKeys": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxUsers": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tenants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tenant"
                        },
                        "title": "Relationships"
                    },
                    "subscriptions": {
                        "$ref": "#/components/schemas/Subscription"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v1.Status"
                    }
                },
                "description": "Key features:\n- Multi-tenant support\n- Hierarchical structure\n- Enterprise features\n- Billing management\n\nUse cases:\n- Company creates multiple apps/tenants\n- Enterprise manages business units\n- Usage tracking across tenants",
                "title": "Organization represents a company using the platform"
            },
            "OutputFormat": {
                "type": "string",
                "enum": [
                    "OUTPUT_FORMAT_UNSPECIFIED",
                    "OUTPUT_FORMAT_JSON",
                    "OUTPUT_FORMAT_CSV",
                    "OUTPUT_FORMAT_BIGQUERY",
                    "OUTPUT_FORMAT_POSTGRES"
                ],
                "default": "OUTPUT_FORMAT_UNSPECIFIED",
                "title": "Result handling"
            },
            "PauseWorkflowBody": {
                "type": "object",
                "properties": {
                    "pause": {
                        "type": "boolean"
                    }
                }
            },
            "PauseWorkflowResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                }
            },
            "PayloadFormat": {
                "type": "string",
                "enum": [
                    "PAYLOAD_FORMAT_UNSPECIFIED",
                    "PAYLOAD_FORMAT_JSON",
                    "PAYLOAD_FORMAT_XML",
                    "PAYLOAD_FORMAT_FORM_DATA",
                    "PAYLOAD_FORMAT_PROTOBUF",
                    "PAYLOAD_FORMAT_YAML"
                ],
                "default": "PAYLOAD_FORMAT_UNSPECIFIED",
                "title": "Payload format enum"
            },
            "PaymentInfo": {
                "type": "object",
                "properties": {
                    "amountDue": {
                        "type": "number",
                        "format": "double",
                        "title": "Amount that needs to be paid"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency code"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Payment due date"
                    },
                    "paymentUrl": {
                        "type": "string",
                        "title": "URL to make the payment"
                    }
                }
            },
            "PaymentRequiredErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 402,
                    "message": "Payment Required",
                    "payment_info": {
                        "amount_due": 29.99,
                        "currency": "USD",
                        "due_date": "2024-01-01T00:00:00.000Z"
                    }
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (402)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "paymentInfo": {
                        "$ref": "#/components/schemas/PaymentInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Indicates that payment is required to proceed",
                "title": "Payment Required Error Response"
            },
            "PaymentStatus": {
                "type": "string",
                "enum": [
                    "PAYMENT_STATUS_UNSPECIFIED",
                    "PAYMENT_STATUS_PAID",
                    "PAYMENT_STATUS_PAST_DUE",
                    "PAYMENT_STATUS_FAILED",
                    "PAYMENT_STATUS_CANCELED"
                ],
                "default": "PAYMENT_STATUS_UNSPECIFIED",
                "title": "Payment Status"
            },
            "Permission": {
                "type": "string",
                "enum": [
                    "PERMISSION_UNSPECIFIED",
                    "PERMISSION_READ",
                    "PERMISSION_WRITE",
                    "PERMISSION_DELETE",
                    "PERMISSION_MANAGE_USERS",
                    "PERMISSION_MANAGE_BILLING",
                    "PERMISSION_VIEW_ANALYTICS",
                    "PERMISSION_MANAGE_WORKFLOWS"
                ],
                "default": "PERMISSION_UNSPECIFIED"
            },
            "PlanTier": {
                "type": "string",
                "enum": [
                    "PLAN_TIER_UNSPECIFIED",
                    "PLAN_TIER_FREE",
                    "PLAN_TIER_STARTER",
                    "PLAN_TIER_PROFESSIONAL",
                    "PLAN_TIER_ENTERPRISE"
                ],
                "default": "PLAN_TIER_UNSPECIFIED",
                "title": "Plan Details"
            },
            "PreconditionFailedErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 412,
                    "message": "Precondition Failed",
                    "failed_conditions": [
                        "If-Match header does not match"
                    ]
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (412)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "failedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of failed preconditions"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when a precondition provided in the request fails",
                "title": "Precondition Failed Error Response"
            },
            "QuotaInfo": {
                "type": "object",
                "properties": {
                    "resource": {
                        "type": "string",
                        "title": "Resource being limited"
                    },
                    "used": {
                        "type": "string",
                        "format": "int64",
                        "title": "Amount used"
                    },
                    "limit": {
                        "type": "string",
                        "format": "int64",
                        "title": "Quota limit"
                    },
                    "resetTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When quota resets"
                    },
                    "resourceUsage": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "int64"
                        },
                        "title": "Usage by resource type"
                    }
                }
            },
            "RateLimitContext": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "Affected user"
                    },
                    "ipAddress": {
                        "type": "string",
                        "title": "IP address"
                    },
                    "affectedEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Endpoints being rate limited"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Relevant headers"
                    }
                }
            },
            "RateLimitErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 4102,
                    "message": "Rate limit exceeded",
                    "limit_info": {
                        "current": 150,
                        "limit": 100,
                        "reset_time": "2024-01-01T00:00:00.000Z"
                    },
                    "quota_info": {
                        "resource": "api_calls",
                        "used": 1500,
                        "limit": 1000
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "limitInfo": {
                        "$ref": "#/components/schemas/LimitInfo"
                    },
                    "quotaInfo": {
                        "$ref": "#/components/schemas/QuotaInfo"
                    },
                    "context": {
                        "$ref": "#/components/schemas/RateLimitContext"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents rate limiting and quota exceeded errors",
                "title": "Rate Limit Error Response"
            },
            "ResourceInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type of resource not found"
                    },
                    "id": {
                        "type": "string",
                        "title": "ID of resource not found"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path that was accessed"
                    },
                    "tenantId": {
                        "type": "string",
                        "title": "Tenant context if applicable"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Required scopes for access"
                    }
                }
            },
            "ResourceUtilization": {
                "type": "object",
                "properties": {
                    "cpuUsage": {
                        "type": "number",
                        "format": "double",
                        "title": "CPU usage percentage"
                    },
                    "memoryUsage": {
                        "type": "number",
                        "format": "double",
                        "title": "Memory usage percentage"
                    },
                    "activeConnections": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of active connections"
                    },
                    "quotas": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "double"
                        },
                        "title": "Current quota utilization"
                    }
                }
            },
            "ResourceValidation": {
                "type": "object",
                "properties": {
                    "missingResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Resources that weren't found"
                    },
                    "invalidReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Invalid resource references"
                    },
                    "idViolations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "ID format violations"
                    }
                }
            },
            "RevenueRange": {
                "type": "string",
                "enum": [
                    "REVENUE_RANGE_UNSPECIFIED",
                    "REVENUE_RANGE_UNDER_100K",
                    "REVENUE_RANGE_100K_TO_1M",
                    "REVENUE_RANGE_1M_TO_10M",
                    "REVENUE_RANGE_10M_TO_50M",
                    "REVENUE_RANGE_OVER_50M"
                ],
                "default": "REVENUE_RANGE_UNSPECIFIED",
                "title": "Financial Metrics"
            },
            "Review": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "author": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "text": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "language": {
                        "type": "string"
                    },
                    "profilePhotoUrl": {
                        "type": "string"
                    },
                    "reviewCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Detailed reviews"
            },
            "Role": {
                "type": "string",
                "enum": [
                    "ROLE_UNSPECIFIED",
                    "ROLE_ADMIN",
                    "ROLE_USER",
                    "ROLE_VIEWER",
                    "ROLE_MANAGER"
                ],
                "default": "ROLE_UNSPECIFIED",
                "title": "Role-based access control"
            },
            "RotateAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "keyId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "RotateAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "newApiKey": {
                        "$ref": "#/components/schemas/APIKey"
                    },
                    "newKeyValue": {
                        "type": "string"
                    },
                    "oldKeyExpiry": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RotateTenantAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "keyId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "RotateTenantAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "newApiKey": {
                        "$ref": "#/components/schemas/TenantAPIKey"
                    },
                    "newKeyValue": {
                        "type": "string"
                    },
                    "oldKeyExpiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "SchemaValidation": {
                "type": "object",
                "properties": {
                    "schemaVersion": {
                        "type": "string",
                        "title": "Version of schema used"
                    },
                    "invalidPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Patterns that were invalid"
                    },
                    "typeMismatches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Type mismatches found"
                    }
                }
            },
            "ScrapingJob": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64",
                        "title": "Changed from uint64 to string to support UUID"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Core fields matching DB schema"
                    },
                    "payloadType": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "string",
                        "format": "byte"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BackgroundJobStatus"
                    },
                    "name": {
                        "type": "string",
                        "title": "Human-readable name for the job"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Search terms for Google Maps"
                    },
                    "lang": {
                        "$ref": "#/components/schemas/Language"
                    },
                    "zoom": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Map zoom level (1-20)"
                    },
                    "lat": {
                        "type": "string",
                        "title": "Latitude coordinate"
                    },
                    "lon": {
                        "type": "string",
                        "title": "Longitude coordinate"
                    },
                    "fastMode": {
                        "type": "boolean",
                        "title": "Enable faster but potentially less thorough scraping"
                    },
                    "radius": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Search radius in meters"
                    },
                    "depth": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Depth of recursive search (1-10)"
                    },
                    "email": {
                        "type": "boolean",
                        "title": "Whether to extract email addresses"
                    },
                    "maxTime": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum execution time in seconds"
                    },
                    "proxies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of proxy servers to use"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last update timestamp"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Soft delete timestamp"
                    },
                    "leads": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lead"
                        },
                        "title": "Lead tracking"
                    },
                    "url": {
                        "type": "string",
                        "title": "URL of the Google Maps page"
                    }
                },
                "description": "ScrapingJob represents a Google Maps scraping task.\nThis message defines both the configuration and current state of a scraping operation.\n\nKey components:\n- Basic metadata (id, name, timestamps)\n- Job status tracking\n- Search configuration parameters\n- Geographic settings\n- Performance options\n- Multi-tenant context\n\nDatabase considerations:\n- Stored in \"gmaps_jobs\" table\n- Uses GORM for ORM mapping\n- Includes foreign key to Account\n- Supports soft deletes\n\nUsage example:\n```go\njob := &ScrapingJob{\n    Name: \"Athens Cafes\",\n    Status: BackgroundJobStatus_BACKGROUND_JOB_STATUS_QUEUED,\n    Keywords: []string{\"cafe\", \"coffee\"},\n    Lang: \"el\",\n    Zoom: 15,\n    FastMode: true,\n    MaxTime: 3600,\n}\n```"
            },
            "ScrapingWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cronExpression": {
                        "type": "string",
                        "title": "Scheduling options"
                    },
                    "nextRunTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Execution settings"
                    },
                    "lastRunTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/WorkflowStatus"
                    },
                    "retryCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Failure handling"
                    },
                    "maxRetries": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "alertEmails": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit fields"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScrapingJob"
                        },
                        "title": "Relationships"
                    },
                    "geoFencingRadius": {
                        "type": "number",
                        "format": "float",
                        "title": "Advanced scraping configuration"
                    },
                    "geoFencingLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "geoFencingLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "geoFencingZoomMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "geoFencingZoomMax": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "includeReviews": {
                        "type": "boolean",
                        "title": "Data collection parameters"
                    },
                    "includePhotos": {
                        "type": "boolean"
                    },
                    "includeBusinessHours": {
                        "type": "boolean"
                    },
                    "maxReviewsPerBusiness": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "outputFormat": {
                        "$ref": "#/components/schemas/OutputFormat"
                    },
                    "outputDestination": {
                        "type": "string",
                        "title": "URI or dataset name"
                    },
                    "dataRetention": {
                        "type": "string",
                        "title": "Data retention"
                    },
                    "anonymizePii": {
                        "type": "boolean"
                    },
                    "notificationSlackChannel": {
                        "type": "string",
                        "title": "Notification preferences can stay as they provide quick access to common notification channels"
                    },
                    "notificationEmailGroup": {
                        "type": "string"
                    },
                    "notificationNotifyOnStart": {
                        "type": "boolean"
                    },
                    "notificationNotifyOnComplete": {
                        "type": "boolean"
                    },
                    "notificationNotifyOnFailure": {
                        "type": "boolean"
                    },
                    "contentFilterAllowedCountries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contentFilterExcludedTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contentFilterMinimumRating": {
                        "type": "number",
                        "format": "float"
                    },
                    "contentFilterMinimumReviews": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "qosMaxConcurrentRequests": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "qosMaxRetries": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "qosRequestTimeout": {
                        "type": "string"
                    },
                    "qosEnableJavascript": {
                        "type": "boolean",
                        "title": "For full page rendering"
                    },
                    "respectRobotsTxt": {
                        "type": "boolean",
                        "title": "Compliance"
                    },
                    "acceptTermsOfService": {
                        "type": "boolean"
                    },
                    "userAgent": {
                        "type": "string"
                    },
                    "searchTerms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Search terms"
                    },
                    "scheduledEntryId": {
                        "type": "string",
                        "title": "Scheduled entry ID"
                    }
                },
                "title": "ScrapingWorkflow defines recurring scraping configurations"
            },
            "ServiceStatus": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name of the service"
                    },
                    "status": {
                        "type": "string",
                        "title": "Current service status"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Service metrics"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Dependency"
                        },
                        "title": "Status of dependencies"
                    }
                }
            },
            "ServiceUnavailableErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 4300,
                    "message": "Service is temporarily unavailable",
                    "availability_info": {
                        "retry_after": 60,
                        "affected_services": [
                            "user-service"
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "availabilityInfo": {
                        "$ref": "#/components/schemas/AvailabilityInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents service availability errors",
                "title": "Service Unavailable Error Response"
            },
            "SessionInfo": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "title": "ID of the invalid session"
                    },
                    "lastActive": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last activity timestamp"
                    },
                    "deviceId": {
                        "type": "string",
                        "title": "Device associated with session"
                    },
                    "ipAddress": {
                        "type": "string",
                        "title": "IP address of the request"
                    }
                }
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "stripeCustomerId": {
                        "type": "string",
                        "title": "Stripe Integration"
                    },
                    "stripeSubscriptionId": {
                        "type": "string"
                    },
                    "stripePriceId": {
                        "type": "string"
                    },
                    "stripeProductId": {
                        "type": "string"
                    },
                    "planTier": {
                        "$ref": "#/components/schemas/PlanTier"
                    },
                    "billingMode": {
                        "$ref": "#/components/schemas/BillingMode"
                    },
                    "includedJobs": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Jobs included in base price",
                        "title": "Usage Limits"
                    },
                    "perJobRate": {
                        "type": "number",
                        "format": "float",
                        "title": "Cost per additional job"
                    },
                    "maxConcurrentJobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "includedStorage": {
                        "type": "string",
                        "format": "int64",
                        "title": "Storage included in base price"
                    },
                    "perGbRate": {
                        "type": "number",
                        "format": "float",
                        "title": "Cost per additional GB"
                    },
                    "advancedFilteringEnabled": {
                        "type": "boolean",
                        "title": "Feature Entitlements"
                    },
                    "prioritySupportEnabled": {
                        "type": "boolean"
                    },
                    "customExportsEnabled": {
                        "type": "boolean"
                    },
                    "apiAccessEnabled": {
                        "type": "boolean"
                    },
                    "customProxiesEnabled": {
                        "type": "boolean"
                    },
                    "advancedAnalyticsEnabled": {
                        "type": "boolean"
                    },
                    "retentionDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxResultsPerJob": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Current Period"
                    },
                    "currentPeriodEnd": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currentPeriodUsage": {
                        "type": "number",
                        "format": "float",
                        "title": "Usage amount for current period"
                    },
                    "currency": {
                        "type": "string",
                        "description": "e.g., \"usd\"",
                        "title": "Billing"
                    },
                    "basePrice": {
                        "type": "number",
                        "format": "float",
                        "title": "Monthly/yearly base price"
                    },
                    "billingInterval": {
                        "$ref": "#/components/schemas/Interval"
                    },
                    "autoRenew": {
                        "type": "boolean"
                    },
                    "paymentStatus": {
                        "$ref": "#/components/schemas/PaymentStatus"
                    },
                    "isTrial": {
                        "type": "boolean",
                        "title": "Trial"
                    },
                    "trialStart": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trialEnd": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamps"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "canceledAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "Key features:\n- Stripe integration\n- Usage-based billing\n- Metered pricing\n- Feature flags\n\nDatabase considerations:\n- Syncs with Stripe webhooks\n- Tracks usage for metered billing\n- Maintains subscription lifecycle",
                "title": "Subscription represents a tenant's Stripe-based subscription"
            },
            "Suggestions": {
                "type": "object",
                "properties": {
                    "similarResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Similar resource IDs"
                    },
                    "alternativePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Alternative API paths"
                    },
                    "documentationUrl": {
                        "type": "string",
                        "title": "Relevant documentation"
                    },
                    "hints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Additional hints"
                    }
                }
            },
            "Tenant": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string",
                        "title": "Basic Information"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "apiBaseUrl": {
                        "type": "string",
                        "title": "Configuration"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "allowedOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64",
                        "title": "Resource Management"
                    },
                    "monthlyRequestLimit": {
                        "type": "string",
                        "format": "int64"
                    },
                    "maxConcurrentJobs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enableCaching": {
                        "type": "boolean",
                        "title": "Feature Flags"
                    },
                    "enableRateLimiting": {
                        "type": "boolean"
                    },
                    "enableRequestLogging": {
                        "type": "boolean"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "title": "Relationships"
                    },
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenantAPIKey"
                        }
                    },
                    "totalRequests": {
                        "type": "string",
                        "format": "int64",
                        "title": "Usage Metrics"
                    },
                    "totalStorageUsed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "averageResponseTime": {
                        "type": "number",
                        "format": "float"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v1.Status"
                    }
                },
                "description": "Key features:\n- Resource isolation\n- Independent configuration\n- Usage tracking\n- Service subscriptions",
                "title": "Tenant represents an application/project within an organization"
            },
            "TenantAPIKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "keyHash": {
                        "type": "string"
                    },
                    "keyPrefix": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v1.Status"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenantAPIKeyScope"
                        },
                        "title": "Scopes and permissions"
                    },
                    "maxUses": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Usage tracking"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expiration and timestamps"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TenantAPIKeyScope": {
                "type": "string",
                "enum": [
                    "TENANT_API_KEY_SCOPE_UNSPECIFIED",
                    "TENANT_API_KEY_SCOPE_READ_JOBS",
                    "TENANT_API_KEY_SCOPE_READ_LEADS",
                    "TENANT_API_KEY_SCOPE_READ_WORKFLOWS",
                    "TENANT_API_KEY_SCOPE_READ_ANALYTICS",
                    "TENANT_API_KEY_SCOPE_READ_SETTINGS",
                    "TENANT_API_KEY_SCOPE_WRITE_JOBS",
                    "TENANT_API_KEY_SCOPE_WRITE_LEADS",
                    "TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS",
                    "TENANT_API_KEY_SCOPE_WRITE_SETTINGS",
                    "TENANT_API_KEY_SCOPE_DELETE_JOBS",
                    "TENANT_API_KEY_SCOPE_DELETE_LEADS",
                    "TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS",
                    "TENANT_API_KEY_SCOPE_EXPORT_DATA",
                    "TENANT_API_KEY_SCOPE_MANAGE_KEYS",
                    "TENANT_API_KEY_SCOPE_BILLING_READ",
                    "TENANT_API_KEY_SCOPE_BILLING_WRITE",
                    "TENANT_API_KEY_SCOPE_ADMIN"
                ],
                "default": "TENANT_API_KEY_SCOPE_UNSPECIFIED",
                "description": "Usage:\n- Multiple scopes can be assigned to a single key\n- Scopes follow a hierarchical pattern\n- More specific scopes take precedence over general ones\n\n - TENANT_API_KEY_SCOPE_UNSPECIFIED: Default state, should not be used explicitly\n - TENANT_API_KEY_SCOPE_READ_JOBS: Read-only access scopes\n\nView scraping jobs\n - TENANT_API_KEY_SCOPE_READ_LEADS: View scraped leads\n - TENANT_API_KEY_SCOPE_READ_WORKFLOWS: View workflow configurations\n - TENANT_API_KEY_SCOPE_READ_ANALYTICS: View analytics and metrics\n - TENANT_API_KEY_SCOPE_READ_SETTINGS: View tenant settings\n - TENANT_API_KEY_SCOPE_WRITE_JOBS: Write access scopes\n\nCreate/modify scraping jobs\n - TENANT_API_KEY_SCOPE_WRITE_LEADS: Modify lead data\n - TENANT_API_KEY_SCOPE_WRITE_WORKFLOWS: Create/modify workflows\n - TENANT_API_KEY_SCOPE_WRITE_SETTINGS: Modify tenant settings\n - TENANT_API_KEY_SCOPE_DELETE_JOBS: Delete access scopes\n\nDelete scraping jobs\n - TENANT_API_KEY_SCOPE_DELETE_LEADS: Delete lead data\n - TENANT_API_KEY_SCOPE_DELETE_WORKFLOWS: Delete workflows\n - TENANT_API_KEY_SCOPE_EXPORT_DATA: Special access scopes\n\nExport data in various formats\n - TENANT_API_KEY_SCOPE_MANAGE_KEYS: Manage other API keys\n - TENANT_API_KEY_SCOPE_BILLING_READ: View billing information\n - TENANT_API_KEY_SCOPE_BILLING_WRITE: Modify billing settings\n - TENANT_API_KEY_SCOPE_ADMIN: Full access scopes\n\nFull administrative access",
                "title": "TenantAPIKeyScope defines the available permission scopes for tenant API keys\nThese scopes control what operations an API key can perform"
            },
            "Timezone": {
                "type": "string",
                "enum": [
                    "TIMEZONE_UNSPECIFIED",
                    "TIMEZONE_UTC",
                    "TIMEZONE_EST",
                    "TIMEZONE_CST",
                    "TIMEZONE_MST",
                    "TIMEZONE_PST",
                    "TIMEZONE_GMT",
                    "TIMEZONE_CET",
                    "TIMEZONE_IST",
                    "TIMEZONE_JST",
                    "TIMEZONE_AEST"
                ],
                "default": "TIMEZONE_UNSPECIFIED"
            },
            "TokenInfo": {
                "type": "object",
                "properties": {
                    "tokenId": {
                        "type": "string",
                        "title": "Identifier of the invalid token"
                    },
                    "tokenType": {
                        "type": "string",
                        "title": "Type of token (Bearer, JWT, etc)"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Token expiration time"
                    },
                    "issuer": {
                        "type": "string",
                        "title": "Token issuer"
                    },
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Token audiences"
                    }
                }
            },
            "TooEarlyErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 425,
                    "message": "Too Early"
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (425)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Indicates that the server is unwilling to risk processing a request that might be replayed",
                "title": "Too Early Error Response"
            },
            "TriggerEvent": {
                "type": "string",
                "enum": [
                    "TRIGGER_EVENT_UNSPECIFIED",
                    "TRIGGER_EVENT_JOB_STARTED",
                    "TRIGGER_EVENT_JOB_COMPLETED",
                    "TRIGGER_EVENT_JOB_FAILED",
                    "TRIGGER_EVENT_LEAD_FOUND",
                    "TRIGGER_EVENT_QUOTA_EXCEEDED",
                    "TRIGGER_EVENT_ERROR_THRESHOLD_REACHED",
                    "TRIGGER_EVENT_RATE_LIMIT_REACHED",
                    "TRIGGER_EVENT_DATA_VALIDATION_FAILED",
                    "TRIGGER_EVENT_NEW_PROXY_NEEDED",
                    "TRIGGER_EVENT_SCHEDULED_MAINTENANCE"
                ],
                "default": "TRIGGER_EVENT_UNSPECIFIED",
                "title": "Event triggers using enum"
            },
            "TriggerWorkflowBody": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "TriggerWorkflowResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BackgroundJobStatus"
                    }
                }
            },
            "UnprocessableEntityErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 422,
                    "message": "Unprocessable Entity",
                    "errors": [
                        {
                            "field": "email",
                            "error": "Invalid format"
                        }
                    ]
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (422)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldError"
                        },
                        "title": "List of field-specific errors"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents errors when the server understands the content type but cannot process the instructions",
                "title": "Unprocessable Entity Error Response"
            },
            "UpdateAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/APIKey"
                    }
                }
            },
            "UpdateAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/APIKey"
                    }
                }
            },
            "UpdateAccountRequest": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/UpdateAccountRequestPayload"
                    }
                }
            },
            "UpdateAccountRequestPayload": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "organizationId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "UpdateAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account1"
                    }
                }
            },
            "UpdateAccountSettingsRequest": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/AccountSettings"
                    }
                },
                "title": "UpdateAccountSettingsRequest represents a request to update account settings"
            },
            "UpdateAccountSettingsResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/AccountSettings"
                    }
                }
            },
            "UpdateOrganizationRequest": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                }
            },
            "UpdateOrganizationResponse": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    }
                }
            },
            "UpdateTenantAPIKeyRequest": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/TenantAPIKey"
                    }
                }
            },
            "UpdateTenantAPIKeyResponse": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "$ref": "#/components/schemas/TenantAPIKey"
                    }
                }
            },
            "UpdateTenantRequest": {
                "type": "object",
                "properties": {
                    "tenant": {
                        "$ref": "#/components/schemas/Tenant"
                    }
                }
            },
            "UpdateTenantResponse": {
                "type": "object",
                "properties": {
                    "tenant": {
                        "$ref": "#/components/schemas/Tenant"
                    }
                }
            },
            "UpdateWebhookRequest": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/WebhookConfig"
                    }
                }
            },
            "UpdateWebhookResponse": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "$ref": "#/components/schemas/WebhookConfig"
                    }
                }
            },
            "UpdateWorkflowRequest": {
                "type": "object",
                "properties": {
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                }
            },
            "UpdateWorkflowResponse": {
                "type": "object",
                "properties": {
                    "workflow": {
                        "$ref": "#/components/schemas/ScrapingWorkflow"
                    }
                }
            },
            "UpdateWorkspaceRequest": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace1"
                    }
                }
            },
            "UpdateWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace1"
                    }
                }
            },
            "ValidationErrorCode": {
                "type": "string",
                "enum": [
                    "NO_ERROR",
                    "VALIDATION_ERROR",
                    "INVALID_WRITE_INPUT",
                    "INVALID_CHECK_INPUT",
                    "INVALID_EXPAND_INPUT",
                    "INVALID_OBJECT_FORMAT",
                    "INVALID_USER",
                    "INVALID_TUPLE",
                    "AUTHORIZATION_MODEL_NOT_FOUND",
                    "TYPE_NOT_FOUND",
                    "RELATION_NOT_FOUND",
                    "STORE_ID_INVALID_LENGTH",
                    "ID_TOO_LONG",
                    "INVALID_CONTINUATION_TOKEN",
                    "PAGE_SIZE_INVALID",
                    "PARAM_MISSING_VALUE",
                    "EXCEEDED_ENTITY_LIMIT",
                    "DUPLICATE_ENTRY",
                    "CANNOT_ALLOW_DUPLICATE_TUPLES",
                    "CANNOT_ALLOW_DUPLICATE_TYPES",
                    "INVALID_SCHEMA_VERSION",
                    "INVALID_TYPE_PATTERN",
                    "INVALID_RELATION_PATTERN",
                    "INVALID_OBJECT_PATTERN",
                    "INVALID_FORMAT",
                    "INVALID_EMAIL_FORMAT",
                    "INVALID_PASSWORD_STRENGTH",
                    "FIELD_TOO_SHORT",
                    "FIELD_TOO_LONG",
                    "UNSUPPORTED_MEDIA_TYPE"
                ],
                "default": "NO_ERROR",
                "description": "- VALIDATION_ERROR: General validation errors\n - AUTHORIZATION_MODEL_NOT_FOUND: Resource not found errors\n - INVALID_CONTINUATION_TOKEN: Input errors\n - DUPLICATE_ENTRY: Conflict errors\n - INVALID_SCHEMA_VERSION: Schema errors\n - INVALID_FORMAT: New validation error codes\n\nGeneral invalid format\n - INVALID_EMAIL_FORMAT: Email format is invalid\n - INVALID_PASSWORD_STRENGTH: Password does not meet strength requirements\n - FIELD_TOO_SHORT: Field value is too short\n - FIELD_TOO_LONG: Field value is too long\n - UNSUPPORTED_MEDIA_TYPE: Media type is not supported",
                "title": "Enhanced ValidationErrorCode represents validation and business logic error codes"
            },
            "ValidationErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 2000,
                    "message": "Validation failed",
                    "field_violations": [
                        {
                            "field": "email",
                            "validation": "format",
                            "message": "Invalid email format"
                        }
                    ],
                    "entity_violations": {
                        "user": [
                            "duplicate_email",
                            "invalid_age"
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ValidationErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "fieldViolations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldViolation"
                        }
                    },
                    "schemaValidation": {
                        "$ref": "#/components/schemas/SchemaValidation"
                    },
                    "resourceValidation": {
                        "$ref": "#/components/schemas/ResourceValidation"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents data validation and business logic errors",
                "title": "Validation Error Response"
            },
            "WebhookConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "url": {
                        "type": "string",
                        "title": "URL to send webhook notifications to"
                    },
                    "authType": {
                        "type": "string",
                        "description": "e.g., \"basic\", \"bearer\", \"custom\"",
                        "title": "Authentication"
                    },
                    "authToken": {
                        "type": "string"
                    },
                    "customHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maxRetries": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Retry configuration"
                    },
                    "retryInterval": {
                        "type": "string"
                    },
                    "triggerEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggerEvent"
                        }
                    },
                    "includedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncludedField"
                        }
                    },
                    "includeFullResults": {
                        "type": "boolean"
                    },
                    "payloadFormat": {
                        "$ref": "#/components/schemas/PayloadFormat"
                    },
                    "verifySsl": {
                        "type": "boolean",
                        "title": "Security"
                    },
                    "signingSecret": {
                        "type": "string"
                    },
                    "rateLimit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Rate limiting"
                    },
                    "rateLimitInterval": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastTriggeredAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "successfulCalls": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failedCalls": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Flexible metadata storage using Google struct"
                    },
                    "webhookName": {
                        "type": "string",
                        "title": "Webhook name"
                    }
                },
                "title": "WebhookConfig represents a webhook integration configuration\nIt defines how and when notifications should be sent to external systems"
            },
            "WorkflowStatus": {
                "type": "string",
                "enum": [
                    "WORKFLOW_STATUS_UNSPECIFIED",
                    "WORKFLOW_STATUS_DRAFT",
                    "WORKFLOW_STATUS_ACTIVE",
                    "WORKFLOW_STATUS_PAUSED",
                    "WORKFLOW_STATUS_FAILED",
                    "WORKFLOW_STATUS_COMPLETED",
                    "WORKFLOW_STATUS_ARCHIVED",
                    "WORKFLOW_STATUS_PENDING_APPROVAL",
                    "WORKFLOW_STATUS_VALIDATING",
                    "WORKFLOW_STATUS_QUOTA_EXCEEDED",
                    "WORKFLOW_STATUS_WARNING"
                ],
                "default": "WORKFLOW_STATUS_UNSPECIFIED",
                "description": "WorkflowStatus represents the current state of a scraping workflow.\nThis enum tracks the lifecycle of automated, recurring scraping configurations.\n\nState transitions:\n1. DRAFT -> ACTIVE/ARCHIVED\n2. ACTIVE -> PAUSED/FAILED/COMPLETED/ARCHIVED\n3. PAUSED -> ACTIVE/ARCHIVED\n4. FAILED -> ACTIVE/ARCHIVED\n\n - WORKFLOW_STATUS_UNSPECIFIED: Default state, should not be used explicitly\n - WORKFLOW_STATUS_DRAFT: Initial draft state before activation\n - WORKFLOW_STATUS_ACTIVE: Workflow is actively running on schedule\n - WORKFLOW_STATUS_PAUSED: Workflow is temporarily suspended\n - WORKFLOW_STATUS_FAILED: Workflow encountered an error\n - WORKFLOW_STATUS_COMPLETED: Workflow completed all scheduled runs\n - WORKFLOW_STATUS_ARCHIVED: Workflow is archived (soft-deleted)\n - WORKFLOW_STATUS_PENDING_APPROVAL: Workflow is pending approval\n - WORKFLOW_STATUS_VALIDATING: Workflow is being validated\n - WORKFLOW_STATUS_QUOTA_EXCEEDED: Workflow exceeded resource quotas\n - WORKFLOW_STATUS_WARNING: Workflow is running but with warnings"
            },
            "Workspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "industry": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "gdprCompliant": {
                        "type": "boolean",
                        "title": "Compliance settings"
                    },
                    "hipaaCompliant": {
                        "type": "boolean"
                    },
                    "soc2Compliant": {
                        "type": "boolean"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64",
                        "description": "in bytes",
                        "title": "Storage quotas"
                    },
                    "usedStorage": {
                        "type": "string",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Audit fields"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "workflows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScrapingWorkflow"
                        },
                        "title": "Relationships"
                    },
                    "jobsRunThisMonth": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Job tracking"
                    },
                    "workspaceJobLimit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dailyJobQuota": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "activeScrapers": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Usage metrics"
                    },
                    "totalLeadsCollected": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastJobRun": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "scrapingJobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScrapingJob"
                        },
                        "title": "Associated scraping jobs for this workspace"
                    },
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIKey"
                        }
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookConfig"
                        }
                    },
                    "workspaceType": {
                        "$ref": "#/components/schemas/WorkspaceType"
                    },
                    "description": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maxTeamMembers": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Team Management"
                    },
                    "currentTeamMembers": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allowGuestAccess": {
                        "type": "boolean"
                    },
                    "allowedEmailDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "exportFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "e.g., \"csv\", \"json\", \"excel\"",
                        "title": "Data Export Settings"
                    },
                    "exportSchedule": {
                        "type": "string",
                        "title": "cron expression"
                    },
                    "exportDestinations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "e.g., \"s3\", \"gcs\", \"sftp\""
                    },
                    "exportDestinationConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "compressExports": {
                        "type": "boolean"
                    },
                    "compressionFormat": {
                        "type": "string",
                        "title": "e.g., \"zip\", \"gzip\""
                    },
                    "salesforceEnabled": {
                        "type": "boolean",
                        "title": "Integration Settings"
                    },
                    "salesforceConfig": {
                        "type": "string"
                    },
                    "hubspotEnabled": {
                        "type": "boolean"
                    },
                    "hubspotConfig": {
                        "type": "string"
                    },
                    "zapierEnabled": {
                        "type": "boolean"
                    },
                    "zapierWebhook": {
                        "type": "string"
                    },
                    "activeIntegrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integrationSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "title": "Workspace represents a business entity with multiple accounts"
            },
            "WorkspaceType": {
                "type": "string",
                "enum": [
                    "WORKSPACE_TYPE_UNSPECIFIED",
                    "WORKSPACE_TYPE_PERSONAL",
                    "WORKSPACE_TYPE_TEAM",
                    "WORKSPACE_TYPE_ENTERPRISE"
                ],
                "default": "WORKSPACE_TYPE_UNSPECIFIED",
                "title": "Workspace type enum"
            },
            "rpc.Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
                    },
                    "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
                    }
                },
                "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
            },
            "v1.Status": {
                "type": "string",
                "enum": [
                    "STATUS_UNSPECIFIED",
                    "STATUS_ACTIVE",
                    "STATUS_SUSPENDED",
                    "STATUS_PENDING_VERIFICATION",
                    "STATUS_REVOKED",
                    "STATUS_EXPIRED",
                    "STATUS_RATE_LIMITED",
                    "STATUS_PENDING_REVIEW",
                    "STATUS_DEPRECATED",
                    "STATUS_MAINTENANCE"
                ],
                "default": "STATUS_UNSPECIFIED",
                "title": "Status"
            },
            "AIAssistanceLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "interactionType": {
                        "type": "string"
                    },
                    "userQuery": {
                        "type": "string"
                    },
                    "aiResponse": {
                        "type": "string"
                    },
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Account1": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "auth0UserId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "baseDirectory": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfaEnabled": {
                        "type": "boolean"
                    },
                    "complianceLevel": {
                        "$ref": "#/components/schemas/ComplianceLevel"
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace1"
                        },
                        "title": "Relationships"
                    },
                    "dataProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataProfile"
                        }
                    }
                },
                "title": "Core entities"
            },
            "ActivityMetrics": {
                "type": "object",
                "properties": {
                    "totalFiles": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalFolders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "activeUsers": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "storageUsed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "storageUsagePercentage": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "AppAnalytics": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "metricValue": {
                        "type": "number",
                        "format": "float"
                    },
                    "dimensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "recordedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppCategory": {
                "type": "string",
                "enum": [
                    "APP_CATEGORY_UNSPECIFIED",
                    "APP_CATEGORY_CONTRACT_AUTOMATION",
                    "APP_CATEGORY_CONTRACT_ANALYSIS",
                    "APP_CATEGORY_INTEGRATION",
                    "APP_CATEGORY_AI_POWERED",
                    "APP_CATEGORY_WORKFLOW",
                    "APP_CATEGORY_COMPLIANCE"
                ],
                "default": "APP_CATEGORY_UNSPECIFIED",
                "title": "Additional enums for marketplace and analytics"
            },
            "AppDevelopmentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "supportedLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sdkFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "testCoverage": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "securityScans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "performanceMetrics": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "developmentStatus": {
                        "type": "string"
                    },
                    "knownIssues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roadmapUrl": {
                        "type": "string"
                    },
                    "lastSecurityAudit": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppInstallation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionInstalled": {
                        "type": "string"
                    },
                    "configuration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "installationStatus": {
                        "type": "string"
                    },
                    "installedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUsed": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppPermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "accessLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "constraints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "requiresApproval": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppReview": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "reviewerId": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "reviewText": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionNumber": {
                        "type": "string"
                    },
                    "changelog": {
                        "type": "string"
                    },
                    "requirements": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "releaseDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppWebhook": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "url": {
                        "type": "string"
                    },
                    "subscribedEvents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secretKey": {
                        "type": "string"
                    },
                    "retryCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeoutSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lastTriggered": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthenticationErrorMessageResponse1": {
                "type": "object",
                "example": {
                    "code": 1001,
                    "message": "Authentication failed",
                    "token_info": {
                        "token_id": "t-123",
                        "expiry": "2024-01-01T00:00:00.000Z"
                    },
                    "auth_context": {
                        "required_scopes": [
                            "read",
                            "write"
                        ],
                        "provided_scopes": [
                            "read"
                        ]
                    },
                    "session_info": {
                        "session_id": "s-456",
                        "last_active": "2024-01-01T00:00:00.000Z"
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/AuthErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "tokenInfo": {
                        "$ref": "#/components/schemas/TokenInfo"
                    },
                    "authContext": {
                        "$ref": "#/components/schemas/AuthContext"
                    },
                    "sessionInfo": {
                        "$ref": "#/components/schemas/SessionInfo"
                    },
                    "mfaInfo": {
                        "$ref": "#/components/schemas/MFAInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents authentication and authorization failures",
                "title": "Authentication Error Response"
            },
            "BranchMerge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "branchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sourceBranch": {
                        "type": "string"
                    },
                    "targetBranch": {
                        "type": "string"
                    },
                    "mergeStatus": {
                        "type": "string"
                    },
                    "mergeStrategy": {
                        "type": "string"
                    },
                    "conflicts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mergerId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "BranchPolicy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "branchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requiredApprovers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "minimumApprovals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enforceLinearHistory": {
                        "type": "boolean"
                    },
                    "allowForcePush": {
                        "type": "boolean"
                    },
                    "protectedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mergeRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "automatedChecks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Enhanced version control entities"
            },
            "ChangeSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "changeType": {
                        "type": "string"
                    },
                    "contentBefore": {
                        "type": "string"
                    },
                    "contentAfter": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CommentThread": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "startPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resolved": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ComplianceCheck": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "intelligenceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "complianceStandard": {
                        "type": "string"
                    },
                    "checkResult": {
                        "type": "string"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediationSteps": {
                        "type": "string"
                    },
                    "checkDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ComplianceLevel": {
                "type": "string",
                "enum": [
                    "COMPLIANCE_LEVEL_UNSPECIFIED",
                    "COMPLIANCE_LEVEL_NONE",
                    "COMPLIANCE_LEVEL_BASIC",
                    "COMPLIANCE_LEVEL_ADVANCED",
                    "COMPLIANCE_LEVEL_ENTERPRISE"
                ],
                "default": "COMPLIANCE_LEVEL_UNSPECIFIED",
                "title": "Additional status enums"
            },
            "ComplianceMetrics": {
                "type": "object",
                "properties": {
                    "gdprComplianceScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "hipaaComplianceScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "pendingApprovals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "complianceViolations": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ComplianceScore": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "type": "string"
                    },
                    "improvements": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ComplianceViolation": {
                "type": "object",
                "properties": {
                    "ruleId": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "affectedResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediationSteps": {
                        "type": "string"
                    }
                }
            },
            "ContextualSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "summaryType": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "targetAudience": {
                        "type": "string"
                    },
                    "keyPoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ContractIntelligence": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "contractType": {
                        "type": "string"
                    },
                    "riskScores": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "detectedClauses": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "keyObligations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "complianceScores": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "jurisdiction": {
                        "type": "string"
                    },
                    "governingLaws": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "semanticAnalysis": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "analysisDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "riskAssessments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiskAssessment"
                        },
                        "title": "Relationships"
                    },
                    "complianceChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceCheck"
                        }
                    }
                },
                "title": "AI and Analytics entities"
            },
            "CreateAccountRequest1": {
                "type": "object",
                "properties": {
                    "auth0UserId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "baseDirectory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfaEnabled": {
                        "type": "boolean"
                    },
                    "complianceLevel": {
                        "$ref": "#/components/schemas/ComplianceLevel"
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "title": "Account Management Messages",
                "required": [
                    "auth0UserId",
                    "email"
                ]
            },
            "CreateAccountResponse1": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account1"
                    },
                    "initialWorkspaceName": {
                        "type": "string"
                    }
                }
            },
            "CreateWorkspaceRequest1": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "allowPublicSharing": {
                        "type": "boolean"
                    },
                    "requireApproval": {
                        "type": "boolean"
                    },
                    "gdprCompliant": {
                        "type": "boolean"
                    },
                    "hipaaCompliant": {
                        "type": "boolean"
                    }
                },
                "title": "Workspace Management Messages",
                "required": [
                    "name"
                ]
            },
            "CreateWorkspaceResponse1": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace1"
                    }
                }
            },
            "DataProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileType": {
                        "type": "string"
                    },
                    "dataFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DocumentBranch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "baseVersionHash": {
                        "type": "string"
                    },
                    "currentHeadHash": {
                        "type": "string"
                    },
                    "purpose": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "branchMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "merges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BranchMerge"
                        },
                        "title": "Relationships"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/BranchPolicy"
                    },
                    "mergeRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MergeRequest"
                        }
                    }
                }
            },
            "DocumentInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DocumentStatus"
                    },
                    "fieldValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "signers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "language": {
                        "type": "string"
                    },
                    "isCompleted": {
                        "type": "boolean"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "generatedContent": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "signatureRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignatureRequest"
                        },
                        "title": "Relationships"
                    },
                    "aiAssistance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AIAssistanceLog"
                        }
                    },
                    "negotiation": {
                        "$ref": "#/components/schemas/NegotiationHistory"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentVersion"
                        }
                    }
                }
            },
            "DocumentSnapshot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "snapshotHash": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string",
                        "format": "byte"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DocumentStatus": {
                "type": "string",
                "enum": [
                    "DOCUMENT_STATUS_UNSPECIFIED",
                    "DOCUMENT_STATUS_DRAFT",
                    "DOCUMENT_STATUS_IN_REVIEW",
                    "DOCUMENT_STATUS_APPROVED",
                    "DOCUMENT_STATUS_REJECTED",
                    "DOCUMENT_STATUS_EXPIRED",
                    "DOCUMENT_STATUS_ARCHIVED"
                ],
                "default": "DOCUMENT_STATUS_UNSPECIFIED",
                "title": "Status enums"
            },
            "DocumentTemplate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "industryType": {
                        "type": "string"
                    },
                    "documentType": {
                        "type": "string"
                    },
                    "baseContent": {
                        "type": "string"
                    },
                    "isAdaptive": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "supportedLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requiredDataFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "templateType": {
                        "$ref": "#/components/schemas/TemplateType"
                    },
                    "content": {
                        "type": "string"
                    },
                    "detectedVariables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "variableMappings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isContextAware": {
                        "type": "boolean"
                    },
                    "supportedContexts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "formattingRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "conditionalSections": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateVersion"
                        },
                        "title": "Relationships"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateVariable"
                        }
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentInstance"
                        }
                    },
                    "explanations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExplanationBlock"
                        }
                    },
                    "intelligence": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractIntelligence"
                        }
                    }
                },
                "title": "Document management entities"
            },
            "DocumentVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionHash": {
                        "type": "string"
                    },
                    "parentHash": {
                        "type": "string"
                    },
                    "commitMessage": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "branchName": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isApproved": {
                        "type": "boolean"
                    },
                    "approvalChain": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "branches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentBranch"
                        },
                        "title": "Relationships"
                    },
                    "changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeSet"
                        }
                    },
                    "summaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextualSummary"
                        }
                    }
                },
                "title": "Version control entities"
            },
            "ExplanationBlock": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sectionIdentifier": {
                        "type": "string"
                    },
                    "explanationText": {
                        "type": "string"
                    },
                    "complexityLevel": {
                        "type": "string"
                    },
                    "relatedTerms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "legalReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileEmbeddings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "embeddings": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "modelVersion": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "s3Key": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "embeddings": {
                        "$ref": "#/components/schemas/FileEmbeddings"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileVersion"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentThread"
                        }
                    },
                    "sharing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileSharing"
                        }
                    },
                    "snapshots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentSnapshot"
                        }
                    }
                }
            },
            "FileSharing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "s3Key": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "commitMessage": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FolderMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3FolderPath": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "parentFolderId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileMetadata"
                        },
                        "title": "Relationships"
                    }
                },
                "title": "File system entities"
            },
            "GetAccountResponse1": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account1"
                    }
                }
            },
            "GetWorkspaceAnalyticsResponse1": {
                "type": "object",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ActivityMetrics"
                    },
                    "userActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserActivity"
                        }
                    },
                    "compliance": {
                        "$ref": "#/components/schemas/ComplianceMetrics"
                    },
                    "recentActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceActivity"
                        }
                    }
                }
            },
            "GetWorkspaceComplianceReportResponse": {
                "type": "object",
                "properties": {
                    "overallScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "complianceStatus": {
                        "type": "string"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceViolation"
                        }
                    },
                    "categoryScores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceScore"
                        }
                    },
                    "reportGeneratedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "certificationId": {
                        "type": "string"
                    }
                }
            },
            "GetWorkspaceStorageStatsResponse": {
                "type": "object",
                "properties": {
                    "totalStorageUsed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "usagePercentage": {
                        "type": "number",
                        "format": "float"
                    },
                    "storageByType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageBreakdown"
                        }
                    },
                    "totalFiles": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalFolders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListAccountsResponse1": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account1"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkspaceSharingsResponse": {
                "type": "object",
                "properties": {
                    "sharings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceSharing"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkspacesResponse1": {
                "type": "object",
                "properties": {
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace1"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MarketplaceApp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "developerId": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/AppCategory"
                    },
                    "supportedContractTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pricingModel": {
                        "$ref": "#/components/schemas/PricingModel"
                    },
                    "pricingTiers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "supportedIntegrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isVerified": {
                        "type": "boolean"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "installationCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requiredPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "documentationUrl": {
                        "type": "string"
                    },
                    "supportEmail": {
                        "type": "string"
                    },
                    "screenshots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privacyPolicyUrl": {
                        "type": "string"
                    },
                    "termsUrl": {
                        "type": "string"
                    },
                    "publishedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppVersion"
                        },
                        "title": "Relationships"
                    },
                    "installations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppInstallation"
                        }
                    },
                    "analytics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppAnalytics"
                        }
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppReview"
                        }
                    },
                    "info": {
                        "$ref": "#/components/schemas/AppDevelopmentInfo"
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppWebhook"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppPermission"
                        }
                    }
                },
                "title": "App Marketplace entities"
            },
            "MergeRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sourceBranchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "targetBranchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hasConflicts": {
                        "type": "boolean"
                    },
                    "automatedCheckResults": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NegotiationHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "rounds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NegotiationRound"
                        }
                    },
                    "currentStatus": {
                        "type": "string"
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NegotiationRound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "historyId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roundNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "proposerId": {
                        "type": "string"
                    },
                    "proposalContent": {
                        "type": "string"
                    },
                    "responseContent": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PricingModel": {
                "type": "string",
                "enum": [
                    "PRICING_MODEL_UNSPECIFIED",
                    "PRICING_MODEL_FREE",
                    "PRICING_MODEL_SUBSCRIPTION",
                    "PRICING_MODEL_USAGE_BASED",
                    "PRICING_MODEL_ENTERPRISE"
                ],
                "default": "PRICING_MODEL_UNSPECIFIED"
            },
            "RemoveWorkspaceSharingResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "RiskAssessment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "intelligenceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "riskType": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "assessmentDetails": {
                        "type": "string"
                    },
                    "mitigationSuggestions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assessorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ShareWorkspaceBody": {
                "type": "object",
                "properties": {
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Workspace Sharing Messages"
            },
            "ShareWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "SignatureBlock": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "blockType": {
                        "type": "string"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "xPosition": {
                        "type": "number",
                        "format": "float"
                    },
                    "yPosition": {
                        "type": "number",
                        "format": "float"
                    },
                    "width": {
                        "type": "number",
                        "format": "float"
                    },
                    "height": {
                        "type": "number",
                        "format": "float"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "signatureData": {
                        "type": "string"
                    },
                    "signedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SignatureRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SignatureStatus"
                    },
                    "signerEmail": {
                        "type": "string"
                    },
                    "signerName": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "authenticationMethod": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requiresMfa": {
                        "type": "boolean"
                    },
                    "signatureType": {
                        "type": "string"
                    },
                    "reminderSchedule": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "signatureBlocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignatureBlock"
                        },
                        "title": "Relationships"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/SignatureWorkflow"
                    }
                },
                "title": "E-Signature entities"
            },
            "SignatureStatus": {
                "type": "string",
                "enum": [
                    "SIGNATURE_STATUS_UNSPECIFIED",
                    "SIGNATURE_STATUS_PENDING",
                    "SIGNATURE_STATUS_SIGNED",
                    "SIGNATURE_STATUS_REJECTED",
                    "SIGNATURE_STATUS_EXPIRED",
                    "SIGNATURE_STATUS_REVOKED"
                ],
                "default": "SIGNATURE_STATUS_UNSPECIFIED"
            },
            "SignatureWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "signingOrder": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "currentSigner": {
                        "type": "string"
                    },
                    "workflowStatus": {
                        "type": "string"
                    },
                    "parallelSigning": {
                        "type": "boolean"
                    },
                    "requireAllSignatures": {
                        "type": "boolean"
                    },
                    "deadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
                    },
                    "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
                    }
                },
                "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
            },
            "StorageBreakdown": {
                "type": "object",
                "properties": {
                    "fileType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "fileCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TemplateType": {
                "type": "string",
                "enum": [
                    "TEMPLATE_TYPE_UNSPECIFIED",
                    "TEMPLATE_TYPE_STANDARD",
                    "TEMPLATE_TYPE_SMART",
                    "TEMPLATE_TYPE_ADAPTIVE",
                    "TEMPLATE_TYPE_AI_GENERATED"
                ],
                "default": "TEMPLATE_TYPE_UNSPECIFIED"
            },
            "TemplateVariable": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "variableType": {
                        "type": "string"
                    },
                    "defaultValue": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "validationRules": {
                        "type": "string"
                    },
                    "dataSource": {
                        "type": "string"
                    },
                    "aiExtractionRules": {
                        "type": "string"
                    },
                    "alternatives": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "TemplateVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "version": {
                        "type": "string"
                    },
                    "baseContent": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "changeDescription": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "UpdateAccountRequest1": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account1"
                    }
                }
            },
            "UpdateWorkspaceSharingRequest": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "UpdateWorkspaceSharingResponse": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "UserActivity": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fileOperations": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "commentsMade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "documentsProcessed": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Workspace1": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uniqueIdentifier": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3FolderPath": {
                        "type": "string"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "usedStorage": {
                        "type": "string",
                        "format": "int64"
                    },
                    "allowPublicSharing": {
                        "type": "boolean"
                    },
                    "requireApproval": {
                        "type": "boolean"
                    },
                    "gdprCompliant": {
                        "type": "boolean"
                    },
                    "hipaaCompliant": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderMetadata"
                        },
                        "title": "Relationships"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentTemplate"
                        }
                    },
                    "sharing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceSharing"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceActivity"
                        }
                    },
                    "compliance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceCompliance"
                        }
                    },
                    "installedApps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketplaceApp"
                        }
                    }
                }
            },
            "WorkspaceActivity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "activityType": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WorkspaceCompliance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "complianceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "certificationId": {
                        "type": "string"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WorkspaceSharing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header",
                "x-amazon-apigateway-authorizer": {
                    "authorizerResultTtlInSeconds": 60,
                    "type": "token"
                },
                "x-amazon-apigateway-authtype": "oauth2"
            }
        }
    }
}