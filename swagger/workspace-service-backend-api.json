{
    "openapi": "3.0.0",
    "info": {
        "title": "Workspace Service API",
        "description": "Vector Workspace Service API - Manages workspaces, accounts, and document collaboration",
        "version": "1.0",
        "contact": {
            "name": "Vector AI Engineering",
            "url": "https://vector.ai",
            "email": "yoanyomba@vector.ai"
        },
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://github.com/SolomonAIEngineering/backend-monorepo/blob/main/LICENSE"
        },
        "x-api-version": "v1"
    },
    "tags": [
        {
            "name": "Account Management",
            "description": "APIs for managing user accounts and account settings",
            "externalDocs": {
                "description": "Learn more about account management",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/accounts"
            }
        },
        {
            "name": "Workspace Management",
            "description": "APIs for managing workspaces, workspace settings, and configurations",
            "externalDocs": {
                "description": "Learn more about workspace management",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/workspaces"
            }
        },
        {
            "name": "Workspace Sharing",
            "description": "APIs for managing workspace sharing, permissions, and team collaboration",
            "externalDocs": {
                "description": "Learn more about workspace sharing",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/sharing"
            }
        },
        {
            "name": "Analytics",
            "description": "APIs for workspace usage analytics and reporting",
            "externalDocs": {
                "description": "Learn more about analytics",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/analytics"
            }
        },
        {
            "name": "Compliance",
            "description": "APIs for compliance reporting and auditing",
            "externalDocs": {
                "description": "Learn more about compliance",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/compliance"
            }
        },
        {
            "name": "Storage",
            "description": "APIs for storage management and statistics",
            "externalDocs": {
                "description": "Learn more about storage",
                "url": "https://internal-docs.solomon-ai.io/workspace-service/storage"
            }
        },
        {
            "name": "WorkspaceService"
        }
    ],
    "paths": {
        "/workspace-service/v1/accounts": {
            "get": {
                "summary": "List accounts",
                "operationId": "ListAccounts",
                "responses": {
                    "200": {
                        "description": "Accounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAccountsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"accounts\":[{\"id\":\"123\",\"email\":\"user1@example.com\"},{\"id\":\"124\",\"email\":\"user2@example.com\"}],\"next_page_token\":\"token123\",\"total_size\":50}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Account Management"
                ]
            },
            "post": {
                "summary": "Create a new account",
                "description": "Creates a new user account with initial workspace",
                "operationId": "CreateAccount",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"user@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\"],\"permissions\":[\"read:workspace\",\"write:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_BASIC\"},\"initial_workspace_name\":\"My Workspace\"}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            },
            "put": {
                "summary": "Update account details",
                "operationId": "UpdateAccount",
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"updated@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\",\"admin\"],\"permissions\":[\"read:workspace\",\"write:workspace\",\"manage:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_ADVANCED\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/accounts/{id}": {
            "get": {
                "summary": "Get account details",
                "operationId": "GetAccount",
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"account\":{\"id\":\"123\",\"auth0_user_id\":\"auth0|123\",\"email\":\"user@example.com\",\"base_directory\":\"/users/123\",\"region\":\"us-east-1\",\"org_id\":\"456\",\"tenant_id\":\"789\",\"roles\":[\"user\"],\"permissions\":[\"read:workspace\",\"write:workspace\"],\"mfa_enabled\":true,\"compliance_level\":\"COMPLIANCE_LEVEL_BASIC\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            },
            "delete": {
                "summary": "Delete account",
                "operationId": "DeleteAccount",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAccountResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspace-sharings": {
            "put": {
                "summary": "Update workspace sharing",
                "operationId": "UpdateWorkspaceSharing",
                "responses": {
                    "200": {
                        "description": "Workspace sharing updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceSharingResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharing\":{\"id\":\"456\",\"shared_with_email\":\"collaborator@example.com\",\"permission_level\":\"admin\",\"expires_at\":\"2025-12-31T23:59:59Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceSharingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceSharingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspace-sharings/{sharingId}": {
            "delete": {
                "summary": "Remove workspace sharing",
                "operationId": "RemoveWorkspaceSharing",
                "responses": {
                    "200": {
                        "description": "Workspace sharing removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveWorkspaceSharingResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "sharingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces": {
            "post": {
                "summary": "Create workspace",
                "operationId": "CreateWorkspace",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X\",\"storage_quota\":1073741824,\"allow_public_sharing\":false,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":false}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            },
            "put": {
                "summary": "Update workspace",
                "operationId": "UpdateWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X - Updated\",\"storage_quota\":2147483648,\"allow_public_sharing\":true,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":true}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/analytics/{workspaceId}": {
            "get": {
                "summary": "Get workspace analytics",
                "operationId": "GetWorkspaceAnalytics",
                "responses": {
                    "200": {
                        "description": "Analytics data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceAnalyticsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"activity\":{\"total_files\":150,\"total_folders\":25,\"active_users\":10,\"storage_used\":524288000,\"storage_usage_percentage\":48.8},\"user_activities\":[{\"user_id\":\"123\",\"email\":\"user@example.com\",\"file_operations\":45,\"comments_made\":12,\"documents_processed\":8}],\"compliance\":{\"gdpr_compliance_score\":0.95,\"hipaa_compliance_score\":0.88,\"pending_approvals\":3,\"compliance_violations\":1}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/compliance-report/{workspaceId}": {
            "get": {
                "summary": "Get compliance report",
                "operationId": "GetWorkspaceComplianceReport",
                "responses": {
                    "200": {
                        "description": "Compliance report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceComplianceReportResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"overall_score\":0.92,\"compliance_status\":\"compliant\",\"violations\":[{\"rule_id\":\"GDPR-001\",\"severity\":\"medium\",\"description\":\"Missing data retention policy\",\"affected_resources\":[\"doc-123\",\"doc-456\"],\"remediation_steps\":\"Set up data retention policy\"}],\"category_scores\":[{\"category\":\"Data Protection\",\"score\":0.95,\"status\":\"passed\",\"improvements\":[\"Enable encryption at rest\"]}]}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "complianceType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/list": {
            "get": {
                "summary": "List workspaces",
                "operationId": "ListWorkspaces",
                "responses": {
                    "200": {
                        "description": "Workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspacesResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspaces\":[{\"id\":\"789\",\"name\":\"Project X\"},{\"id\":\"790\",\"name\":\"Project Y\"}],\"next_page_token\":\"token456\",\"total_size\":25}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/sharings/{workspaceId}": {
            "get": {
                "summary": "List workspace sharings",
                "operationId": "ListWorkspaceSharings",
                "responses": {
                    "200": {
                        "description": "Workspace sharings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListWorkspaceSharingsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharings\":[{\"id\":\"456\",\"shared_with_email\":\"user1@example.com\",\"permission_level\":\"editor\"},{\"id\":\"457\",\"shared_with_email\":\"user2@example.com\",\"permission_level\":\"viewer\"}],\"next_page_token\":\"token789\",\"total_size\":10}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageToken",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/storage-stats/{workspaceId}": {
            "get": {
                "summary": "Get storage statistics",
                "operationId": "GetWorkspaceStorageStats",
                "responses": {
                    "200": {
                        "description": "Storage statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceStorageStatsResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"total_storage_used\":524288000,\"storage_quota\":1073741824,\"usage_percentage\":48.8,\"storage_by_type\":[{\"file_type\":\"pdf\",\"size\":262144000,\"file_count\":75},{\"file_type\":\"docx\",\"size\":131072000,\"file_count\":45}],\"total_files\":150,\"total_folders\":25}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/{id}": {
            "get": {
                "summary": "Get workspace details",
                "operationId": "GetWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"workspace\":{\"id\":\"789\",\"name\":\"Project X\",\"storage_quota\":1073741824,\"used_storage\":52428800,\"allow_public_sharing\":false,\"require_approval\":true,\"gdpr_compliant\":true,\"hipaa_compliant\":false}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            },
            "delete": {
                "summary": "Delete workspace",
                "operationId": "DeleteWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"success\":true}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "tags": [
                    "workspace-service"
                ]
            }
        },
        "/workspace-service/v1/workspaces/{workspaceId}/share": {
            "post": {
                "summary": "Share workspace",
                "operationId": "ShareWorkspace",
                "responses": {
                    "200": {
                        "description": "Workspace shared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShareWorkspaceResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"sharing\":{\"id\":\"456\",\"shared_with_email\":\"collaborator@example.com\",\"permission_level\":\"editor\",\"expires_at\":\"2024-12-31T23:59:59Z\"}}"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":400,\"message\":\"Bad Request\"},\"error_code\":2000,\"message\":\"Invalid input parameters\",\"field_violations\":[{\"field\":\"email\",\"message\":\"Invalid email format\"}]}"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":401,\"message\":\"Unauthorized\"},\"error_code\":1001,\"message\":\"Authentication failed\"}"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":403,\"message\":\"Forbidden\"},\"error_code\":1103,\"message\":\"Insufficient permissions\"}"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":404,\"message\":\"Not Found\"},\"error_code\":5102,\"message\":\"Resource not found\"}"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Resource already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":409,\"message\":\"Conflict\"},\"error_code\":2300,\"message\":\"Resource already exists\"}"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests - Rate limit exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RateLimitErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":429,\"message\":\"Too Many Requests\"},\"error_code\":4102,\"message\":\"Rate limit exceeded\"}"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalErrorMessageResponse"
                                }
                            },
                            "": {
                                "examples": {
                                    "response": {
                                        "value": "{\"status\":{\"code\":500,\"message\":\"Internal Server Error\"},\"error_code\":4000,\"message\":\"An unexpected error occurred\"}"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareWorkspaceBody"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ShareWorkspaceBody"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "workspace-service"
                ]
            }
        }
    },
    "externalDocs": {
        "description": "Vector Workspace Service Documentation",
        "url": "https://internal-docs.solomon-ai.io/workspace-service"
    },
    "servers": [
        {
            "url": "http://workspace-service.vector.svc.cluster.local:9896"
        },
        {
            "url": "https://workspace-service.vector.svc.cluster.local:9896"
        },
        {
            "url": "wss://workspace-service.vector.svc.cluster.local:9896"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header",
                "x-amazon-apigateway-authorizer": {
                    "authorizerResultTtlInSeconds": 60,
                    "type": "token"
                },
                "x-amazon-apigateway-authtype": "oauth2"
            }
        },
        "schemas": {
            "AIAssistanceLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "interactionType": {
                        "type": "string"
                    },
                    "userQuery": {
                        "type": "string"
                    },
                    "aiResponse": {
                        "type": "string"
                    },
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "APIInfo": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "title": "API version used"
                    },
                    "supportedVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Supported API versions"
                    },
                    "isDeprecated": {
                        "type": "boolean",
                        "title": "Whether endpoint is deprecated"
                    },
                    "sunsetDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When endpoint will be removed"
                    }
                }
            },
            "Account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "auth0UserId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "baseDirectory": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfaEnabled": {
                        "type": "boolean"
                    },
                    "complianceLevel": {
                        "$ref": "#/components/schemas/ComplianceLevel"
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "apiKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace"
                        },
                        "title": "Relationships"
                    },
                    "dataProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataProfile"
                        }
                    }
                },
                "title": "Core entities"
            },
            "ActivityMetrics": {
                "type": "object",
                "properties": {
                    "totalFiles": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalFolders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "activeUsers": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "storageUsed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "storageUsagePercentage": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "Any": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "AppAnalytics": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "metricValue": {
                        "type": "number",
                        "format": "float"
                    },
                    "dimensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "recordedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppCategory": {
                "type": "string",
                "enum": [
                    "APP_CATEGORY_UNSPECIFIED",
                    "APP_CATEGORY_CONTRACT_AUTOMATION",
                    "APP_CATEGORY_CONTRACT_ANALYSIS",
                    "APP_CATEGORY_INTEGRATION",
                    "APP_CATEGORY_AI_POWERED",
                    "APP_CATEGORY_WORKFLOW",
                    "APP_CATEGORY_COMPLIANCE"
                ],
                "default": "APP_CATEGORY_UNSPECIFIED",
                "title": "Additional enums for marketplace and analytics"
            },
            "AppDevelopmentInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "supportedLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sdkFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "testCoverage": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "securityScans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "performanceMetrics": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "developmentStatus": {
                        "type": "string"
                    },
                    "knownIssues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roadmapUrl": {
                        "type": "string"
                    },
                    "lastSecurityAudit": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppInstallation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "workspaceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionInstalled": {
                        "type": "string"
                    },
                    "configuration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "installationStatus": {
                        "type": "string"
                    },
                    "installedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUsed": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppPermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "accessLevels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "constraints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "requiresApproval": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppReview": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "reviewerId": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "reviewText": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionNumber": {
                        "type": "string"
                    },
                    "changelog": {
                        "type": "string"
                    },
                    "requirements": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "releaseDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AppWebhook": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "appId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "url": {
                        "type": "string"
                    },
                    "subscribedEvents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secretKey": {
                        "type": "string"
                    },
                    "retryCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeoutSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lastTriggered": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthContext": {
                "type": "object",
                "properties": {
                    "requiredScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Scopes required for the operation"
                    },
                    "providedScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Scopes present in the token"
                    },
                    "missingPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Permissions that were missing"
                    },
                    "tenantId": {
                        "type": "string",
                        "title": "Tenant context if applicable"
                    }
                }
            },
            "AuthErrorCode": {
                "type": "string",
                "enum": [
                    "NO_AUTH_ERROR",
                    "AUTH_FAILED_INVALID_BEARER_TOKEN",
                    "AUTH_FAILED_INVALID_SUBJECT",
                    "AUTH_FAILED_INVALID_AUDIENCE",
                    "AUTH_FAILED_INVALID_ISSUER",
                    "BEARER_TOKEN_MISSING",
                    "TOKEN_EXPIRED",
                    "TOKEN_NOT_ACTIVE",
                    "TOKEN_REVOKED",
                    "INVALID_CLAIMS",
                    "MISSING_REQUIRED_CLAIMS",
                    "INVALID_SCOPE",
                    "INVALID_PERMISSIONS",
                    "SESSION_EXPIRED",
                    "SESSION_INVALID",
                    "SESSION_REVOKED",
                    "UNAUTHENTICATED",
                    "MULTI_FACTOR_REQUIRED",
                    "MULTI_FACTOR_FAILED",
                    "ACCOUNT_LOCKED",
                    "ACCOUNT_DISABLED",
                    "PASSWORD_EXPIRED",
                    "PASSWORD_RESET_REQUIRED",
                    "UNRECOGNIZED_DEVICE"
                ],
                "default": "NO_AUTH_ERROR",
                "description": "- AUTH_FAILED_INVALID_BEARER_TOKEN: Authentication errors\n - SESSION_EXPIRED: Session errors\n - UNAUTHENTICATED: Other authentication errors\n - ACCOUNT_LOCKED: New authentication error codes\n\nAccount is locked due to too many failed login attempts\n - ACCOUNT_DISABLED: Account has been disabled by admin\n - PASSWORD_EXPIRED: Password has expired and must be changed\n - PASSWORD_RESET_REQUIRED: Password reset is required\n - UNRECOGNIZED_DEVICE: Login attempt from an unrecognized device",
                "title": "Enhanced AuthErrorCode represents authentication-related error codes"
            },
            "AuthenticationErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 1001,
                    "message": "Authentication failed",
                    "token_info": {
                        "token_id": "t-123",
                        "expiry": "2024-01-01T00:00:00Z"
                    },
                    "auth_context": {
                        "required_scopes": [
                            "read",
                            "write"
                        ],
                        "provided_scopes": [
                            "read"
                        ]
                    },
                    "session_info": {
                        "session_id": "s-456",
                        "last_active": "2024-01-01T00:00:00Z"
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/AuthErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "tokenInfo": {
                        "$ref": "#/components/schemas/TokenInfo"
                    },
                    "authContext": {
                        "$ref": "#/components/schemas/AuthContext"
                    },
                    "sessionInfo": {
                        "$ref": "#/components/schemas/SessionInfo"
                    },
                    "mfaInfo": {
                        "$ref": "#/components/schemas/MFAInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents authentication and authorization failures",
                "title": "Authentication Error Response"
            },
            "BranchMerge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "branchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sourceBranch": {
                        "type": "string"
                    },
                    "targetBranch": {
                        "type": "string"
                    },
                    "mergeStatus": {
                        "type": "string"
                    },
                    "mergeStrategy": {
                        "type": "string"
                    },
                    "conflicts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mergerId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "BranchPolicy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "branchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requiredApprovers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "minimumApprovals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enforceLinearHistory": {
                        "type": "boolean"
                    },
                    "allowForcePush": {
                        "type": "boolean"
                    },
                    "protectedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mergeRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "automatedChecks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Enhanced version control entities"
            },
            "ChangeSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "changeType": {
                        "type": "string"
                    },
                    "contentBefore": {
                        "type": "string"
                    },
                    "contentAfter": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CommentThread": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "startPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "resolved": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ComplianceCheck": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "intelligenceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "complianceStandard": {
                        "type": "string"
                    },
                    "checkResult": {
                        "type": "string"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediationSteps": {
                        "type": "string"
                    },
                    "checkDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ComplianceLevel": {
                "type": "string",
                "enum": [
                    "COMPLIANCE_LEVEL_UNSPECIFIED",
                    "COMPLIANCE_LEVEL_NONE",
                    "COMPLIANCE_LEVEL_BASIC",
                    "COMPLIANCE_LEVEL_ADVANCED",
                    "COMPLIANCE_LEVEL_ENTERPRISE"
                ],
                "default": "COMPLIANCE_LEVEL_UNSPECIFIED",
                "title": "Additional status enums"
            },
            "ComplianceMetrics": {
                "type": "object",
                "properties": {
                    "gdprComplianceScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "hipaaComplianceScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "pendingApprovals": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "complianceViolations": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ComplianceScore": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "type": "string"
                    },
                    "improvements": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ComplianceViolation": {
                "type": "object",
                "properties": {
                    "ruleId": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "affectedResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "remediationSteps": {
                        "type": "string"
                    }
                }
            },
            "ConflictErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 2300,
                    "message": "Resource already exists",
                    "conflict_info": {
                        "resource_type": "user",
                        "identifier": "email@example.com"
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ValidationErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "conflictInfo": {
                        "$ref": "#/components/schemas/ConflictInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents resource conflict errors",
                "title": "Conflict Error Response"
            },
            "ConflictInfo": {
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "conflictReason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string"
                    }
                }
            },
            "ContextualSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "summaryType": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "targetAudience": {
                        "type": "string"
                    },
                    "keyPoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ContractIntelligence": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "contractType": {
                        "type": "string"
                    },
                    "riskScores": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "detectedClauses": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "keyObligations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "complianceScores": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "jurisdiction": {
                        "type": "string"
                    },
                    "governingLaws": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "semanticAnalysis": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "analysisDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "riskAssessments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiskAssessment"
                        },
                        "title": "Relationships"
                    },
                    "complianceChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceCheck"
                        }
                    }
                },
                "title": "AI and Analytics entities"
            },
            "CreateAccountRequest": {
                "type": "object",
                "properties": {
                    "auth0UserId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "baseDirectory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "orgId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfaEnabled": {
                        "type": "boolean"
                    },
                    "complianceLevel": {
                        "$ref": "#/components/schemas/ComplianceLevel"
                    },
                    "preferences": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "title": "Account Management Messages",
                "required": [
                    "auth0UserId",
                    "email"
                ]
            },
            "CreateAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "initialWorkspaceName": {
                        "type": "string"
                    }
                }
            },
            "CreateWorkspaceRequest": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "allowPublicSharing": {
                        "type": "boolean"
                    },
                    "requireApproval": {
                        "type": "boolean"
                    },
                    "gdprCompliant": {
                        "type": "boolean"
                    },
                    "hipaaCompliant": {
                        "type": "boolean"
                    }
                },
                "title": "Workspace Management Messages",
                "required": [
                    "name"
                ]
            },
            "CreateWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    }
                }
            },
            "DataProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileType": {
                        "type": "string"
                    },
                    "dataFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DeleteAccountResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "DeleteWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "Dependency": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Dependency name"
                    },
                    "status": {
                        "type": "string",
                        "title": "Dependency status"
                    },
                    "error": {
                        "type": "string",
                        "title": "Error if any"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Current latency in ms"
                    }
                }
            },
            "DocumentBranch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "baseVersionHash": {
                        "type": "string"
                    },
                    "currentHeadHash": {
                        "type": "string"
                    },
                    "purpose": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "branchMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "merges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BranchMerge"
                        },
                        "title": "Relationships"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/BranchPolicy"
                    },
                    "mergeRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MergeRequest"
                        }
                    }
                }
            },
            "DocumentInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/DocumentStatus"
                    },
                    "fieldValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "signers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "language": {
                        "type": "string"
                    },
                    "isCompleted": {
                        "type": "boolean"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "generatedContent": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "signatureRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignatureRequest"
                        },
                        "title": "Relationships"
                    },
                    "aiAssistance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AIAssistanceLog"
                        }
                    },
                    "negotiation": {
                        "$ref": "#/components/schemas/NegotiationHistory"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentVersion"
                        }
                    }
                }
            },
            "DocumentSnapshot": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "snapshotHash": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string",
                        "format": "byte"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DocumentStatus": {
                "type": "string",
                "enum": [
                    "DOCUMENT_STATUS_UNSPECIFIED",
                    "DOCUMENT_STATUS_DRAFT",
                    "DOCUMENT_STATUS_IN_REVIEW",
                    "DOCUMENT_STATUS_APPROVED",
                    "DOCUMENT_STATUS_REJECTED",
                    "DOCUMENT_STATUS_EXPIRED",
                    "DOCUMENT_STATUS_ARCHIVED"
                ],
                "default": "DOCUMENT_STATUS_UNSPECIFIED",
                "title": "Status enums"
            },
            "DocumentTemplate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "industryType": {
                        "type": "string"
                    },
                    "documentType": {
                        "type": "string"
                    },
                    "baseContent": {
                        "type": "string"
                    },
                    "isAdaptive": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "supportedLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requiredDataFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "templateType": {
                        "$ref": "#/components/schemas/TemplateType"
                    },
                    "content": {
                        "type": "string"
                    },
                    "detectedVariables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "variableMappings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "isContextAware": {
                        "type": "boolean"
                    },
                    "supportedContexts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "formattingRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "conditionalSections": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateVersion"
                        },
                        "title": "Relationships"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TemplateVariable"
                        }
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentInstance"
                        }
                    },
                    "explanations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExplanationBlock"
                        }
                    },
                    "intelligence": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractIntelligence"
                        }
                    }
                },
                "title": "Document management entities"
            },
            "DocumentVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionHash": {
                        "type": "string"
                    },
                    "parentHash": {
                        "type": "string"
                    },
                    "commitMessage": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "branchName": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isApproved": {
                        "type": "boolean"
                    },
                    "approvalChain": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "branches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentBranch"
                        },
                        "title": "Relationships"
                    },
                    "changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChangeSet"
                        }
                    },
                    "summaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContextualSummary"
                        }
                    }
                },
                "title": "Version control entities"
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    }
                },
                "title": "Base error message response, extending google.rpc.Status"
            },
            "ExplanationBlock": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sectionIdentifier": {
                        "type": "string"
                    },
                    "explanationText": {
                        "type": "string"
                    },
                    "complexityLevel": {
                        "type": "string"
                    },
                    "relatedTerms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "legalReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FieldViolation": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "title": "Field that failed validation"
                    },
                    "validation": {
                        "type": "string",
                        "title": "Type of validation that failed"
                    },
                    "message": {
                        "type": "string",
                        "title": "Specific error message"
                    },
                    "expected": {
                        "type": "string",
                        "title": "Expected value or format"
                    },
                    "actual": {
                        "type": "string",
                        "title": "Actual value provided"
                    }
                }
            },
            "FileEmbeddings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "embeddings": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "modelVersion": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "s3Key": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "embeddings": {
                        "$ref": "#/components/schemas/FileEmbeddings"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileVersion"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentThread"
                        }
                    },
                    "sharing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileSharing"
                        }
                    },
                    "snapshots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentSnapshot"
                        }
                    }
                }
            },
            "FileSharing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "fileId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "versionNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "s3Key": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "commitMessage": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FolderMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3FolderPath": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "parentFolderId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "childFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderMetadata"
                        },
                        "title": "Relationships"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileMetadata"
                        }
                    }
                },
                "title": "File system entities"
            },
            "ForbiddenErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 403,
                    "message": "Forbidden",
                    "reason": "Insufficient permissions",
                    "required_permissions": [
                        "admin"
                    ]
                },
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "title": "HTTP status code (403)"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "reason": {
                        "type": "string",
                        "title": "Reason for the forbidden access"
                    },
                    "requiredPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Permissions required to access the resource"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Indicates that the server understood the request but refuses to authorize it",
                "title": "Forbidden Error Response"
            },
            "GetAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "GetWorkspaceAnalyticsResponse": {
                "type": "object",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ActivityMetrics"
                    },
                    "userActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserActivity"
                        }
                    },
                    "compliance": {
                        "$ref": "#/components/schemas/ComplianceMetrics"
                    },
                    "recentActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceActivity"
                        }
                    }
                }
            },
            "GetWorkspaceComplianceReportResponse": {
                "type": "object",
                "properties": {
                    "overallScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "complianceStatus": {
                        "type": "string"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceViolation"
                        }
                    },
                    "categoryScores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComplianceScore"
                        }
                    },
                    "reportGeneratedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "certificationId": {
                        "type": "string"
                    }
                }
            },
            "GetWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    }
                }
            },
            "GetWorkspaceStorageStatsResponse": {
                "type": "object",
                "properties": {
                    "totalStorageUsed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "usagePercentage": {
                        "type": "number",
                        "format": "float"
                    },
                    "storageByType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageBreakdown"
                        }
                    },
                    "totalFiles": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalFolders": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "InternalErrorCode": {
                "type": "string",
                "enum": [
                    "NO_INTERNAL_ERROR",
                    "INTERNAL_ERROR",
                    "DATA_CORRUPTION",
                    "DATABASE_ERROR",
                    "CACHE_ERROR",
                    "RESOURCE_EXHAUSTED",
                    "QUOTA_EXCEEDED",
                    "RATE_LIMIT_EXCEEDED",
                    "CANCELLED",
                    "DEADLINE_EXCEEDED",
                    "ALREADY_EXISTS",
                    "FAILED_PRECONDITION",
                    "ABORTED",
                    "OUT_OF_RANGE",
                    "UNAVAILABLE",
                    "DATA_LOSS",
                    "SERVICE_DEGRADED",
                    "DEPENDENCY_FAILURE",
                    "CONFIGURATION_ERROR",
                    "SECURITY_BREACH_DETECTED"
                ],
                "default": "NO_INTERNAL_ERROR",
                "description": "- INTERNAL_ERROR: General internal errors\n - RESOURCE_EXHAUSTED: Resource exhaustion errors\n - CANCELLED: Operation errors\n - UNAVAILABLE: Availability errors\n - DEPENDENCY_FAILURE: New internal error codes\n\nFailure in external dependency\n - CONFIGURATION_ERROR: Service configuration error\n - SECURITY_BREACH_DETECTED: Potential security breach detected",
                "title": "Enhanced InternalErrorCode represents server-side error codes"
            },
            "InternalErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 4000,
                    "message": "Internal server error",
                    "incident_id": "inc-789",
                    "service_status": {
                        "name": "user-service",
                        "status": "degraded",
                        "dependencies": [
                            {
                                "name": "db",
                                "status": "down"
                            }
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "incidentId": {
                        "type": "string",
                        "title": "Unique error tracking ID"
                    },
                    "serviceStatus": {
                        "$ref": "#/components/schemas/ServiceStatus"
                    },
                    "resourceUtilization": {
                        "$ref": "#/components/schemas/ResourceUtilization"
                    },
                    "operationDetails": {
                        "$ref": "#/components/schemas/OperationDetails"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents internal server and system-level errors",
                "title": "Internal Error Response"
            },
            "LimitInfo": {
                "type": "object",
                "properties": {
                    "current": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Current request count"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Rate limit threshold"
                    },
                    "resetTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When the limit resets"
                    },
                    "windowSize": {
                        "type": "string",
                        "title": "Time window for the limit"
                    }
                }
            },
            "ListAccountsResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkspaceSharingsResponse": {
                "type": "object",
                "properties": {
                    "sharings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceSharing"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ListWorkspacesResponse": {
                "type": "object",
                "properties": {
                    "workspaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Workspace"
                        }
                    },
                    "nextPageToken": {
                        "type": "string"
                    },
                    "totalSize": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MFAInfo": {
                "type": "object",
                "properties": {
                    "mfaRequired": {
                        "type": "boolean",
                        "title": "Whether MFA was required"
                    },
                    "allowedMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Allowed MFA methods"
                    },
                    "failedReason": {
                        "type": "string",
                        "title": "Why MFA failed if applicable"
                    }
                }
            },
            "MarketplaceApp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "developerId": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/AppCategory"
                    },
                    "supportedContractTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pricingModel": {
                        "$ref": "#/components/schemas/PricingModel"
                    },
                    "pricingTiers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    "supportedIntegrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isVerified": {
                        "type": "boolean"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "installationCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "requiredPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "documentationUrl": {
                        "type": "string"
                    },
                    "supportEmail": {
                        "type": "string"
                    },
                    "screenshots": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privacyPolicyUrl": {
                        "type": "string"
                    },
                    "termsUrl": {
                        "type": "string"
                    },
                    "publishedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppVersion"
                        },
                        "title": "Relationships"
                    },
                    "installations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppInstallation"
                        }
                    },
                    "analytics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppAnalytics"
                        }
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppReview"
                        }
                    },
                    "info": {
                        "$ref": "#/components/schemas/AppDevelopmentInfo"
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppWebhook"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppPermission"
                        }
                    }
                },
                "title": "App Marketplace entities"
            },
            "MergeRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sourceBranchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "targetBranchId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hasConflicts": {
                        "type": "boolean"
                    },
                    "automatedCheckResults": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NegotiationHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "rounds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NegotiationRound"
                        }
                    },
                    "currentStatus": {
                        "type": "string"
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NegotiationRound": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "historyId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "roundNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "proposerId": {
                        "type": "string"
                    },
                    "proposalContent": {
                        "type": "string"
                    },
                    "responseContent": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NotFoundErrorCode": {
                "type": "string",
                "enum": [
                    "NO_NOT_FOUND_ERROR",
                    "UNDEFINED_ENDPOINT",
                    "UNIMPLEMENTED",
                    "STORE_ID_NOT_FOUND",
                    "USER_NOT_FOUND",
                    "RESOURCE_NOT_FOUND",
                    "TENANT_NOT_FOUND"
                ],
                "default": "NO_NOT_FOUND_ERROR",
                "description": "- NO_NOT_FOUND_ERROR: Default value as per proto3 convention\n - UNDEFINED_ENDPOINT: Endpoint errors\n\nRequested endpoint doesn't exist\n - UNIMPLEMENTED: Endpoint not implemented\n - STORE_ID_NOT_FOUND: Resource errors\n\nRequested store ID doesn't exist\n - USER_NOT_FOUND: Requested user doesn't exist\n - RESOURCE_NOT_FOUND: Generic resource not found\n - TENANT_NOT_FOUND: Requested tenant doesn't exist",
                "title": "Enhanced NotFoundErrorCode represents resource not found error codes"
            },
            "NotFoundErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 5000,
                    "message": "Resource not found",
                    "resource_info": {
                        "type": "user",
                        "id": "123",
                        "path": "/api/users/123"
                    },
                    "suggestions": {
                        "similar_resources": [
                            "124",
                            "125"
                        ],
                        "alternative_paths": [
                            "/api/v2/users/123"
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/NotFoundErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "resourceInfo": {
                        "$ref": "#/components/schemas/ResourceInfo"
                    },
                    "suggestions": {
                        "$ref": "#/components/schemas/Suggestions"
                    },
                    "apiInfo": {
                        "$ref": "#/components/schemas/APIInfo"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents resource not found errors",
                "title": "Not Found Error Response"
            },
            "OperationDetails": {
                "type": "object",
                "properties": {
                    "operationId": {
                        "type": "string",
                        "title": "ID of failed operation"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When operation started"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When operation failed"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Stack trace if available"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Operation parameters"
                    }
                }
            },
            "PricingModel": {
                "type": "string",
                "enum": [
                    "PRICING_MODEL_UNSPECIFIED",
                    "PRICING_MODEL_FREE",
                    "PRICING_MODEL_SUBSCRIPTION",
                    "PRICING_MODEL_USAGE_BASED",
                    "PRICING_MODEL_ENTERPRISE"
                ],
                "default": "PRICING_MODEL_UNSPECIFIED"
            },
            "QuotaInfo": {
                "type": "object",
                "properties": {
                    "resource": {
                        "type": "string",
                        "title": "Resource being limited"
                    },
                    "used": {
                        "type": "string",
                        "format": "int64",
                        "title": "Amount used"
                    },
                    "limit": {
                        "type": "string",
                        "format": "int64",
                        "title": "Quota limit"
                    },
                    "resetTime": {
                        "type": "string",
                        "format": "date-time",
                        "title": "When quota resets"
                    },
                    "resourceUsage": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "int64"
                        },
                        "title": "Usage by resource type"
                    }
                }
            },
            "RateLimitContext": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "title": "Affected user"
                    },
                    "ipAddress": {
                        "type": "string",
                        "title": "IP address"
                    },
                    "affectedEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Endpoints being rate limited"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Relevant headers"
                    }
                }
            },
            "RateLimitErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 4102,
                    "message": "Rate limit exceeded",
                    "limit_info": {
                        "current": 150,
                        "limit": 100,
                        "reset_time": "2024-01-01T00:00:00Z"
                    },
                    "quota_info": {
                        "resource": "api_calls",
                        "used": 1500,
                        "limit": 1000
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/InternalErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "limitInfo": {
                        "$ref": "#/components/schemas/LimitInfo"
                    },
                    "quotaInfo": {
                        "$ref": "#/components/schemas/QuotaInfo"
                    },
                    "context": {
                        "$ref": "#/components/schemas/RateLimitContext"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents rate limiting and quota exceeded errors",
                "title": "Rate Limit Error Response"
            },
            "RemoveWorkspaceSharingResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "ResourceInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type of resource not found"
                    },
                    "id": {
                        "type": "string",
                        "title": "ID of resource not found"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path that was accessed"
                    },
                    "tenantId": {
                        "type": "string",
                        "title": "Tenant context if applicable"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Required scopes for access"
                    }
                }
            },
            "ResourceUtilization": {
                "type": "object",
                "properties": {
                    "cpuUsage": {
                        "type": "number",
                        "format": "double",
                        "title": "CPU usage percentage"
                    },
                    "memoryUsage": {
                        "type": "number",
                        "format": "double",
                        "title": "Memory usage percentage"
                    },
                    "activeConnections": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of active connections"
                    },
                    "quotas": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number",
                            "format": "double"
                        },
                        "title": "Current quota utilization"
                    }
                }
            },
            "ResourceValidation": {
                "type": "object",
                "properties": {
                    "missingResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Resources that weren't found"
                    },
                    "invalidReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Invalid resource references"
                    },
                    "idViolations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "ID format violations"
                    }
                }
            },
            "RiskAssessment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "intelligenceId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "riskType": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "assessmentDetails": {
                        "type": "string"
                    },
                    "mitigationSuggestions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assessorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SchemaValidation": {
                "type": "object",
                "properties": {
                    "schemaVersion": {
                        "type": "string",
                        "title": "Version of schema used"
                    },
                    "invalidPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Patterns that were invalid"
                    },
                    "typeMismatches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Type mismatches found"
                    }
                }
            },
            "ServiceStatus": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name of the service"
                    },
                    "status": {
                        "type": "string",
                        "title": "Current service status"
                    },
                    "metrics": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Service metrics"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Dependency"
                        },
                        "title": "Status of dependencies"
                    }
                }
            },
            "SessionInfo": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string",
                        "title": "ID of the invalid session"
                    },
                    "lastActive": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last activity timestamp"
                    },
                    "deviceId": {
                        "type": "string",
                        "title": "Device associated with session"
                    },
                    "ipAddress": {
                        "type": "string",
                        "title": "IP address of the request"
                    }
                }
            },
            "ShareWorkspaceBody": {
                "type": "object",
                "properties": {
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "title": "Workspace Sharing Messages"
            },
            "ShareWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "SignatureBlock": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "blockType": {
                        "type": "string"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "xPosition": {
                        "type": "number",
                        "format": "float"
                    },
                    "yPosition": {
                        "type": "number",
                        "format": "float"
                    },
                    "width": {
                        "type": "number",
                        "format": "float"
                    },
                    "height": {
                        "type": "number",
                        "format": "float"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "signatureData": {
                        "type": "string"
                    },
                    "signedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SignatureRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SignatureStatus"
                    },
                    "signerEmail": {
                        "type": "string"
                    },
                    "signerName": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "authenticationMethod": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requiresMfa": {
                        "type": "boolean"
                    },
                    "signatureType": {
                        "type": "string"
                    },
                    "reminderSchedule": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "signatureBlocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SignatureBlock"
                        },
                        "title": "Relationships"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/SignatureWorkflow"
                    }
                },
                "title": "E-Signature entities"
            },
            "SignatureStatus": {
                "type": "string",
                "enum": [
                    "SIGNATURE_STATUS_UNSPECIFIED",
                    "SIGNATURE_STATUS_PENDING",
                    "SIGNATURE_STATUS_SIGNED",
                    "SIGNATURE_STATUS_REJECTED",
                    "SIGNATURE_STATUS_EXPIRED",
                    "SIGNATURE_STATUS_REVOKED"
                ],
                "default": "SIGNATURE_STATUS_UNSPECIFIED"
            },
            "SignatureWorkflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "requestId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "signingOrder": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "currentSigner": {
                        "type": "string"
                    },
                    "workflowStatus": {
                        "type": "string"
                    },
                    "parallelSigning": {
                        "type": "boolean"
                    },
                    "requireAllSignatures": {
                        "type": "boolean"
                    },
                    "deadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
                    },
                    "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Any"
                        },
                        "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
                    }
                },
                "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
            },
            "StorageBreakdown": {
                "type": "object",
                "properties": {
                    "fileType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string",
                        "format": "int64"
                    },
                    "fileCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Suggestions": {
                "type": "object",
                "properties": {
                    "similarResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Similar resource IDs"
                    },
                    "alternativePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Alternative API paths"
                    },
                    "documentationUrl": {
                        "type": "string",
                        "title": "Relevant documentation"
                    },
                    "hints": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Additional hints"
                    }
                }
            },
            "TemplateType": {
                "type": "string",
                "enum": [
                    "TEMPLATE_TYPE_UNSPECIFIED",
                    "TEMPLATE_TYPE_STANDARD",
                    "TEMPLATE_TYPE_SMART",
                    "TEMPLATE_TYPE_ADAPTIVE",
                    "TEMPLATE_TYPE_AI_GENERATED"
                ],
                "default": "TEMPLATE_TYPE_UNSPECIFIED"
            },
            "TemplateVariable": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "variableType": {
                        "type": "string"
                    },
                    "defaultValue": {
                        "type": "string"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "validationRules": {
                        "type": "string"
                    },
                    "dataSource": {
                        "type": "string"
                    },
                    "aiExtractionRules": {
                        "type": "string"
                    },
                    "alternatives": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    }
                }
            },
            "TemplateVersion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "templateId": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "version": {
                        "type": "string"
                    },
                    "baseContent": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "authorId": {
                        "type": "string"
                    },
                    "changeDescription": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TokenInfo": {
                "type": "object",
                "properties": {
                    "tokenId": {
                        "type": "string",
                        "title": "Identifier of the invalid token"
                    },
                    "tokenType": {
                        "type": "string",
                        "title": "Type of token (Bearer, JWT, etc)"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Token expiration time"
                    },
                    "issuer": {
                        "type": "string",
                        "title": "Token issuer"
                    },
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Token audiences"
                    }
                }
            },
            "UpdateAccountRequest": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "UpdateAccountResponse": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "UpdateWorkspaceRequest": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    }
                }
            },
            "UpdateWorkspaceResponse": {
                "type": "object",
                "properties": {
                    "workspace": {
                        "$ref": "#/components/schemas/Workspace"
                    }
                }
            },
            "UpdateWorkspaceSharingRequest": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "UpdateWorkspaceSharingResponse": {
                "type": "object",
                "properties": {
                    "sharing": {
                        "$ref": "#/components/schemas/WorkspaceSharing"
                    }
                }
            },
            "UserActivity": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fileOperations": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "commentsMade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "documentsProcessed": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ValidationErrorCode": {
                "type": "string",
                "enum": [
                    "NO_ERROR",
                    "VALIDATION_ERROR",
                    "INVALID_WRITE_INPUT",
                    "INVALID_CHECK_INPUT",
                    "INVALID_EXPAND_INPUT",
                    "INVALID_OBJECT_FORMAT",
                    "INVALID_USER",
                    "INVALID_TUPLE",
                    "AUTHORIZATION_MODEL_NOT_FOUND",
                    "TYPE_NOT_FOUND",
                    "RELATION_NOT_FOUND",
                    "STORE_ID_INVALID_LENGTH",
                    "ID_TOO_LONG",
                    "INVALID_CONTINUATION_TOKEN",
                    "PAGE_SIZE_INVALID",
                    "PARAM_MISSING_VALUE",
                    "EXCEEDED_ENTITY_LIMIT",
                    "DUPLICATE_ENTRY",
                    "CANNOT_ALLOW_DUPLICATE_TUPLES",
                    "CANNOT_ALLOW_DUPLICATE_TYPES",
                    "INVALID_SCHEMA_VERSION",
                    "INVALID_TYPE_PATTERN",
                    "INVALID_RELATION_PATTERN",
                    "INVALID_OBJECT_PATTERN",
                    "INVALID_FORMAT",
                    "INVALID_EMAIL_FORMAT",
                    "INVALID_PASSWORD_STRENGTH",
                    "FIELD_TOO_SHORT",
                    "FIELD_TOO_LONG",
                    "UNSUPPORTED_MEDIA_TYPE"
                ],
                "default": "NO_ERROR",
                "description": "- VALIDATION_ERROR: General validation errors\n - AUTHORIZATION_MODEL_NOT_FOUND: Resource not found errors\n - INVALID_CONTINUATION_TOKEN: Input errors\n - DUPLICATE_ENTRY: Conflict errors\n - INVALID_SCHEMA_VERSION: Schema errors\n - INVALID_FORMAT: New validation error codes\n\nGeneral invalid format\n - INVALID_EMAIL_FORMAT: Email format is invalid\n - INVALID_PASSWORD_STRENGTH: Password does not meet strength requirements\n - FIELD_TOO_SHORT: Field value is too short\n - FIELD_TOO_LONG: Field value is too long\n - UNSUPPORTED_MEDIA_TYPE: Media type is not supported",
                "title": "Enhanced ValidationErrorCode represents validation and business logic error codes"
            },
            "ValidationErrorMessageResponse": {
                "type": "object",
                "example": {
                    "code": 2000,
                    "message": "Validation failed",
                    "field_violations": [
                        {
                            "field": "email",
                            "validation": "format",
                            "message": "Invalid email format"
                        }
                    ],
                    "entity_violations": {
                        "user": [
                            "duplicate_email",
                            "invalid_age"
                        ]
                    }
                },
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ValidationErrorCode"
                    },
                    "message": {
                        "type": "string",
                        "title": "Human-readable error message"
                    },
                    "fieldViolations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldViolation"
                        }
                    },
                    "schemaValidation": {
                        "$ref": "#/components/schemas/SchemaValidation"
                    },
                    "resourceValidation": {
                        "$ref": "#/components/schemas/ResourceValidation"
                    },
                    "errorResponse": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    }
                },
                "description": "Represents data validation and business logic errors",
                "title": "Validation Error Response"
            },
            "Workspace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uniqueIdentifier": {
                        "type": "string"
                    },
                    "s3BucketName": {
                        "type": "string"
                    },
                    "s3FolderPath": {
                        "type": "string"
                    },
                    "storageQuota": {
                        "type": "string",
                        "format": "int64"
                    },
                    "usedStorage": {
                        "type": "string",
                        "format": "int64"
                    },
                    "allowPublicSharing": {
                        "type": "boolean"
                    },
                    "requireApproval": {
                        "type": "boolean"
                    },
                    "gdprCompliant": {
                        "type": "boolean"
                    },
                    "hipaaCompliant": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderMetadata"
                        },
                        "title": "Relationships"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentTemplate"
                        }
                    },
                    "sharing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceSharing"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceActivity"
                        }
                    },
                    "compliance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceCompliance"
                        }
                    },
                    "installedApps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketplaceApp"
                        }
                    }
                }
            },
            "WorkspaceActivity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "activityType": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WorkspaceCompliance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "complianceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "certificationId": {
                        "type": "string"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WorkspaceSharing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "sharedWithEmail": {
                        "type": "string"
                    },
                    "permissionLevel": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    }
}